<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" encoding="UTF-8" href="iform.xsl" version="1.0"?>
<!DOCTYPE instructionsection PUBLIC "-//ARM//DTD instructionsection //EN" "iform-p.dtd">
<!-- Copyright (c) 2010-2022 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->

<instructionsection id="SVC" title="SVC -- A64" type="instruction">
  <docvars>
    <docvar key="instr-class" value="system" />
    <docvar key="isa" value="A64" />
    <docvar key="mnemonic" value="SVC" />
  </docvars>
  <heading>SVC</heading>
  <desc>
    <brief>
      <para>Supervisor Call</para>
    </brief>
    <authored>
      <para>Supervisor Call causes an exception to be taken to EL1.</para>
      <para>On executing an <instruction>SVC</instruction> instruction, the PE records the exception as a Supervisor Call exception in <xref linkend="ESR_ELx">ESR_ELx</xref>, using the EC value <hexnumber>0x15</hexnumber>, and the value of the immediate argument.</para>
    </authored>
  </desc>
  <alias_list howmany="0"></alias_list>
  <classes>
    <iclass name="System" oneof="1" id="iclass_system" no_encodings="1" isa="A64">
      <docvars>
        <docvar key="instr-class" value="system" />
        <docvar key="isa" value="A64" />
        <docvar key="mnemonic" value="SVC" />
      </docvars>
      <iclassintro count="1"></iclassintro>
      <regdiagram form="32" psname="aarch64/instrs/system/exceptions/runtime/svc/SVC_EX_exception">
        <box hibit="31" width="8" settings="8">
          <c>1</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>1</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="23" width="3" name="opc" settings="3">
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="20" width="16" name="imm16" usename="1">
          <c colspan="16"></c>
        </box>
        <box hibit="4" width="3" name="op2" settings="3">
          <c>0</c>
          <c>0</c>
          <c>0</c>
        </box>
        <box hibit="1" width="2" name="LL" settings="2">
          <c>0</c>
          <c>1</c>
        </box>
      </regdiagram>
      <encoding name="SVC_EX_exception" oneofinclass="1" oneof="1" label="">
        <docvars>
          <docvar key="instr-class" value="system" />
          <docvar key="isa" value="A64" />
          <docvar key="mnemonic" value="SVC" />
        </docvars>
        <asmtemplate><text>SVC  #</text><a link="sa_imm" hover="16-bit unsigned immediate [0-65535] (field &quot;imm16&quot;)">&lt;imm&gt;</a></asmtemplate>
      </encoding>
      <ps_section howmany="1">
        <ps name="aarch64/instrs/system/exceptions/runtime/svc/SVC_EX_exception" mylink="aarch64.instrs.system.exceptions.runtime.svc.SVC_EX_exception" enclabels="" sections="1" secttype="noheading">
          <pstext mayhavelinks="1" section="Decode" rep_section="decode">// Empty.</pstext>
        </ps>
      </ps_section>
    </iclass>
  </classes>
  <explanations scope="all">
    <explanation enclist="SVC_EX_exception" symboldefcount="1">
      <symbol link="sa_imm">&lt;imm&gt;</symbol>
      <account encodedin="imm16">
        <intro>
          <para>Is a 16-bit unsigned immediate, in the range 0 to 65535, encoded in the "imm16" field.</para>
        </intro>
      </account>
    </explanation>
  </explanations>
  <ps_section howmany="1">
    <ps name="aarch64/instrs/system/exceptions/runtime/svc/SVC_EX_exception" mylink="execute" enclabels="" sections="1" secttype="Operation">
      <pstext mayhavelinks="1" section="Execute" rep_section="execute"><a link="AArch64.CheckForSVCTrap.1" file="shared_pseudocode.xml" hover="function: AArch64.CheckForSVCTrap(bits(16) immediate)">AArch64.CheckForSVCTrap</a>(imm16);
<a link="AArch64.CallSupervisor.1" file="shared_pseudocode.xml" hover="function: AArch64.CallSupervisor(bits(16) immediate_in)">AArch64.CallSupervisor</a>(imm16);</pstext>
    </ps>
  </ps_section>
</instructionsection>
