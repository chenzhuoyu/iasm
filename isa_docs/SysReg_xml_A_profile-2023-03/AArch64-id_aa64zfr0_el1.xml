<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>ID_AA64ZFR0_EL1</reg_short_name>
        
        <reg_long_name>SVE Feature ID Register 0</reg_long_name>



      
      



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Provides additional information about the implemented features of the AArch64 Scalable Vector Extension instruction set, when one or more of FEAT_SVE and FEAT_SME is implemented.</para>

      </purpose_text>
      <purpose_text>
        <para>For general information about the interpretation of the ID registers, see <xref browsertext="'Principles of the ID scheme for fields in ID registers'" filename="D_aarch64_system_register_descriptions.fm" linkend="BABFAFHI"/>.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Identification registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <note><para>Prior to the introduction of the features described by this register, this register was unnamed and reserved, <arm-defined-word>RES0</arm-defined-word> from EL1, EL2, and EL3.</para><para>If <xref browsertext="FEAT_SME" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME"/> is implemented and <xref browsertext="FEAT_SVE" filename="A_armv8_architecture_extensions.fm" linkend="SVE"/> is not implemented, then SVE instructions can only be executed when the PE is in Streaming SVE mode and the instructions are legal to execute in Streaming SVE mode.</para></note>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>ID_AA64ZFR0_EL1 is a 64-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="64">
  <text_before_fields/>
  <field id="fieldset_0-63_60" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>63</field_msb>
    <field_lsb>60</field_lsb>
    <rel_range>63:60</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-59_56" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>F64MM</field_name>
    <field_msb>59</field_msb>
    <field_lsb>56</field_lsb>
    <rel_range>59:56</rel_range>
    <field_description order="before">
      <para>Indicates support for SVE FP64 double-precision floating-point matrix multiplication instructions. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para><xref browsertext="FEAT_F64MM" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.F64MM"/> implements the functionality identified by <binarynumber>0b0001</binarynumber>.</para>
<para>From Armv8.2, the permitted values are <binarynumber>0b0000</binarynumber> and <binarynumber>0b0001</binarynumber>.</para>
<para>When the PE is in Streaming SVE mode and it is not known whether <xref browsertext="FEAT_SME_FA64" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME_FA64"/> is implemented and enabled, software should not attempt to execute the instructions described by nonzero values of this field, irrespective of the value of this field.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>Double-precision matrix multiplication and related SVE instructions are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>Double-precision variant of the FMMLA instruction, and the LD1RO* instructions are implemented. The 128-bit element variants of the SVE TRN1, TRN2, UZP1, UZP2, ZIP1, and ZIP2 instructions are also implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-55_52" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>F32MM</field_name>
    <field_msb>55</field_msb>
    <field_lsb>52</field_lsb>
    <rel_range>55:52</rel_range>
    <field_description order="before">
      <para>Indicates support for the SVE FP32 single-precision floating-point matrix multiplication instruction. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para><xref browsertext="FEAT_F32MM" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.F32MM"/> implements the functionality identified by <binarynumber>0b0001</binarynumber>.</para>
<para>From Arm v8.2, the permitted values are <binarynumber>0b0000</binarynumber> and <binarynumber>0b0001</binarynumber>.</para>
<para>When the PE is in Streaming SVE mode and it is not known whether <xref browsertext="FEAT_SME_FA64" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME_FA64"/> is implemented and enabled, software should not attempt to execute the instructions described by nonzero values of this field, irrespective of the value of this field.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>Single-precision matrix multiplication instruction is not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>Single-precision variant of the FMMLA instruction is implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-51_48" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>51</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>51:48</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-47_44" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>I8MM</field_name>
    <field_msb>47</field_msb>
    <field_lsb>44</field_lsb>
    <rel_range>47:44</rel_range>
    <field_description order="before">
      <para>Indicates support for SVE Int8 matrix multiplication instructions. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para><xref browsertext="FEAT_I8MM" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.I8MM"/> implements the functionality identified by <binarynumber>0b0001</binarynumber>.</para>
<para>When Advanced SIMD and SVE are both implemented, this field must return the same value as <register_link state="AArch64" id="AArch64-id_aa64isar1_el1.xml">ID_AA64ISAR1_EL1</register_link>.I8MM.</para>
<para>From Armv8.6, the only permitted value is <binarynumber>0b0001</binarynumber>.</para>
<para>When the PE is in Streaming SVE mode and it is not known whether <xref browsertext="FEAT_SME_FA64" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME_FA64"/> is implemented and enabled, software should not attempt to execute the SVE instructions SMMLA, UMMLA, and USMMLA, irrespective of the value of this field.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>SVE Int8 matrix multiplication instructions are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>SVE SMMLA, SUDOT, UMMLA, USMMLA, and USDOT instructions are implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-43_40" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>SM4</field_name>
    <field_msb>43</field_msb>
    <field_lsb>40</field_lsb>
    <rel_range>43:40</rel_range>
    <field_description order="before">
      <para>Indicates support for SVE SM4 instructions. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para>FEAT_SVE_SM4 implements the functionality identified by <binarynumber>0b0001</binarynumber>.</para>
<para>When the PE is in Streaming SVE mode and it is not known whether <xref browsertext="FEAT_SME_FA64" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME_FA64"/> is implemented and enabled, software should not attempt to execute the instructions described by nonzero values of this field, irrespective of the value of this field.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>SVE SM4 instructions are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>SVE SM4E and SM4EKEY instructions are implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-39_36" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>39</field_msb>
    <field_lsb>36</field_lsb>
    <rel_range>39:36</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-35_32" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>SHA3</field_name>
    <field_msb>35</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>35:32</rel_range>
    <field_description order="before">
      <para>Indicates support for the SVE SHA3 instructions. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para><xref browsertext="FEAT_SVE_SHA3" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SVE_SHA3"/> implements the functionality identified by <binarynumber>0b0001</binarynumber>.</para>
<para>When the PE is in Streaming SVE mode and it is not known whether <xref browsertext="FEAT_SME_FA64" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME_FA64"/> is implemented and enabled, software should not attempt to execute the instructions described by nonzero values of this field, irrespective of the value of this field.</para>
<para>However, if both FEAT_SME2p1 and <xref browsertext="FEAT_SVE_SHA3" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SVE_SHA3"/> are implemented, then the SVE RAX1 instruction can be executed when the PE is in Streaming SVE mode regardless of whether <xref browsertext="FEAT_SME_FA64" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME_FA64"/> is implemented and enabled.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>SVE SHA3 instructions are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>SVE RAX1 instruction is implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-31_28" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>31:28</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-27_24" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>B16B16</field_name>
    <field_msb>27</field_msb>
    <field_lsb>24</field_lsb>
    <rel_range>27:24</rel_range>
    <field_description order="before">
      <para>Indicates support for SVE2.1 non-widening BFloat16 instructions. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>FEAT_SVE_B16B16 implements the functionality identified by <binarynumber>0b0001</binarynumber>.</para>
<para>This field must indicate the same level of support as <register_link state="AArch64" id="AArch64-id_aa64smfr0_el1.xml">ID_AA64SMFR0_EL1</register_link>.B16B16.</para>
<para>If one or more of FEAT_SVE2p1 and FEAT_SME2p1 is implemented, the values <binarynumber>0b0000</binarynumber> and <binarynumber>0b0001</binarynumber> are permitted.</para>
<para>Otherwise, the only permitted value is <binarynumber>0b0000</binarynumber>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>SVE2.1 non-widening BFloat16 instructions are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>SVE2.1 BFADD, BFCLAMP, BFMAX, BFMAXNM, BFMIN, BFMINNM, BFMLA, BFMLS, BFMUL, and BFSUB instructions with BFloat16 operands and results are implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-23_20" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>BF16</field_name>
    <field_msb>23</field_msb>
    <field_lsb>20</field_lsb>
    <rel_range>23:20</rel_range>
    <field_description order="before">
      <para>Indicates support for SVE BFloat16 instructions. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para><xref browsertext="FEAT_BF16" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.BF16"/> adds the functionality identified by <binarynumber>0b0001</binarynumber>.</para>
<para><xref browsertext="FEAT_EBF16" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_EBF16"/> adds the functionality identified by <binarynumber>0b0010</binarynumber>.</para>
<para>This field must return the same value as <register_link state="AArch64" id="AArch64-id_aa64isar1_el1.xml">ID_AA64ISAR1_EL1</register_link>.BF16.</para>
<para>When the PE is in Streaming SVE mode and it is not known whether <xref browsertext="FEAT_SME_FA64" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME_FA64"/> is implemented and enabled, software should not attempt to execute the SVE instruction BFMMLA, irrespective of the value of this field.</para>
<para>From Armv8.6 and Armv9.1, the value <binarynumber>0b0000</binarynumber> is not permitted.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>SVE BFloat16 instructions are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>SVE BFCVT, BFCVTNT, BFDOT, BFMLALB, BFMLALT, and BFMMLA instructions are implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
          <para>As <binarynumber>0b0001</binarynumber>, but the <register_link state="AArch64" id="AArch64-fpcr.xml">FPCR</register_link>.EBF field is also supported.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-19_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>BitPerm</field_name>
    <field_msb>19</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>19:16</rel_range>
    <field_description order="before">
      <para>Indicates support for SVE bit permute instructions. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para>FEAT_SVE_BitPerm implements the functionality identified by <binarynumber>0b0001</binarynumber>.</para>
<para>When the PE is in Streaming SVE mode and it is not known whether <xref browsertext="FEAT_SME_FA64" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME_FA64"/> is implemented and enabled, software should not attempt to execute the instructions described by nonzero values of this field, irrespective of the value of this field.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>SVE bit permute instructions are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>SVE BDEP, BEXT, and BGRP instructions are implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-15_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>15</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>15:8</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-7_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>AES</field_name>
    <field_msb>7</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>7:4</rel_range>
    <field_description order="before">
      <para>Indicates support for SVE AES instructions. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para>FEAT_SVE_AES implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para>
<para>FEAT_SVE_PMULL128 implements the functionality identified by the value <binarynumber>0b0010</binarynumber>.</para>
<para>The permitted values are <binarynumber>0b0000</binarynumber> and <binarynumber>0b0010</binarynumber>.</para>
<para>When the PE is in Streaming SVE mode and it is not known whether <xref browsertext="FEAT_SME_FA64" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_SME_FA64"/> is implemented and enabled, software should not attempt to execute the instructions described by nonzero values of this field, irrespective of the value of this field.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>SVE AES* instructions are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>SVE AESE, AESD, AESMC, and AESIMC instructions are implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
          <para>As <binarynumber>0b0001</binarynumber>, plus 64-bit source element variants of SVE PMULLB and PMULLT instructions are implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-3_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>SVEver</field_name>
    <field_msb>3</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>3:0</rel_range>
    <field_description order="before">
      <para>Indicates support for SVE instructions when 
one or more of FEAT_SME and 
FEAT_SVE is implemented. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para>From Armv9, if this register is present, the value <binarynumber>0b0000</binarynumber> is not permitted.</para>
<para>FEAT_SVE2 implements the functionality identified by <binarynumber>0b0001</binarynumber> when the PE is not in Streaming SVE mode.</para>
<para>FEAT_SME implements the functionality identified by <binarynumber>0b0001</binarynumber> when the PE is in Streaming SVE mode.</para>
<para>FEAT_SME2p1 implements the functionality identified by <binarynumber>0b0010</binarynumber> when the PE is in Streaming SVE mode.</para>
<para>FEAT_SVE2p1 implements the functionality identified by <binarynumber>0b0010</binarynumber> when the PE is not in Streaming SVE mode.</para>
<para>From Armv9.4, the value <binarynumber>0b0001</binarynumber> is not permitted.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>The SVE instructions are implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>As <binarynumber>0b0000</binarynumber>, and adds the mandatory SVE2 instructions.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
          <para>As <binarynumber>0b0001</binarynumber>, and adds the mandatory SVE2.1 instructions.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="64">
  <fieldat id="fieldset_0-63_60" msb="63" lsb="60"/>
  <fieldat id="fieldset_0-59_56" msb="59" lsb="56"/>
  <fieldat id="fieldset_0-55_52" msb="55" lsb="52"/>
  <fieldat id="fieldset_0-51_48" msb="51" lsb="48"/>
  <fieldat id="fieldset_0-47_44" msb="47" lsb="44"/>
  <fieldat id="fieldset_0-43_40" msb="43" lsb="40"/>
  <fieldat id="fieldset_0-39_36" msb="39" lsb="36"/>
  <fieldat id="fieldset_0-35_32" msb="35" lsb="32"/>
  <fieldat id="fieldset_0-31_28" msb="31" lsb="28"/>
  <fieldat id="fieldset_0-27_24" msb="27" lsb="24"/>
  <fieldat id="fieldset_0-23_20" msb="23" lsb="20"/>
  <fieldat id="fieldset_0-19_16" msb="19" lsb="16"/>
  <fieldat id="fieldset_0-15_8" msb="15" lsb="8"/>
  <fieldat id="fieldset_0-7_4" msb="7" lsb="4"/>
  <fieldat id="fieldset_0-3_0" msb="3" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          






        
        <access_mechanism accessor="MRS ID_AA64ZFR0_EL1" type="SystemAccessor">
            <encoding>
            <access_instruction>MRS &lt;Xt&gt;, ID_AA64ZFR0_EL1</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b000"/>
                
                <enc n="CRn" v="0b0000"/>
                
                <enc n="CRm" v="0b0100"/>
                
                <enc n="op2" v="0b100"/>
            </encoding>
            <access_permission>
                <ps name="MRS" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    if IsFeatureImplemented(FEAT_IDST) then
        if EL2Enabled() &amp;&amp; HCR_EL2.TGE == '1' then
            AArch64.SystemAccessTrap(EL2, 0x18);
        else
            AArch64.SystemAccessTrap(EL1, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; (IsFeatureImplemented(FEAT_FGT) || !IsZero(ID_AA64ZFR0_EL1) || boolean IMPLEMENTATION_DEFINED "ID_AA64ZFR0_EL1 trapped by HCR_EL2.TID3") &amp;&amp; HCR_EL2.TID3 == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        X[t, 64] = ID_AA64ZFR0_EL1;
elsif PSTATE.EL == EL2 then
    X[t, 64] = ID_AA64ZFR0_EL1;
elsif PSTATE.EL == EL3 then
    X[t, 64] = ID_AA64ZFR0_EL1;
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>