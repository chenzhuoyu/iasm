<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>MPAMF_MBWUMON_IDR</reg_short_name>
        
        <reg_long_name>MPAM Features Memory Bandwidth Usage Monitoring ID register</reg_long_name>

        <power_domain_text>The power domain of MPAMF_MBWUMON_IDR is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word></power_domain_text>


      
        <reg_condition otherwise="RES0">when FEAT_MPAM is implemented, MPAMF_IDR.HAS_MSMON == 1 and MPAMF_MSMON_IDR.MSMON_MBWU == 1</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_s</reg_frame>
    <reg_offset><hexnumber>0x0090</hexnumber></reg_offset>
    <reg_instance>MPAMF_MBWUMON_IDR_s</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_ns</reg_frame>
    <reg_offset><hexnumber>0x0090</hexnumber></reg_offset>
    <reg_instance>MPAMF_MBWUMON_IDR_ns</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rt</reg_frame>
    <reg_offset><hexnumber>0x0090</hexnumber></reg_offset>
    <reg_instance>MPAMF_MBWUMON_IDR_rt</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rl</reg_frame>
    <reg_offset><hexnumber>0x0090</hexnumber></reg_offset>
    <reg_instance>MPAMF_MBWUMON_IDR_rl</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Indicates the number of memory bandwidth usage monitor instances implemented. This register also indicates several properties of MBWU monitoring, including whether the implementation supports capture, scaling, or long counters.</para>

      </purpose_text>
      <purpose_text>
        <para>MPAMF_MBWUMON_IDR_s indicates the number of Secure memory bandwidth usage monitor instances.
MPAMF_MBWUMON_IDR_ns indicates the number of Non-secure memory bandwidth usage monitor instances.
MPAMF_MBWUMON_IDR_rt indicates the number of Root memory bandwidth usage monitor instances.
MPAMF_MBWUMON_IDR_rl indicates the number of Realm memory bandwidth usage monitor instances.</para>

      </purpose_text>
      <purpose_text>
        <para>If <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>.HAS_RIS is 1, fields that mention RIS must reflect the properties of the resource instance currently selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS. Fields that do not mention RIS are constant across all resource instances.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Memory Partitioning and Monitoring registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>The power and reset domain of each MSC component is specific to that component.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>MPAMF_MBWUMON_IDR is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_31" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_CAPTURE</field_name>
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>31</rel_range>
    <field_description order="before">
      <para>The implementation supports copying an <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link> to the corresponding <register_link state="ext" id="ext-msmon_mbwu_capture.xml">MSMON_MBWU_CAPTURE</register_link> on a capture event.</para>
    </field_description>
    <field_description order="after"><para>If RIS is implemented, this field indicates that MBWU monitor capture is implemented for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
<para>If MPAMF_MBWUMON_IDR.HAS_LONG is 1, this also indicates that <register_link state="ext" id="ext-msmon_mbwu_l_capture.xml">MSMON_MBWU_L_CAPTURE</register_link> is implemented.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-msmon_mbwu_capture.xml">MSMON_MBWU_CAPTURE</register_link> is not implemented and there is no support for capture events in the MBWU monitor.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The <register_link state="ext" id="ext-msmon_mbwu_capture.xml">MSMON_MBWU_CAPTURE</register_link> register is implemented and the MBWU monitor supports the capture event behavior.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-30_30-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_LONG</field_name>
    <field_msb>30</field_msb>
    <field_lsb>30</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>Indicates whether <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> is implemented.</para>
<para>If HAS_CAPTURE is 1, indicates whether <register_link state="ext" id="ext-msmon_mbwu_l_capture.xml">MSMON_MBWU_L_CAPTURE</register_link> is implemented.</para></field_description>
    <field_description order="after"><para>If RIS is implemented, this field indicates that the long MBWU monitor is implemented for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
<para>If MPAMF_MBWUMON_IDR.HAS_CAPTURE is 1, this also indicates that <register_link state="ext" id="ext-msmon_mbwu_l_capture.xml">MSMON_MBWU_L_CAPTURE</register_link> is implemented.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not implement <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> or <register_link state="ext" id="ext-msmon_mbwu_l_capture.xml">MSMON_MBWU_L_CAPTURE</register_link>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Implements <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link>. If HAS_CAPTURE == 1, <register_link state="ext" id="ext-msmon_mbwu_l_capture.xml">MSMON_MBWU_L_CAPTURE</register_link> is also implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-30_30-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>30</field_msb>
    <field_lsb>30</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-29_29-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>LWD</field_name>
    <field_msb>29</field_msb>
    <field_lsb>29</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>Long register VALUE width.</para>
<para>If <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.HAS_LONG is 0, <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.LWD must also be 0.</para></field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates the length of the <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link>.VALUE field implemented for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>If <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.HAS_LONG is 1, <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> has 44-bit VALUE field in bits [43:0]. Bits [62:44] are <arm-defined-word>RES0</arm-defined-word>. If HAS_LONG is 1 and <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.HAS_CAPTURE is 1, <register_link state="ext" id="ext-msmon_mbwu_l_capture.xml">MSMON_MBWU_L_CAPTURE</register_link> also has 44-bit VALUE field in bits [43:0].</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> has 63-bit VALUE field in bits [62:0]. If <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.HAS_CAPTURE == 1, <register_link state="ext" id="ext-msmon_mbwu_l_capture.xml">MSMON_MBWU_L_CAPTURE</register_link> also has 63-bit VALUE field in bits [62:0].</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-29_29-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>29</field_msb>
    <field_lsb>29</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-28_28-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_RWBW</field_name>
    <field_msb>28</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Read/write bandwidth selection is implemented in <register_link state="ext" id="ext-msmon_cfg_mbwu_flt.xml">MSMON_CFG_MBWU_FLT</register_link>.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates whether read/write bandwidth collection selection is available in <register_link state="ext" id="ext-msmon_cfg_mbwu_flt.xml">MSMON_CFG_MBWU_FLT</register_link> for resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Read/write bandwidth selection is not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Read/write bandwidth selection is implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-28_28-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>28</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-27_27-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_OFLOW_LNKG</field_name>
    <field_msb>27</field_msb>
    <field_lsb>27</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Supports <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_LNKG field to control how overflow on an instance affects other monitor instances in this MSC.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates that <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_LNKG is implemented for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support MBWU overflow linkage.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Supports MBWU overflow linkage and the <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_LNKG field.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-27_27-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>27</field_msb>
    <field_lsb>27</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-26_26-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_OFSR</field_name>
    <field_msb>26</field_msb>
    <field_lsb>26</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>The MBWU monitor overflow status bitmap register, <register_link state="ext" id="ext-msmon_mbwu_ofsr.xml">MSMON_MBWU_OFSR</register_link>, is implemented.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates that MBWU monitor overflow status bitmap register is implemented for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-msmon_mbwu_ofsr.xml">MSMON_MBWU_OFSR</register_link> register is not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-msmon_mbwu_ofsr.xml">MSMON_MBWU_OFSR</register_link> register is implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-26_26-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>26</field_msb>
    <field_lsb>26</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-25_25" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_CEVNT_OFLW</field_name>
    <field_msb>25</field_msb>
    <field_lsb>25</field_lsb>
    <rel_range>25</rel_range>
    <field_description order="before">
      <para>Supports <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.CEVNT_OFLW field which can enable the MBWU monitor instance to perform overflow behaviors on a capture event.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates that <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.CEVNT_OFLW is implemented for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.CEVNT_OFLW.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Supports <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.CEVNT_OFLW.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-24_24-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_OFLOW_CAPT</field_name>
    <field_msb>24</field_msb>
    <field_lsb>24</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Supports <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_CAPT field which can enable the MBWU monitor instance to capture the monitor on an overflow.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates that <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_CAPT is implemented for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_CAPT.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Supports <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_CAPT.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-24_24-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>24</field_msb>
    <field_lsb>24</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-23_21" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>23</field_msb>
    <field_lsb>21</field_lsb>
    <rel_range>23:21</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-20_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>SCALE</field_name>
    <field_msb>20</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>20:16</rel_range>
    <field_description order="before">
      <para>Scaling of <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE in bits. If scaling is enabled by <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.SCLEN, the byte count in the VALUE field has been shifted by SCALE bits to the right.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates the scale value for <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE field for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00000</field_value>
        <field_value_description>
          <para>Scaling is not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0bxxxxx</field_value>
        <field_value_description>
          <para>Other values are right shift count when scaling is enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-15_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>NUM_MON</field_name>
    <field_msb>15</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>15:0</rel_range>
    <field_description order="before">
      <para>The number of memory bandwidth usage monitor instances implemented. The largest monitor instance selector, <register_link state="ext" id="ext-msmon_cfg_mon_sel.xml">MSMON_CFG_MON_SEL</register_link>.MON_SEL, is NUM_MON minus 1.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates the number of MBWU monitor instances for <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE field for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
    </field_description>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_31" msb="31" lsb="31"/>
  <fieldat id="fieldset_0-30_30-1" msb="30" lsb="30"/>
  <fieldat id="fieldset_0-29_29-1" msb="29" lsb="29"/>
  <fieldat id="fieldset_0-28_28-1" msb="28" lsb="28"/>
  <fieldat id="fieldset_0-27_27-1" msb="27" lsb="27"/>
  <fieldat id="fieldset_0-26_26-1" msb="26" lsb="26"/>
  <fieldat id="fieldset_0-25_25" msb="25" lsb="25"/>
  <fieldat id="fieldset_0-24_24-1" msb="24" lsb="24"/>
  <fieldat id="fieldset_0-23_21" msb="23" lsb="21"/>
  <fieldat id="fieldset_0-20_16" msb="20" lsb="16"/>
  <fieldat id="fieldset_0-15_0" msb="15" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>This register is within the MPAM feature page memory frames. In a system that supports Secure, Non-secure, Root, and Realm memory maps, there must be MPAM feature pages in all four address maps.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_MBWUMON_IDR is read-only.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_MBWUMON_IDR must be readable from the Non-secure, Secure, Root, and Realm MPAM feature pages.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_MBWUMON_IDR is permitted to have the same contents when read from the Secure, Non-secure, Root, and Realm MPAM feature pages unless the register contents are different for the different versions:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>MPAMF_MBWUMON_IDR_s is permitted to have either the same or different contents to MPAMF_MBWUMON_IDR_ns, MPAMF_MBWUMON_IDR_rt, or MPAMF_MBWUMON_IDR_rl.</content>
</listitem><listitem><content>MPAMF_MBWUMON_IDR_ns is permitted to have either the same or different contents to MPAMF_MBWUMON_IDR_rt or MPAMF_MBWUMON_IDR_rl.</content>
</listitem><listitem><content>MPAMF_MBWUMON_IDR_rt is permitted to have either the same or different contents to MPAMF_MBWUMON_IDR_rl.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>There must be separate registers in the Secure (MPAMF_MBWUMON_IDR_s), Non-secure (MPAMF_MBWUMON_IDR_ns), Root (MPAMF_MBWUMON_IDR_rt), and Realm (MPAMF_MBWUMON_IDR_rl) MPAM feature pages.</para>

      </access_permission_text>
      <access_permission_text>
        <para>When <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>.HAS_RIS is 1, MPAMF_MBWUMON_IDR shows the configuration of memory bandwidth monitoring for the bandwidth resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS. Fields that mention RIS in their field descriptions have values that track the implemented properties of the resource instance. Fields that do not mention RIS are constant across all resource instances.</para>

      </access_permission_text>
      <access_permission_text>
        <para>Access to MPAMF_MBWUMON_IDR is not affected by <register_link state="ext" id="ext-msmon_cfg_mon_sel.xml">MSMON_CFG_MON_SEL</register_link>.RIS.</para>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>