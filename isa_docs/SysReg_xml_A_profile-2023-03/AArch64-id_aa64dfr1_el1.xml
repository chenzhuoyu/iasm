<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>ID_AA64DFR1_EL1</reg_short_name>
        
        <reg_long_name>AArch64 Debug Feature Register 1</reg_long_name>



      
      



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Provides top level information about the debug system in AArch64.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Identification registers</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>ID_AA64DFR1_EL1 is a 64-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="64">
  <fields_instance>ID_AA64DFR1_EL1</fields_instance>
  <text_before_fields/>
  <field id="fieldset_0-63_56-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>ABL_CMPs</field_name>
    <field_msb>63</field_msb>
    <field_lsb>56</field_lsb>
    <rel_range>7:0</rel_range>
    <field_description order="before">
      <para>Number of breakpoints that support address linking, minus 1.</para>
    </field_description>
    <field_description order="after"><para>The values <hexnumber>0x40</hexnumber> to <hexnumber>0xFF</hexnumber> are reserved.</para>
<para>The number of breakpoints that support address linking is never more than the number of watchpoints.</para></field_description>
    <fields_condition>When FEAT_ABLE is implemented</fields_condition>
  </field>
  <field id="fieldset_0-63_56-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>63</field_msb>
    <field_lsb>56</field_lsb>
    <rel_range>7:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-55_52" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>DPFZS</field_name>
    <field_msb>55</field_msb>
    <field_lsb>52</field_lsb>
    <rel_range>55:52</rel_range>
    <field_description order="before">
      <para>Behavior of the cycle counter when event counting is frozen by a Statistical Profiling management event. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>FEAT_SPEv1p2_DPFZS implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para>
<para>If <xref browsertext="FEAT_PMUv3p7" filename="A_armv8_architecture_extensions.fm" linkend="v8.7.PMU"/> is not implemented or <xref browsertext="FEAT_SPEv1p2" filename="A_armv8_architecture_extensions.fm" linkend="v8.7.SPE"/> is not implemented, the only permitted value is <binarynumber>0b0000</binarynumber>.</para>
<para>If <xref browsertext="FEAT_PMUv3p9" filename="A_armv8_architecture_extensions.fm" linkend="FEAT_PMUv3p9"/> is implemented and <xref browsertext="FEAT_SPEv1p4" filename="A_armv8_architecture_extensions.fm" linkend="FEAT_SPEv1p4"/> are implemented, the only permitted value is <binarynumber>0b0001</binarynumber>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>The cycle counter <register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link> is never affected by <register_link state="AArch64" id="AArch64-pmcr_el0.xml">PMCR_EL0</register_link>.FZS.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>The cycle counter <register_link state="AArch64" id="AArch64-pmccntr_el0.xml">PMCCNTR_EL0</register_link> does not count when <register_link state="AArch64" id="AArch64-pmcr_el0.xml">PMCR_EL0</register_link>.DP is 1 and counting by event counters accessible to EL1 is frozen by the <register_link state="AArch64" id="AArch64-pmcr_el0.xml">PMCR_EL0</register_link>.FZS mechanism.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-51_48" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EBEP</field_name>
    <field_msb>51</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>51:48</rel_range>
    <field_description order="before">
      <para>Exception-based event profiling. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para>FEAT_EBEP implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>Exception-based event profiling not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>Exception-based event profiling implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-47_44" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ITE</field_name>
    <field_msb>47</field_msb>
    <field_lsb>44</field_lsb>
    <rel_range>47:44</rel_range>
    <field_description order="before">
      <para>Instrumentation Trace Extension. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para><xref browsertext="FEAT_ITE" filename="A_armv8_architecture_extensions.fm" linkend="FEAT_ITE"/> implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>Instrumentation Trace Extension not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>Instrumentation Trace Extension implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-43_40" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ABLE</field_name>
    <field_msb>43</field_msb>
    <field_lsb>40</field_lsb>
    <rel_range>43:40</rel_range>
    <field_description order="before">
      <para>Address Breakpoint Linking Extension. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para><xref browsertext="FEAT_ABLE" filename="A_armv8_architecture_extensions.fm" linkend="FEAT_ABLE"/> implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>Address Breakpoint Linking Extension not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>Address Breakpoint Linking Extension implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-39_36" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PMICNTR</field_name>
    <field_msb>39</field_msb>
    <field_lsb>36</field_lsb>
    <rel_range>39:36</rel_range>
    <field_description order="before">
      <para>PMU fixed-function instruction counter. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para><xref browsertext="FEAT_PMUv3_ICNTR" filename="A_armv8_architecture_extensions.fm" linkend="FEAT_PMUv3_ICNTR"/> implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para>
<para>If <xref browsertext="FEAT_PMUv3" filename="A_armv8_architecture_extensions.fm" linkend="v8.0.PMUv3"/> is not implemented, then the only permitted value is <binarynumber>0b0000</binarynumber>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>PMU fixed-function instruction counter not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>PMU fixed-function instruction counter implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-35_32" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>SPMU</field_name>
    <field_msb>35</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>35:32</rel_range>
    <field_description order="before">
      <para>System PMU extension. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para><xref browsertext="FEAT_SPMU" filename="A_armv8_architecture_extensions.fm" linkend="FEAT_SPMU"/> implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>System PMU extension not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>System PMU extension implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-31_24" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>CTX_CMPs</field_name>
    <field_msb>31</field_msb>
    <field_lsb>24</field_lsb>
    <rel_range>31:24</rel_range>
    <field_description order="before">
      <para>Number of breakpoints that are context-aware, minus 1. The value <hexnumber>0x00</hexnumber> means that the number of breakpoints that are context-aware is described by <register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.CTX_CMPs. Otherwise, the value of this field is the number of breakpoints that are context-aware, minus 1. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para>The value of this field is never greater than ID_AA64DFR1_EL1.BRPs.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0x00</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.CTX_CMPs is the number of breakpoints that are context-aware, minus 1.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0x01..0x3F</field_value>
        <field_value_description>
          <para>Number of breakpoints that are context-aware minus 1.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-23_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>WRPs</field_name>
    <field_msb>23</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>23:16</rel_range>
    <field_description order="before">
      <para>Number of watchpoints, minus 1. The value <hexnumber>0x00</hexnumber> means that the number of watchpoints is described by <register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.WRPs. Otherwise, the value of this field is the number of watchpoints, minus 1. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0x00</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.WRPs is the number of watchpoints, minus 1.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0x01..0x3F</field_value>
        <field_value_description>
          <para>Number of watchpoints minus 1.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-15_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>BRPs</field_name>
    <field_msb>15</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>15:8</rel_range>
    <field_description order="before">
      <para>Number of breakpoints, minus 1. The value <hexnumber>0x00</hexnumber> means that the number of breakpoints is described by <register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.BRPs. Otherwise, the value of this field is the number of breakpoints, minus 1. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0x00</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.BRPs is the number of breakpoints, minus 1.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0x01..0x3F</field_value>
        <field_value_description>
          <para>Number of breakpoints minus 1.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-7_0-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>SYSPMUID</field_name>
    <field_msb>7</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>7:0</rel_range>
    <field_description order="before">
      <para>System PMU ID. Indicates the largest permitted value that can be written to <register_link state="AArch64" id="AArch64-spmselr_el0.xml">SPMSELR_EL0</register_link>.SYSPMUSEL. Defined values are:</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para>Since System PMUs might not be contiguously accessible, this field does not necessarily indicate the total number of accessible System PMUs.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0x00..0x1F</field_value>
        <field_value_description>
          <para>The largest supported value that can be written to <register_link state="AArch64" id="AArch64-spmselr_el0.xml">SPMSELR_EL0</register_link>.SYSPMUSEL.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_SPMU is implemented</fields_condition>
  </field>
  <field id="fieldset_0-7_0-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>7</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>7:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="64">
  <fieldat id="fieldset_0-63_56-1" msb="63" lsb="56"/>
  <fieldat id="fieldset_0-55_52" msb="55" lsb="52"/>
  <fieldat id="fieldset_0-51_48" msb="51" lsb="48"/>
  <fieldat id="fieldset_0-47_44" msb="47" lsb="44"/>
  <fieldat id="fieldset_0-43_40" msb="43" lsb="40"/>
  <fieldat id="fieldset_0-39_36" msb="39" lsb="36"/>
  <fieldat id="fieldset_0-35_32" msb="35" lsb="32"/>
  <fieldat id="fieldset_0-31_24" msb="31" lsb="24"/>
  <fieldat id="fieldset_0-23_16" msb="23" lsb="16"/>
  <fieldat id="fieldset_0-15_8" msb="15" lsb="8"/>
  <fieldat id="fieldset_0-7_0-1" msb="7" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          






        
        <access_mechanism accessor="MRS ID_AA64DFR1_EL1" type="SystemAccessor">
            <encoding>
            <access_instruction>MRS &lt;Xt&gt;, ID_AA64DFR1_EL1</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b000"/>
                
                <enc n="CRn" v="0b0000"/>
                
                <enc n="CRm" v="0b0101"/>
                
                <enc n="op2" v="0b001"/>
            </encoding>
            <access_permission>
                <ps name="MRS" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    if IsFeatureImplemented(FEAT_IDST) then
        if EL2Enabled() &amp;&amp; HCR_EL2.TGE == '1' then
            AArch64.SystemAccessTrap(EL2, 0x18);
        else
            AArch64.SystemAccessTrap(EL1, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.TID3 == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        X[t, 64] = ID_AA64DFR1_EL1;
elsif PSTATE.EL == EL2 then
    X[t, 64] = ID_AA64DFR1_EL1;
elsif PSTATE.EL == EL3 then
    X[t, 64] = ID_AA64DFR1_EL1;
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:06; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>