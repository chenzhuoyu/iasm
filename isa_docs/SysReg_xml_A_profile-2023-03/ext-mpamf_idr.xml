<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>MPAMF_IDR</reg_short_name>
        
        <reg_long_name>MPAM Features Identification Register</reg_long_name>

        <power_domain_text>The power domain of MPAMF_IDR is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word></power_domain_text>


      
        <reg_condition otherwise="RES0">when FEAT_MPAM is implemented</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_s</reg_frame>
    <reg_offset><hexnumber>0x0000</hexnumber></reg_offset>
    <reg_instance>MPAMF_IDR_s</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_ns</reg_frame>
    <reg_offset><hexnumber>0x0000</hexnumber></reg_offset>
    <reg_instance>MPAMF_IDR_ns</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rt</reg_frame>
    <reg_offset><hexnumber>0x0000</hexnumber></reg_offset>
    <reg_instance>MPAMF_IDR_rt</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rl</reg_frame>
    <reg_offset><hexnumber>0x0000</hexnumber></reg_offset>
    <reg_instance>MPAMF_IDR_rl</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Indicates which memory partitioning and monitoring features are present on this MSC.</para>

      </purpose_text>
      <purpose_text>
        <para>MPAMF_IDR_s indicates the MPAM features accessed from the Secure MPAM feature page.
MPAMF_IDR_ns indicates the MPAM features accessed from the Non-secure MPAM feature page.
MPAMF_IDR_rt indicates the MPAM features accessed from the Root MPAM feature page.
MPAMF_IDR_rl indicates the MPAM features accessed from the Realm MPAM feature page.</para>

      </purpose_text>
      <purpose_text>
        <para>When MPAMF_IDR.HAS_RIS is 1, some fields in this register give information for the resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS. The description of every field that is affected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS has that information within the field description.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Memory Partitioning and Monitoring registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>MPAMF_IDR is 64-bit register when MPAM v0.1 or v1.1 is implemented.</para>

      </configuration_text>
      <configuration_text>
        <para>Otherwise, MPAMF_IDR is a 32-bit register.</para>

      </configuration_text>
      <configuration_text>
        <para>The power and reset domain of each MSC component is specific to that component.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>MPAMF_IDR is a:</para>

      </attributes_text>
      <attributes_text>
        <list type="unordered">
<listitem><content>64-bit register when FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</content>
</listitem><listitem><content>32-bit register otherwise</content>
</listitem></list>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="64">
  <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  <text_before_fields/>
  <field id="fieldset_0-63_60" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>63</field_msb>
    <field_lsb>60</field_lsb>
    <rel_range>63:60</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-59_56-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>RIS_MAX</field_name>
    <field_msb>59</field_msb>
    <field_lsb>56</field_lsb>
    <rel_range>3:0</rel_range>
    <field_description order="before">
      <para>Maximum RIS value supported in <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>. Must be <binarynumber>0b0000</binarynumber> if <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>.HAS_RIS == 0.</para>
    </field_description>
    <fields_condition>When MPAMF_IDR.EXT == 1 and MPAMF_IDR.HAS_RIS == 1</fields_condition>
  </field>
  <field id="fieldset_0-59_56-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>59</field_msb>
    <field_lsb>56</field_lsb>
    <rel_range>3:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-55_44" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>55</field_msb>
    <field_lsb>44</field_lsb>
    <rel_range>55:44</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-43_43-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_NFU</field_name>
    <field_msb>43</field_msb>
    <field_lsb>43</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Has No Future Use field in <register_link state="ext" id="ext-mpamcfg_dis.xml">MPAMCFG_DIS</register_link>. Indicates that <register_link state="ext" id="ext-mpamcfg_dis.xml">MPAMCFG_DIS</register_link>.NFU is implemented.</para>
    </field_description>
    <field_description order="after"><para>If <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>.HAS_ENDIS is <binarynumber>0b0</binarynumber>, this field must also be <binarynumber>0b0</binarynumber>.</para>
<para>This field must be the same in each instance of this register and for any value in <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamcfg_dis.xml">MPAMCFG_DIS</register_link>.NFU is not implemented. A PARTID disabled through access to MPAMCFG_DIS must preserve the control settings of the disabled PARTID.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Implements <register_link state="ext" id="ext-mpamcfg_dis.xml">MPAMCFG_DIS</register_link>.NFU. A PARTID disabled with NFU as 1 may have its control settings forgotten.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv1p1 is implemented or FEAT_MPAMv0p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-43_43-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>43</field_msb>
    <field_lsb>43</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-42_42-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_ENDIS</field_name>
    <field_msb>42</field_msb>
    <field_lsb>42</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Has PARTID enable and disable. Indicates that this MSC supports PARTID disable and enable via <register_link state="ext" id="ext-mpamcfg_dis.xml">MPAMCFG_DIS</register_link>, <register_link state="ext" id="ext-mpamcfg_en.xml">MPAMCFG_EN</register_link> and <register_link state="ext" id="ext-mpamcfg_en_flags.xml">MPAMCFG_EN_FLAGS</register_link> registers.</para>
    </field_description>
    <field_description order="after"><para>All three registers must be implemented when this field is 1, <register_link state="ext" id="ext-mpamcfg_en.xml">MPAMCFG_EN</register_link>, <register_link state="ext" id="ext-mpamcfg_dis.xml">MPAMCFG_DIS</register_link>, and <register_link state="ext" id="ext-mpamcfg_en_flags.xml">MPAMCFG_EN_FLAGS</register_link>.</para>
<para>This field must be the same in each instance of this register and for any value in <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support PARTID enable and disable functionality, and <register_link state="ext" id="ext-mpamcfg_en.xml">MPAMCFG_EN</register_link>, <register_link state="ext" id="ext-mpamcfg_dis.xml">MPAMCFG_DIS</register_link> and MPAMCFG_EN_FLAGS registers are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Supports PARTID enable and disable through the <register_link state="ext" id="ext-mpamcfg_en.xml">MPAMCFG_EN</register_link>, <register_link state="ext" id="ext-mpamcfg_dis.xml">MPAMCFG_DIS</register_link> and MPAMCFG_EN_FLAGS registers.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv1p1 is implemented or FEAT_MPAMv0p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-42_42-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>42</field_msb>
    <field_lsb>42</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-41_41-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>SP4</field_name>
    <field_msb>41</field_msb>
    <field_lsb>41</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Indicates whether this MSC supports 4 PARTID spaces.</para>
    </field_description>
    <field_description order="after">
      <para>This field must read the same in each instance of this register and for any value in <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This MSC supports two PARTID spaces.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>This MSC supports four PARTID spaces.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_0-41_41-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>41</field_msb>
    <field_lsb>41</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-40_40-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_ERR_MSI</field_name>
    <field_msb>40</field_msb>
    <field_lsb>40</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Has support for MSI writes to signal MPAM error interrupts. These registers are implemented: <register_link state="ext" id="ext-mpamf_err_msi_addr_l.xml">MPAMF_ERR_MSI_ADDR_L</register_link>, <register_link state="ext" id="ext-mpamf_err_msi_addr_h.xml">MPAMF_ERR_MSI_ADDR_H</register_link>, <register_link state="ext" id="ext-mpamf_err_msi_attr.xml">MPAMF_ERR_MSI_ATTR</register_link>, <register_link state="ext" id="ext-mpamf_err_msi_data.xml">MPAMF_ERR_MSI_DATA</register_link>, and <register_link state="ext" id="ext-mpamf_err_msi_mpam.xml">MPAMF_ERR_MSI_MPAM</register_link>.</para>
    </field_description>
    <field_description order="after">
      <para>If <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>.HAS_ESR is 0, this bit must also be 0.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_err_msi_addr_l.xml">MPAMF_ERR_MSI_ADDR_L</register_link>, <register_link state="ext" id="ext-mpamf_err_msi_addr_h.xml">MPAMF_ERR_MSI_ADDR_H</register_link>, <register_link state="ext" id="ext-mpamf_err_msi_attr.xml">MPAMF_ERR_MSI_ATTR</register_link>, <register_link state="ext" id="ext-mpamf_err_msi_data.xml">MPAMF_ERR_MSI_DATA</register_link>, and <register_link state="ext" id="ext-mpamf_err_msi_mpam.xml">MPAMF_ERR_MSI_MPAM</register_link> registers are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_err_msi_addr_l.xml">MPAMF_ERR_MSI_ADDR_L</register_link>, <register_link state="ext" id="ext-mpamf_err_msi_addr_h.xml">MPAMF_ERR_MSI_ADDR_H</register_link>, <register_link state="ext" id="ext-mpamf_err_msi_attr.xml">MPAMF_ERR_MSI_ATTR</register_link>, <register_link state="ext" id="ext-mpamf_err_msi_data.xml">MPAMF_ERR_MSI_DATA</register_link>, and <register_link state="ext" id="ext-mpamf_err_msi_mpam.xml">MPAMF_ERR_MSI_MPAM</register_link> are implemented and can be used to generate writes to signal error interrupts.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When MPAMF_IDR.EXT == 1</fields_condition>
  </field>
  <field id="fieldset_0-40_40-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>40</field_msb>
    <field_lsb>40</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-39_39-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_ESR</field_name>
    <field_msb>39</field_msb>
    <field_lsb>39</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para><register_link state="ext" id="ext-mpamf_esr.xml">MPAMF_ESR</register_link> is implemented.</para>
    </field_description>
    <field_description order="after">
      <para>If an MSC cannot encounter any of the error conditions listed in <xref browsertext="'Errors in MSCs' in Arm® Architecture Reference Manual Supplement, Memory System Resource Partitioning and Monitoring (MPAM), for Armv8-A (ARM DDI 0598)" filename="AS_errors_in_mscs.fm" linkend="CIHHADCG"/>, both the MPAMF_ESR and <register_link state="ext" id="ext-mpamf_ecr.xml">MPAMF_ECR</register_link> must be RAZ/WI.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_esr.xml">MPAMF_ESR</register_link>, <register_link state="ext" id="ext-mpamf_ecr.xml">MPAMF_ECR</register_link>, and MPAM error handling are not implemented.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_esr.xml">MPAMF_ESR</register_link>, <register_link state="ext" id="ext-mpamf_ecr.xml">MPAMF_ECR</register_link>, and MPAM error handling are implemented.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When MPAMF_IDR.EXT == 1</fields_condition>
  </field>
  <field id="fieldset_0-39_39-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>39</field_msb>
    <field_lsb>39</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-38_38-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_EXTD_ESR</field_name>
    <field_msb>38</field_msb>
    <field_lsb>38</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para><register_link state="ext" id="ext-mpamf_esr.xml">MPAMF_ESR</register_link> is 64 bits.</para>
    </field_description>
    <field_description order="after">
      <para>When <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>.HAS_RIS and <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>.HAS_ESR, this field must be 1.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_esr.xml">MPAMF_ESR</register_link> is 32 bits.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_esr.xml">MPAMF_ESR</register_link> is 64 bits.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When MPAMF_IDR.EXT == 1</fields_condition>
  </field>
  <field id="fieldset_0-38_38-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>38</field_msb>
    <field_lsb>38</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-37_37-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>NO_IMPL_MSMON</field_name>
    <field_msb>37</field_msb>
    <field_lsb>37</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para><register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link> defines no <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> resource monitors.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates the presence of <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> resource monitors described in <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link> for the selected resource instance.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link> defines at least one <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> resource monitor.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link> does not define any <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> resource monitors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When MPAMF_IDR.EXT == 1 and MPAMF_IDR.HAS_IMPL_IDR == 1</fields_condition>
  </field>
  <field id="fieldset_0-37_37-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>37</field_msb>
    <field_lsb>37</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-36_36-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>NO_IMPL_PART</field_name>
    <field_msb>36</field_msb>
    <field_lsb>36</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para><register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link> defines no <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> resource controls.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates the presence of <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> resource controls described in <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link> for the selected resource instance.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link> defines at least one <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> resource control.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link> does not define any <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> resource controls.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When MPAMF_IDR.EXT == 1 and MPAMF_IDR.HAS_IMPL_IDR == 1</fields_condition>
  </field>
  <field id="fieldset_0-36_36-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>36</field_msb>
    <field_lsb>36</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-35_33" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>35</field_msb>
    <field_lsb>33</field_lsb>
    <rel_range>35:33</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-32_32-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>HAS_RIS</field_name>
    <field_msb>32</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Has resource instance selector. Indicates that <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link> contains the RIS field that selects a resource instance to control.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link> does not implement the <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS field or multiple resource instance support.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link> implements the <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS field and MPAM resource instance numbers up to and including MPAMF_IDR.RIS_MAX.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When MPAMF_IDR.EXT == 1</fields_condition>
  </field>
  <field id="fieldset_0-32_32-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>32</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-31_31" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_PARTID_NRW</field_name>
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>31</rel_range>
    <field_description order="before">
      <para>Has PARTID narrowing.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not have <register_link state="ext" id="ext-mpamf_partid_nrw_idr.xml">MPAMF_PARTID_NRW_IDR</register_link>, <register_link state="ext" id="ext-mpamcfg_intpartid.xml">MPAMCFG_INTPARTID</register_link>, or intPARTID mapping support.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Supports the <register_link state="ext" id="ext-mpamf_partid_nrw_idr.xml">MPAMF_PARTID_NRW_IDR</register_link>, <register_link state="ext" id="ext-mpamcfg_intpartid.xml">MPAMCFG_INTPARTID</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-30_30" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_MSMON</field_name>
    <field_msb>30</field_msb>
    <field_lsb>30</field_lsb>
    <rel_range>30</rel_range>
    <field_description order="before">
      <para>Has resource Monitors. Indicates whether this MSC has MPAM resource monitors.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support MPAM resource monitoring by groups or <register_link state="ext" id="ext-mpamf_msmon_idr.xml">MPAMF_MSMON_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Supports resource monitoring by matching a combination of PARTID and PMG. See <register_link state="ext" id="ext-mpamf_msmon_idr.xml">MPAMF_MSMON_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-29_29" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_IMPL_IDR</field_name>
    <field_msb>29</field_msb>
    <field_lsb>29</field_lsb>
    <rel_range>29</rel_range>
    <field_description order="before">
      <para>Has <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link>. Indicates whether this MSC has the <arm-defined-word>IMPLEMENTATION SPECIFIC</arm-defined-word> MPAM features register, <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link>.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not have <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-28_28-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EXT</field_name>
    <field_msb>28</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Extended MPAMF_IDR.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>MPAMF_IDR has no defined bits in [63:32]. The register is effectively 32 bits.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>MPAMF_IDR has bits defined in [63:32]. The register is 64-bits.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-28_28-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>28</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-27_27" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_PRI_PART</field_name>
    <field_msb>27</field_msb>
    <field_lsb>27</field_lsb>
    <rel_range>27</rel_range>
    <field_description order="before">
      <para>Has Priority Partitioning. Indicates that MPAM priority partitioning is implemented and <register_link state="ext" id="ext-mpamf_pri_idr.xml">MPAMF_PRI_IDR</register_link> exists.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates the presence of priority partitioning resource controls as described in <register_link state="ext" id="ext-mpamf_pri_idr.xml">MPAMF_PRI_IDR</register_link> for the selected resource instance.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support priority partitioning or have <register_link state="ext" id="ext-mpamf_pri_idr.xml">MPAMF_PRI_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has priority partitioning and <register_link state="ext" id="ext-mpamf_pri_idr.xml">MPAMF_PRI_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-26_26" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_MBW_PART</field_name>
    <field_msb>26</field_msb>
    <field_lsb>26</field_lsb>
    <rel_range>26</rel_range>
    <field_description order="before">
      <para>Has Memory Bandwidth Partitioning. Indicates whether this MSC implements MPAM memory bandwidth partitioning and <register_link state="ext" id="ext-mpamf_mbw_idr.xml">MPAMF_MBW_IDR</register_link>.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates the presence of memory bandwidth partitioning resource controls as described in <register_link state="ext" id="ext-mpamf_mbw_idr.xml">MPAMF_MBW_IDR</register_link> for the selected resource instance.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support memory bandwidth partitioning or have <register_link state="ext" id="ext-mpamf_mbw_idr.xml">MPAMF_MBW_IDR</register_link> register.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has <register_link state="ext" id="ext-mpamf_mbw_idr.xml">MPAMF_MBW_IDR</register_link> register.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-25_25" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_CPOR_PART</field_name>
    <field_msb>25</field_msb>
    <field_lsb>25</field_lsb>
    <rel_range>25</rel_range>
    <field_description order="before">
      <para>Has Cache Portion Partitioning. Indicates whether this MSC implements MPAM cache portion partitioning and <register_link state="ext" id="ext-mpamf_cpor_idr.xml">MPAMF_CPOR_IDR</register_link>.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates the presence of cache portion partitioning resource controls as described in <register_link state="ext" id="ext-mpamf_cpor_idr.xml">MPAMF_CPOR_IDR</register_link> for the selected resource instance.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support cache portion partitioning or have <register_link state="ext" id="ext-mpamf_cpor_idr.xml">MPAMF_CPOR_IDR</register_link> or <register_link state="ext" id="ext-mpamcfg_cpbmn.xml">MPAMCFG_CPBM&lt;n&gt;</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has <register_link state="ext" id="ext-mpamf_cpor_idr.xml">MPAMF_CPOR_IDR</register_link> and <register_link state="ext" id="ext-mpamcfg_cpbmn.xml">MPAMCFG_CPBM&lt;n&gt;</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-24_24" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_CCAP_PART</field_name>
    <field_msb>24</field_msb>
    <field_lsb>24</field_lsb>
    <rel_range>24</rel_range>
    <field_description order="before">
      <para>Has Cache Capacity Partitioning. Indicates whether this MSC implements MPAM cache capacity partitioning and the <register_link state="ext" id="ext-mpamf_ccap_idr.xml">MPAMF_CCAP_IDR</register_link> and <register_link state="ext" id="ext-mpamcfg_cmax.xml">MPAMCFG_CMAX</register_link> registers.</para>
    </field_description>
    <field_description order="after">
      <para>If RIS is implemented, this field indicates the presence of cache capacity partitioning resource controls as described in <register_link state="ext" id="ext-mpamf_cpor_idr.xml">MPAMF_CPOR_IDR</register_link> for the selected resource instance.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support cache capacity partitioning or have <register_link state="ext" id="ext-mpamf_ccap_idr.xml">MPAMF_CCAP_IDR</register_link> and <register_link state="ext" id="ext-mpamcfg_cmax.xml">MPAMCFG_CMAX</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has <register_link state="ext" id="ext-mpamf_ccap_idr.xml">MPAMF_CCAP_IDR</register_link> and <register_link state="ext" id="ext-mpamcfg_cmax.xml">MPAMCFG_CMAX</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-23_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PMG_MAX</field_name>
    <field_msb>23</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>23:16</rel_range>
    <field_description order="before">
      <para>Maximum supported value of PMG.</para>
    </field_description>
    <field_description order="after"><para>The value of this field is permitted to vary between the instances of <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>, each reporting the maximum supported PMG value in the  PARTID space associated with that instance.</para>
<para>In MPAMF_IDR_s, this field is permitted to report the maximum PMG value for the Non-secure PARTID space or for the Secure PARTID space. The maximum PMG value for the Secure PARTID space can be read from <register_link state="ext" id="ext-mpamf_sidr.xml">MPAMF_SIDR</register_link>.PMG_MAX.</para></field_description>
  </field>
  <field id="fieldset_0-15_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PARTID_MAX</field_name>
    <field_msb>15</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>15:0</rel_range>
    <field_description order="before">
      <para>Maximum supported value of PARTID.</para>
    </field_description>
    <field_description order="after"><para>The value of this field is permitted to vary between the instances of <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>, each reporting the maximum supported PARTID value in the  PARTID space associated with that instance.</para>
<para>In MPAMF_IDR_s, this field is permitted to report the maximum PARTID value for the Non-secure PARTID space or for the Secure PARTID space. The maximum PARTID value for the Secure PARTID space can be read from <register_link state="ext" id="ext-mpamf_sidr.xml">MPAMF_SIDR</register_link>.PARTID_MAX.</para></field_description>
  </field>
  <text_after_fields/>
</fields>



<fields id="fieldset_1" length="32">
  <fields_condition/>
  <text_before_fields/>
  <field id="fieldset_1-31_31" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_PARTID_NRW</field_name>
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>31</rel_range>
    <field_description order="before">
      <para>Has PARTID Narrowing.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not have <register_link state="ext" id="ext-mpamf_partid_nrw_idr.xml">MPAMF_PARTID_NRW_IDR</register_link>, <register_link state="ext" id="ext-mpamcfg_intpartid.xml">MPAMCFG_INTPARTID</register_link>, or intPARTID mapping support.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Supports the <register_link state="ext" id="ext-mpamf_partid_nrw_idr.xml">MPAMF_PARTID_NRW_IDR</register_link>, <register_link state="ext" id="ext-mpamcfg_intpartid.xml">MPAMCFG_INTPARTID</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-30_30" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_MSMON</field_name>
    <field_msb>30</field_msb>
    <field_lsb>30</field_lsb>
    <rel_range>30</rel_range>
    <field_description order="before">
      <para>Has resource Monitors. Indicates whether this MSC has MPAM resource monitors.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support MPAM resource monitoring by groups or <register_link state="ext" id="ext-mpamf_msmon_idr.xml">MPAMF_MSMON_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Supports resource monitoring by matching a combination of PARTID and PMG. See <register_link state="ext" id="ext-mpamf_msmon_idr.xml">MPAMF_MSMON_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-29_29" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_IMPL_IDR</field_name>
    <field_msb>29</field_msb>
    <field_lsb>29</field_lsb>
    <rel_range>29</rel_range>
    <field_description order="before">
      <para>Has <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link>. Indicates whether this MSC has the <arm-defined-word>IMPLEMENTATION SPECIFIC</arm-defined-word> MPAM features register, <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link>.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not have <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has <register_link state="ext" id="ext-mpamf_impl_idr.xml">MPAMF_IMPL_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-28_28-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EXT</field_name>
    <field_msb>28</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Extended MPAMF_IDR.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>MPAMF_IDR has no defined bits in [63:32]. The register is effectively 32 bits.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>MPAMF_IDR has bits defined in [63:32]. The register is 64-bits.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_1-28_28-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>28</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-27_27" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_PRI_PART</field_name>
    <field_msb>27</field_msb>
    <field_lsb>27</field_lsb>
    <rel_range>27</rel_range>
    <field_description order="before">
      <para>Has Priority Partitioning. Indicates whether this MSC implements MPAM priority partitioning and <register_link state="ext" id="ext-mpamf_pri_idr.xml">MPAMF_PRI_IDR</register_link>.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support priority partitioning or have <register_link state="ext" id="ext-mpamf_pri_idr.xml">MPAMF_PRI_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has <register_link state="ext" id="ext-mpamf_pri_idr.xml">MPAMF_PRI_IDR</register_link>.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-26_26" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_MBW_PART</field_name>
    <field_msb>26</field_msb>
    <field_lsb>26</field_lsb>
    <rel_range>26</rel_range>
    <field_description order="before">
      <para>Has Memory Bandwidth Partitioning. Indicates whether this MSC implements MPAM memory bandwidth partitioning and MPAMF_MBW_IDR.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support memory bandwidth partitioning or have <register_link state="ext" id="ext-mpamf_mbw_idr.xml">MPAMF_MBW_IDR</register_link> register.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has <register_link state="ext" id="ext-mpamf_mbw_idr.xml">MPAMF_MBW_IDR</register_link> register.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-25_25" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_CPOR_PART</field_name>
    <field_msb>25</field_msb>
    <field_lsb>25</field_lsb>
    <rel_range>25</rel_range>
    <field_description order="before">
      <para>Has Cache Portion Partitioning. Indicates whether this MSC implements MPAM cache portion partitioning and <register_link state="ext" id="ext-mpamf_cpor_idr.xml">MPAMF_CPOR_IDR</register_link>.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support cache portion partitioning or have <register_link state="ext" id="ext-mpamf_cpor_idr.xml">MPAMF_CPOR_IDR</register_link> or <register_link state="ext" id="ext-mpamcfg_cpbmn.xml">MPAMCFG_CPBM&lt;n&gt;</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has <register_link state="ext" id="ext-mpamf_cpor_idr.xml">MPAMF_CPOR_IDR</register_link> and <register_link state="ext" id="ext-mpamcfg_cpbmn.xml">MPAMCFG_CPBM&lt;n&gt;</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-24_24" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>HAS_CCAP_PART</field_name>
    <field_msb>24</field_msb>
    <field_lsb>24</field_lsb>
    <rel_range>24</rel_range>
    <field_description order="before">
      <para>Has Cache Capacity Partitioning. Indicates whether this MSC implements MPAM cache capacity partitioning and the MPAMF_CCAP_IDR and MPAMCFG_CMAX registers.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not support cache capacity partitioning or have <register_link state="ext" id="ext-mpamf_ccap_idr.xml">MPAMF_CCAP_IDR</register_link> and <register_link state="ext" id="ext-mpamcfg_cmax.xml">MPAMCFG_CMAX</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Has <register_link state="ext" id="ext-mpamf_ccap_idr.xml">MPAMF_CCAP_IDR</register_link> and <register_link state="ext" id="ext-mpamcfg_cmax.xml">MPAMCFG_CMAX</register_link> registers.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-23_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PMG_MAX</field_name>
    <field_msb>23</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>23:16</rel_range>
    <field_description order="before">
      <para>Maximum supported value of PMG.</para>
    </field_description>
    <field_description order="after"><para>The value of this field is permitted to vary between the instances of <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>, each reporting the maximum supported PMG value in the  PARTID space associated with that instance.</para>
<para>In MPAMF_IDR_s this field is permitted to report the maximum PMG value for the Non-secure PARTID space or for the Secure PARTID space. The maximum PMG value for the Secure PARTID space can be read from <register_link state="ext" id="ext-mpamf_sidr.xml">MPAMF_SIDR</register_link>.PMG_MAX.</para></field_description>
  </field>
  <field id="fieldset_1-15_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PARTID_MAX</field_name>
    <field_msb>15</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>15:0</rel_range>
    <field_description order="before">
      <para>Maximum supported value of PARTID.</para>
    </field_description>
    <field_description order="after"><para>The value of this field is permitted to vary between the instances of <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>, each reporting the maximum supported PARTID value in the  PARTID space associated with that instance.</para>
<para>In MPAMF_IDR_s this field is permitted to report the maximum PARTID value for the Non-secure PARTID space or for the Secure PARTID space. The maximum PARTID value for the Secure PARTID space can be read from <register_link state="ext" id="ext-mpamf_sidr.xml">MPAMF_SIDR</register_link>.PARTID_MAX.</para></field_description>
  </field>
  <text_after_fields/>
</fields>





    
<reg_fieldset length="64">
  <fields_condition>When FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented</fields_condition>
  <fieldat id="fieldset_0-63_60" msb="63" lsb="60"/>
  <fieldat id="fieldset_0-59_56-1" msb="59" lsb="56"/>
  <fieldat id="fieldset_0-55_44" msb="55" lsb="44"/>
  <fieldat id="fieldset_0-43_43-1" msb="43" lsb="43"/>
  <fieldat id="fieldset_0-42_42-1" msb="42" lsb="42"/>
  <fieldat id="fieldset_0-41_41-1" msb="41" lsb="41"/>
  <fieldat id="fieldset_0-40_40-1" msb="40" lsb="40"/>
  <fieldat id="fieldset_0-39_39-1" msb="39" lsb="39"/>
  <fieldat id="fieldset_0-38_38-1" msb="38" lsb="38"/>
  <fieldat id="fieldset_0-37_37-1" msb="37" lsb="37"/>
  <fieldat id="fieldset_0-36_36-1" msb="36" lsb="36"/>
  <fieldat id="fieldset_0-35_33" msb="35" lsb="33"/>
  <fieldat id="fieldset_0-32_32-1" msb="32" lsb="32"/>
  <fieldat id="fieldset_0-31_31" msb="31" lsb="31"/>
  <fieldat id="fieldset_0-30_30" msb="30" lsb="30"/>
  <fieldat id="fieldset_0-29_29" msb="29" lsb="29"/>
  <fieldat id="fieldset_0-28_28-1" msb="28" lsb="28"/>
  <fieldat id="fieldset_0-27_27" msb="27" lsb="27"/>
  <fieldat id="fieldset_0-26_26" msb="26" lsb="26"/>
  <fieldat id="fieldset_0-25_25" msb="25" lsb="25"/>
  <fieldat id="fieldset_0-24_24" msb="24" lsb="24"/>
  <fieldat id="fieldset_0-23_16" msb="23" lsb="16"/>
  <fieldat id="fieldset_0-15_0" msb="15" lsb="0"/>
</reg_fieldset>

    
<reg_fieldset length="32">
  <fields_condition/>
  <fieldat id="fieldset_1-31_31" msb="31" lsb="31"/>
  <fieldat id="fieldset_1-30_30" msb="30" lsb="30"/>
  <fieldat id="fieldset_1-29_29" msb="29" lsb="29"/>
  <fieldat id="fieldset_1-28_28-1" msb="28" lsb="28"/>
  <fieldat id="fieldset_1-27_27" msb="27" lsb="27"/>
  <fieldat id="fieldset_1-26_26" msb="26" lsb="26"/>
  <fieldat id="fieldset_1-25_25" msb="25" lsb="25"/>
  <fieldat id="fieldset_1-24_24" msb="24" lsb="24"/>
  <fieldat id="fieldset_1-23_16" msb="23" lsb="16"/>
  <fieldat id="fieldset_1-15_0" msb="15" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>This register is within the MPAM feature page memory frames. In a system that supports Secure, Non-secure, Root, and Realm memory maps, there must be MPAM feature pages in all four address maps.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_IDR is read-only.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_IDR must be readable from the Non-secure, Secure, Root, and Realm MPAM feature pages.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_IDR is permitted to have the same contents when read from the Secure, Non-secure, Root, and Realm MPAM feature pages unless the register contents are different for the different versions:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>MPAMF_IDR_s is permitted to have either the same or different contents to MPAMF_IDR_ns, MPAMF_IDR_rt, or MPAMF_IDR_rl.</content>
</listitem><listitem><content>MPAMF_IDR_ns is permitted to have either the same or different contents to MPAMF_IDR_rt or MPAMF_IDR_rl.</content>
</listitem><listitem><content>MPAMF_IDR_rt is permitted to have either the same or different contents to MPAMF_IDR_rl.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>There must be separate registers in the Secure (MPAMF_IDR_s), Non-secure (MPAMF_IDR_ns), Root (MPAMF_IDR_rt), and Realm (MPAMF_IDR_rl) MPAM feature pages.</para>

      </access_permission_text>
      <access_permission_text>
        <para>When <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>.HAS_RIS is 1, MPAMF_IDR shows the configuration of MSC MPAM for the  resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS. Fields that mention RIS in their field descriptions have values that track the implemented properties of the resource instance. Fields that do not mention RIS are constant across all resource instances.</para>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>