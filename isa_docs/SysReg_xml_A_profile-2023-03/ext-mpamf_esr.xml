<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>MPAMF_ESR</reg_short_name>
        
        <reg_long_name>MPAM Error Status Register</reg_long_name>

        <power_domain_text>The power domain of MPAMF_ESR is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word></power_domain_text>


      
        <reg_condition otherwise="RES0">when FEAT_MPAM is implemented</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_s</reg_frame>
    <reg_offset><hexnumber>0x00F8</hexnumber></reg_offset>
    <reg_instance>MPAMF_ESR_s</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_ns</reg_frame>
    <reg_offset><hexnumber>0x00F8</hexnumber></reg_offset>
    <reg_instance>MPAMF_ESR_ns</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rt</reg_frame>
    <reg_offset><hexnumber>0x00F8</hexnumber></reg_offset>
    <reg_instance>MPAMF_ESR_rt</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rl</reg_frame>
    <reg_offset><hexnumber>0x00F8</hexnumber></reg_offset>
    <reg_instance>MPAMF_ESR_rl</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Indicates MPAM error status for this MSC.</para>

      </purpose_text>
      <purpose_text>
        <para>MPAMF_ESR_s reports Secure MPAM errors.
MPAMF_ESR_ns reports Non-secure MPAM errors.
MPAMF_ESR_rt reports Root MPAM errors.
MPAMF_ESR_rl reports Realm MPAM errors.</para>

      </purpose_text>
      <purpose_text>
        <para>Software should write this register after reading the status of an error to reset ERRCODE to <hexnumber>0x0000</hexnumber> and OVRWR to 0 so that future errors are not reported with OVRWR set.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Memory Partitioning and Monitoring registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>MPAMF_ESR is 64-bit register when MPAM v0.1 or v1.1 is implemented and MPAMF_IDR.HAS_EXTD_ESR == 1.</para>

      </configuration_text>
      <configuration_text>
        <para>Otherwise, MPAMF_ESR is a 32-bit register.</para>

      </configuration_text>
      <configuration_text>
        <para>If an MSC cannot encounter any of the error conditions listed in <xref browsertext="'Errors in MSCs' in Arm&#174; Architecture Reference Manual Supplement, Memory System Resource Partitioning and Monitoring (MPAM), for Armv8-A (ARM DDI 0598)" filename="AS_errors_in_mscs.fm" linkend="CIHHADCG"/>, both the MPAMF_ESR and <register_link state="ext" id="ext-mpamf_ecr.xml">MPAMF_ECR</register_link> must be RAZ/WI.</para>

      </configuration_text>
      <configuration_text>
        <para>The power and reset domain of each MSC component is specific to that component.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>MPAMF_ESR is a:</para>

      </attributes_text>
      <attributes_text>
        <list type="unordered">
<listitem><content>64-bit register when (FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented) and MPAMF_IDR.HAS_EXTD_ESR == 1</content>
</listitem><listitem><content>32-bit register otherwise</content>
</listitem></list>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="64">
  <fields_condition>When (FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented) and MPAMF_IDR.HAS_EXTD_ESR == 1</fields_condition>
  <text_before_fields/>
  <field id="fieldset_0-63_36" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>63</field_msb>
    <field_lsb>36</field_lsb>
    <rel_range>63:36</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-35_32-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>RIS</field_name>
    <field_msb>35</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>3:0</rel_range>
    <field_description order="before">
      <para>Resource Instance Selector. Where applicable to the ERRCODE, captures the RIS value for the error.</para>
    </field_description>
    <fields_condition>When MPAMF_IDR.HAS_RIS == 1</fields_condition>
  </field>
  <field id="fieldset_0-35_32-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>35</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>3:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-31_31" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>OVRWR</field_name>
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>31</rel_range>
    <field_description order="before"><para>Overwritten.</para>
<para>If 0 and ERRCODE == <binarynumber>0b0000</binarynumber>, no errors have occurred.</para>
<para>If 0 and ERRCODE is nonzero, a single error has occurred and is recorded in this register.</para>
<para>If 1 and ERRCODE is nonzero, multiple errors have occurred and this register records the most recent error.</para></field_description>
    <field_description order="after">
      <para>The state where this bit is 1 and ERRCODE is zero must not be produced by hardware and is only reached when software writes this combination into this register.</para>
    </field_description>
  </field>
  <field id="fieldset_0-30_28" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>30</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>30:28</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-27_24" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ERRCODE</field_name>
    <field_msb>27</field_msb>
    <field_lsb>24</field_lsb>
    <rel_range>27:24</rel_range>
    <field_description order="before">
      <para>Error code.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>No error.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>PARTID_SEL_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
          <para>Req_PARTID_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0011</field_value>
        <field_value_description>
          <para>MSMONCFG_ID_RANGE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0100</field_value>
        <field_value_description>
          <para>Req_PMG_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0101</field_value>
        <field_value_description>
          <para>Monitor_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0110</field_value>
        <field_value_description>
          <para>intPARTID_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0111</field_value>
        <field_value_description>
          <para>Unexpected_INTERNAL.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1000</field_value>
        <field_value_description>
          <para>Undefined_RIS_PART_SEL.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1001</field_value>
        <field_value_description>
          <para>RIS_No_Control.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1010</field_value>
        <field_value_description>
          <para>Undefined_RIS_MON_SEL.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1011</field_value>
        <field_value_description>
          <para>RIS_No_Monitor.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1100</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1101</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1110</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-23_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PMG</field_name>
    <field_msb>23</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>23:16</rel_range>
    <field_description order="before"><para>Program monitoring group.</para>
<para>Set to the PMG on an error that captures PMG.  Otherwise, set to <hexnumber>0x00</hexnumber> on an error that does not capture PMG.</para></field_description>
  </field>
  <field id="fieldset_0-15_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PARTID_MON</field_name>
    <field_msb>15</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>15:0</rel_range>
    <field_description order="before"><para>PARTID or monitor.</para>
<para>Set to the PARTID on an error that captures PARTID.</para>
<para>Set to the monitor index on an error that captures MON.</para>
<para>On an error that captures neither PARTID nor MON, this field is set to 0.</para></field_description>
  </field>
  <text_after_fields/>
</fields>



<fields id="fieldset_1" length="32">
  <fields_condition/>
  <text_before_fields/>
  <field id="fieldset_1-31_31" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>OVRWR</field_name>
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>31</rel_range>
    <field_description order="before"><para>Overwritten.</para>
<para>If 0 and ERRCODE == <binarynumber>0b0000</binarynumber>, no errors have occurred.</para>
<para>If 0 and ERRCODE is nonzero, a single error has occurred and is recorded in this register.</para>
<para>If 1 and ERRCODE is nonzero, multiple errors have occurred and this register records the most recent error.</para></field_description>
    <field_description order="after">
      <para>The state where this bit is 1 and ERRCODE is 0 must not be produced by hardware and is only reached when software writes this combination into this register.</para>
    </field_description>
  </field>
  <field id="fieldset_1-30_28" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>30</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>30:28</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_1-27_24" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ERRCODE</field_name>
    <field_msb>27</field_msb>
    <field_lsb>24</field_lsb>
    <rel_range>27:24</rel_range>
    <field_description order="before">
      <para>Error code.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
          <para>No error.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
          <para>PARTID_SEL_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
          <para>Req_PARTID_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0011</field_value>
        <field_value_description>
          <para>MSMONCFG_ID_RANGE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0100</field_value>
        <field_value_description>
          <para>Req_PMG_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0101</field_value>
        <field_value_description>
          <para>Monitor_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0110</field_value>
        <field_value_description>
          <para>intPARTID_Range.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b0111</field_value>
        <field_value_description>
          <para>Unexpected_INTERNAL.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1000</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1001</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1010</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1011</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1100</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1101</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1110</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
          <para>Reserved.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-23_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PMG</field_name>
    <field_msb>23</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>23:16</rel_range>
    <field_description order="before"><para>Program monitoring group.</para>
<para>Set to the PMG on an error that captures PMG. Otherwise, set to <hexnumber>0x00</hexnumber> on an error that does not capture PMG.</para></field_description>
  </field>
  <field id="fieldset_1-15_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PARTID_MON</field_name>
    <field_msb>15</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>15:0</rel_range>
    <field_description order="before"><para>PARTID or monitor.</para>
<para>Set to the PARTID on an error that captures PARTID.</para>
<para>Set to the monitor index on an error that captures MON.</para>
<para>On an error that captures neither PARTID nor MON, this field is set to <hexnumber>0x0000</hexnumber>.</para></field_description>
  </field>
  <text_after_fields/>
</fields>





    
<reg_fieldset length="64">
  <fields_condition>When (FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented) and MPAMF_IDR.HAS_EXTD_ESR == 1</fields_condition>
  <fieldat id="fieldset_0-63_36" msb="63" lsb="36"/>
  <fieldat id="fieldset_0-35_32-1" msb="35" lsb="32"/>
  <fieldat id="fieldset_0-31_31" msb="31" lsb="31"/>
  <fieldat id="fieldset_0-30_28" msb="30" lsb="28"/>
  <fieldat id="fieldset_0-27_24" msb="27" lsb="24"/>
  <fieldat id="fieldset_0-23_16" msb="23" lsb="16"/>
  <fieldat id="fieldset_0-15_0" msb="15" lsb="0"/>
</reg_fieldset>

    
<reg_fieldset length="32">
  <fields_condition/>
  <fieldat id="fieldset_1-31_31" msb="31" lsb="31"/>
  <fieldat id="fieldset_1-30_28" msb="30" lsb="28"/>
  <fieldat id="fieldset_1-27_24" msb="27" lsb="24"/>
  <fieldat id="fieldset_1-23_16" msb="23" lsb="16"/>
  <fieldat id="fieldset_1-15_0" msb="15" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>This register is within the MPAM feature page memory frames.</para>

      </access_permission_text>
      <access_permission_text>
        <para>In a system that supports Secure, Non-secure, Root, and Realm memory maps, there must be MPAM feature pages in all four address maps:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>MPAMF_ESR_s must only be accessible from the Secure MPAM feature page.</content>
</listitem><listitem><content>MPAMF_ESR_ns must only be accessible from the Non-secure MPAM feature page.</content>
</listitem><listitem><content>MPAMF_ESR_rt must only be accessible from the Root MPAM feature page.</content>
</listitem><listitem><content>MPAMF_ESR_rl must only be accessible from the Realm MPAM feature page.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_ESR_s, MPAMF_ESR_ns, MPAMF_ESR_rt, and MPAMF_ESR_rl must be separate registers:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>The Secure instance (MPAMF_ESR_s) accesses the error status used for Secure PARTIDs.</content>
</listitem><listitem><content>The Non-secure instance (MPAMF_ESR_ns) accesses the error status used for Non-secure PARTIDs.</content>
</listitem><listitem><content>The Root instance (MPAMF_ESR_rt) accesses the error status used for Root PARTIDs.</content>
</listitem><listitem><content>The Realm instance (MPAMF_ESR_rl) accesses the error status used for Realm PARTIDs.</content>
</listitem></list>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>