<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>MPAMCFG_EN_FLAGS</reg_short_name>
        
        <reg_long_name>MPAM Partition Configuration Enable Flags Register</reg_long_name>

        <power_domain_text>The power domain of MPAMCFG_EN_FLAGS is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word></power_domain_text>


      
        <reg_condition otherwise="RES0">when (FEAT_MPAMv0p1 is implemented or FEAT_MPAMv1p1 is implemented) and MPAMF_IDR.HAS_ENDIS == 1</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_s</reg_frame>
    <reg_offset><hexnumber>0x0320</hexnumber></reg_offset>
    <reg_instance>MPAMCFG_EN_FLAGS_s</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_ns</reg_frame>
    <reg_offset><hexnumber>0x0320</hexnumber></reg_offset>
    <reg_instance>MPAMCFG_EN_FLAGS_ns</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rt</reg_frame>
    <reg_offset><hexnumber>0x0320</hexnumber></reg_offset>
    <reg_instance>MPAMCFG_EN_FLAGS_rt</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rl</reg_frame>
    <reg_offset><hexnumber>0x0320</hexnumber></reg_offset>
    <reg_instance>MPAMCFG_EN_FLAGS_rl</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Enable flags for 32 PARTIDs.</para>

      </purpose_text>
      <purpose_text>
        <para>MPAMCFG_EN_FLAGS_s gives read/write access to 32 Secure PARTIDs.
MPAMCFG_EN_FLAGS_ns gives read/write access to 32 Non-secure PARTIDs.
MPAMCFG_EN_FLAGS_rl gives read/write access to 32 Realm PARTIDs.
MPAMCFG_EN_FLAGS_rt gives read/write access to 32 Root PARTIDs.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Memory Partitioning and Monitoring registers</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>MPAMCFG_EN_FLAGS is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EN&lt;x&gt;</field_name>
    <field_msb>31</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>31:0</rel_range>
    <field_description order="before">
      <para>PARTID Enable flags. The group of flags accessed is selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.PARTID_SEL &amp; <hexnumber>0xFFE0</hexnumber> in bit [0] to (<register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.PARTID_SEL &amp; <hexnumber>0xFFE0</hexnumber>) + 31 in bit [31].</para>
    </field_description>
    <field_description order="after"><para>Each bit in <register_link state="ext" id="ext-mpamcfg_en_flags.xml">MPAMCFG_EN_FLAGS</register_link> gives access to the same state as controlled by <register_link state="ext" id="ext-mpamcfg_en.xml">MPAMCFG_EN</register_link> and <register_link state="ext" id="ext-mpamcfg_dis.xml">MPAMCFG_DIS</register_link>.</para>
<para>Bits MPAMCFG_EN_FLAGS.EN&lt;x&gt;, where (<register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.PARTID_SEL &amp; <hexnumber>0xFFE0</hexnumber>) + x is greater than <register_link state="ext" id="ext-mpamf_idr.xml">MPAMF_IDR</register_link>.PARTID_MAX, are not required to be implemented.</para>
<para>As with other partitioning controls, the enable flag for PARTID 0 must be reset to <binarynumber>0b1</binarynumber> (enabled).</para></field_description>
    <field_array_indexes index_variable="x" element_size="1" range_specifier="x">
      <field_array_index>
        <field_array_start>31</field_array_start>
        <field_array_end>0</field_array_end>
      </field_array_index>
    </field_array_indexes>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The PARTID is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The PARTID is enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_0" label="EN31" msb="31" lsb="31"/>
  <fieldat id="fieldset_0-31_0" label="EN30" msb="30" lsb="30"/>
  <fieldat id="fieldset_0-31_0" label="EN29" msb="29" lsb="29"/>
  <fieldat id="fieldset_0-31_0" label="EN28" msb="28" lsb="28"/>
  <fieldat id="fieldset_0-31_0" label="EN27" msb="27" lsb="27"/>
  <fieldat id="fieldset_0-31_0" label="EN26" msb="26" lsb="26"/>
  <fieldat id="fieldset_0-31_0" label="EN25" msb="25" lsb="25"/>
  <fieldat id="fieldset_0-31_0" label="EN24" msb="24" lsb="24"/>
  <fieldat id="fieldset_0-31_0" label="EN23" msb="23" lsb="23"/>
  <fieldat id="fieldset_0-31_0" label="EN22" msb="22" lsb="22"/>
  <fieldat id="fieldset_0-31_0" label="EN21" msb="21" lsb="21"/>
  <fieldat id="fieldset_0-31_0" label="EN20" msb="20" lsb="20"/>
  <fieldat id="fieldset_0-31_0" label="EN19" msb="19" lsb="19"/>
  <fieldat id="fieldset_0-31_0" label="EN18" msb="18" lsb="18"/>
  <fieldat id="fieldset_0-31_0" label="EN17" msb="17" lsb="17"/>
  <fieldat id="fieldset_0-31_0" label="EN16" msb="16" lsb="16"/>
  <fieldat id="fieldset_0-31_0" label="EN15" msb="15" lsb="15"/>
  <fieldat id="fieldset_0-31_0" label="EN14" msb="14" lsb="14"/>
  <fieldat id="fieldset_0-31_0" label="EN13" msb="13" lsb="13"/>
  <fieldat id="fieldset_0-31_0" label="EN12" msb="12" lsb="12"/>
  <fieldat id="fieldset_0-31_0" label="EN11" msb="11" lsb="11"/>
  <fieldat id="fieldset_0-31_0" label="EN10" msb="10" lsb="10"/>
  <fieldat id="fieldset_0-31_0" label="EN9" msb="9" lsb="9"/>
  <fieldat id="fieldset_0-31_0" label="EN8" msb="8" lsb="8"/>
  <fieldat id="fieldset_0-31_0" label="EN7" msb="7" lsb="7"/>
  <fieldat id="fieldset_0-31_0" label="EN6" msb="6" lsb="6"/>
  <fieldat id="fieldset_0-31_0" label="EN5" msb="5" lsb="5"/>
  <fieldat id="fieldset_0-31_0" label="EN4" msb="4" lsb="4"/>
  <fieldat id="fieldset_0-31_0" label="EN3" msb="3" lsb="3"/>
  <fieldat id="fieldset_0-31_0" label="EN2" msb="2" lsb="2"/>
  <fieldat id="fieldset_0-31_0" label="EN1" msb="1" lsb="1"/>
  <fieldat id="fieldset_0-31_0" label="EN0" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>This register is within the MPAM feature page memory frames.</para>

      </access_permission_text>
      <access_permission_text>
        <para>In a system that supports Secure, Non-secure, Root, and Realm memory maps, there must be MPAM feature pages in all four address maps:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>MPAMCFG_EN_FLAGS_s must only be accessible from the Secure MPAM feature page.</content>
</listitem><listitem><content>MPAMCFG_EN_FLAGS_ns must only be accessible from the Non-secure MPAM feature page.</content>
</listitem><listitem><content>MPAMCFG_EN_FLAGS_rt must only be accessible from the Root MPAM feature page.</content>
</listitem><listitem><content>MPAMCFG_EN_FLAGS_rl must only be accessible from the Realm MPAM feature page.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMCFG_EN_FLAGS_s, MPAMCFG_EN_FLAGS_ns, MPAMCFG_EN_FLAGS_rt, and MPAMCFG_EN_FLAGS_rl must be separate registers:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>The Secure instance (MPAMCFG_EN_FLAGS_s) accesses the PARTID enable used for Secure PARTIDs.</content>
</listitem><listitem><content>The Non-secure instance (MPAMCFG_EN_FLAGS_ns) accesses the PARTID enable used for Non-secure PARTIDs.</content>
</listitem><listitem><content>The Root instance (MPAMCFG_EN_FLAGS_rt) accesses the PARTID enable used for Root PARTIDs.</content>
</listitem><listitem><content>The Realm instance (MPAMCFG_EN_FLAGS_rl) accesses the PARTID enable used for Realm PARTIDs.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>When RIS is implemented, loads and stores to MPAMCFG_EN_FLAGS access the PARTID enable configuration settings for the PARTID enable resource instance selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.RIS and the PARTID selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.PARTID_SEL.</para>

      </access_permission_text>
      <access_permission_text>
        <para>When RIS is not implemented, loads and stores to MPAMCFG_EN_FLAGS access the PARTID enable configuration settings for the PARTID selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.PARTID_SEL.</para>

      </access_permission_text>
      <access_permission_text>
        <para>When PARTID narrowing is implemented, loads and stores to MPAMCFG_EN_FLAGS access the PARTID enable configuration settings for the internal PARTID selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.PARTID_SEL, and <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.INTERNAL must be 1.</para>

      </access_permission_text>
      <access_permission_text>
        <para>When PARTID narrowing is not implemented, loads and stores to MPAMCFG_EN_FLAGS access the PARTID enable configuration settings for the request PARTID selected by <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.PARTID_SEL, and <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.INTERNAL must be 0.</para>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>