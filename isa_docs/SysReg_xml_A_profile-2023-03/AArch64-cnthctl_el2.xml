<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>CNTHCTL_EL2</reg_short_name>
        
        <reg_long_name>Counter-timer Hypervisor Control Register</reg_long_name>



      
      



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        



      
      <reg_mapping>
        
  

    

    <mapped_name filename="AArch32-cnthctl.xml">CNTHCTL</mapped_name>
  <mapped_type>Architectural</mapped_type>
      <mapped_execution_state>AArch32</mapped_execution_state>
    <mapped_from_startbit>31</mapped_from_startbit>
    <mapped_from_endbit>0</mapped_from_endbit>
    <mapped_to_startbit>31</mapped_to_startbit>
    <mapped_to_endbit>0</mapped_to_endbit>
    <mapped_from_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_to_rangeset>

      </reg_mapping>

      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Controls the generation of an event stream from the physical counter, and access from EL1 to the physical counter and the EL1 physical timer.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
            <reg_group>Virtualization registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If EL2 is not implemented, this register is <arm-defined-word>RES0</arm-defined-word> from EL3.</para>

      </configuration_text>
      <configuration_text>
        <para>This register has no effect if EL2 is not enabled in the current Security state.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>CNTHCTL_EL2 is a 64-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="64">
  <fields_condition>When FEAT_VHE is implemented and HCR_EL2.E2H == 1</fields_condition>
  <fields_instance>HCR_EL2.E2H == 1</fields_instance>
  <text_before_fields/>
  <field id="fieldset_0-63_20" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>63</field_msb>
    <field_lsb>20</field_lsb>
    <rel_range>63:20</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-19_19-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CNTPMASK</field_name>
    <field_msb>19</field_msb>
    <field_lsb>19</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"/>
    <field_description order="after">
      <para>This bit is <arm-defined-word>RES0</arm-defined-word> in Non-secure and Secure state.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control has no affect on <register_link state="AArch64" id="AArch64-cntp_ctl_el0.xml">CNTP_CTL_EL0</register_link>.IMASK.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-cntp_ctl_el0.xml">CNTP_CTL_EL0</register_link>.IMASK behaves as if set to 1 for all purposes other than a direct read of the field.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_0-19_19-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>19</field_msb>
    <field_lsb>19</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-18_18-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CNTVMASK</field_name>
    <field_msb>18</field_msb>
    <field_lsb>18</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"/>
    <field_description order="after">
      <para>This bit is <arm-defined-word>RES0</arm-defined-word> in Non-secure and Secure state.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control has no affect on <register_link state="AArch64" id="AArch64-cntv_ctl_el0.xml">CNTV_CTL_EL0</register_link>.IMASK.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-cntv_ctl_el0.xml">CNTV_CTL_EL0</register_link>.IMASK behaves as if set to 1 for all purposes other than a direct read of the field.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_0-18_18-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>18</field_msb>
    <field_lsb>18</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-17_17-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EVNTIS</field_name>
    <field_msb>17</field_msb>
    <field_lsb>17</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Controls the scale of the generation of the event stream.</para>
    </field_description>
    <field_description order="after">
      <para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The CNTHCTL_EL2.EVNTI field applies to <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>[15:0].</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The CNTHCTL_EL2.EVNTI field applies to <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>[23:8].</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_0-17_17-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>17</field_msb>
    <field_lsb>17</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-16_16-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EL1NVVCT</field_name>
    <field_msb>16</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Traps EL1 accesses to the specified EL1 virtual timer registers using the EL02 descriptors to EL2, when EL2 is enabled for the current Security state.</para>
    </field_description>
    <field_description order="after"><para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 0 other than for the purpose of a direct read.</para>
<para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>If ((<register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H==1 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE==1) || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV2==0 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV1==1 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV==0), this control does not cause any instructions to be trapped.</para>
<para>If ((<register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H==0 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE==0) &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV2==1 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV1==0 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV==1), then EL1 accesses to CNTV_CTL_EL02 and CNTV_CVAL_EL02 are trapped to EL2.</para></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_0-16_16-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>16</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-15_15-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EL1NVPCT</field_name>
    <field_msb>15</field_msb>
    <field_lsb>15</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Traps EL1 accesses to the specified EL1 physical timer registers using the EL02 descriptors to EL2, when EL2 is enabled for the current Security state.</para>
    </field_description>
    <field_description order="after"><para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 0 other than for the purpose of a direct read.</para>
<para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>If ((<register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H==1 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE==1) || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV2==0 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV1==1 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV==0), this control does not cause any instructions to be trapped.</para>
<para>If (<register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H==0 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE==0) &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV2==1 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV1==0 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV==1, then EL1 accesses to CNTP_CTL_EL02 and CNTP_CVAL_EL02, are trapped to EL2.</para></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_0-15_15-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>15</field_msb>
    <field_lsb>15</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-14_14-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EL1TVCT</field_name>
    <field_msb>14</field_msb>
    <field_lsb>14</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Traps EL0 and EL1 accesses to the EL1 virtual counter registers to EL2, when EL2 is enabled for the current Security state.</para>
    </field_description>
    <field_description order="after"><para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 0 other than for the purpose of a direct read.</para>
<para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>If <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H, TGE} is {1, 1}, this control does not cause any instructions to be trapped.</para>
<para>If <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H is 0 or <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, then:</para>
<list type="unordered">
<listitem><content>In AArch64 state, traps EL0 and EL1 accesses to <register_link state="AArch64" id="AArch64-cntvct_el0.xml">CNTVCT_EL0</register_link> to EL2, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0VCTEN.</content>
</listitem><listitem><content>In AArch32 state, traps EL0 and EL1 accesses to <register_link state="AArch32" id="AArch32-cntvct.xml">CNTVCT</register_link> to EL2, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0VCTEN or <register_link state="AArch32" id="AArch32-cntkctl.xml">CNTKCTL</register_link>.PL0VCTEN.</content>
</listitem></list></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_0-14_14-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>14</field_msb>
    <field_lsb>14</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-13_13-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EL1TVT</field_name>
    <field_msb>13</field_msb>
    <field_lsb>13</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Traps EL0 and EL1 accesses to the EL1 virtual timer registers to EL2, when EL2 is enabled for the current Security state.</para>
    </field_description>
    <field_description order="after"><para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 0 other than for the purpose of a direct read.</para>
<para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>If <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H, TGE} is {1, 1}, this control does not cause any instructions to be trapped.</para>
<para>If <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H is 0 or <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, then:</para>
<list type="unordered">
<listitem><content>In AArch64 state, traps EL0 and EL1 accesses to <register_link state="AArch64" id="AArch64-cntv_ctl_el0.xml">CNTV_CTL_EL0</register_link>, <register_link state="AArch64" id="AArch64-cntv_cval_el0.xml">CNTV_CVAL_EL0</register_link>, and <register_link state="AArch64" id="AArch64-cntv_tval_el0.xml">CNTV_TVAL_EL0</register_link> to EL2, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0VTEN.</content>
</listitem><listitem><content>In AArch32 state, traps EL0 and EL1 accesses to <register_link state="AArch32" id="AArch32-cntv_ctl.xml">CNTV_CTL</register_link>, <register_link state="AArch32" id="AArch32-cntv_cval.xml">CNTV_CVAL</register_link>, and <register_link state="AArch32" id="AArch32-cntv_tval.xml">CNTV_TVAL</register_link> to EL2, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0VTEN or <register_link state="AArch32" id="AArch32-cntkctl.xml">CNTKCTL</register_link>.PL0VTEN.</content>
</listitem></list></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_0-13_13-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>13</field_msb>
    <field_lsb>13</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-12_12-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>ECV</field_name>
    <field_msb>12</field_msb>
    <field_lsb>12</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Enables the Enhanced Counter Virtualization functionality registers.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Enhanced Counter Virtualization functionality is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H, TGE} == {1, 1} or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.{NS, EEL2} == {0, 0}, then Enhanced Counter Virtualization functionality is disabled.</para>
<para>When <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.NS or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.EEL2 are 1, and <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H or <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE are 0, then Enhanced Counter Virtualization functionality is enabled when EL2 is enabled for the current Security state. This means that:</para>
<list type="unordered">
<listitem><content>An MRS to <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> from either EL0 or EL1 that is not trapped will return the value (PCount&lt;63:0&gt; - <register_link state="AArch64" id="AArch64-cntpoff_el2.xml">CNTPOFF_EL2</register_link>&lt;63:0&gt;).</content>
</listitem><listitem><content>The EL1 physical timer interrupt is triggered when ((PCount&lt;63:0&gt; - <register_link state="AArch64" id="AArch64-cntpoff_el2.xml">CNTPOFF_EL2</register_link>&lt;63:0&gt;) - PCVal&lt;63:0&gt;) is greater than or equal to 0.
PCount&lt;63:0&gt; is the physical count returned when <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> is read from EL2 or EL3.
PCVal&lt;63:0&gt; is the EL1 physical timer compare value for this timer.</content>
</listitem></list></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_0-12_12-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>12</field_msb>
    <field_lsb>12</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-11_11" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EL1PTEN</field_name>
    <field_msb>11</field_msb>
    <field_lsb>11</field_lsb>
    <rel_range>11</rel_range>
    <field_description order="before">
      <para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, traps EL0 and EL1 accesses to the E1 physical timer registers to EL2 when EL2 is enabled in the current Security state.</para>
    </field_description>
    <field_description order="after">
      <para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 1, this control does not cause any instructions to be trapped.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>From AArch64 state: EL0 and EL1 accesses to the <register_link state="AArch64" id="AArch64-cntp_ctl_el0.xml">CNTP_CTL_EL0</register_link>, <register_link state="AArch64" id="AArch64-cntp_cval_el0.xml">CNTP_CVAL_EL0</register_link>, and <register_link state="AArch64" id="AArch64-cntp_tval_el0.xml">CNTP_TVAL_EL0</register_link> are trapped to EL2 when EL2 is enabled in the current Security state, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0PTEN.</para>
<para>From AArch32 state: EL0 and EL1 accesses to the <register_link state="AArch32" id="AArch32-cntp_ctl.xml">CNTP_CTL</register_link>, <register_link state="AArch32" id="AArch32-cntp_cval.xml">CNTP_CVAL</register_link>, and <register_link state="AArch32" id="AArch32-cntp_tval.xml">CNTP_TVAL</register_link> are trapped to EL2 when EL2 is enabled in the current Security state, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0PTEN or <register_link state="AArch32" id="AArch32-cntkctl.xml">CNTKCTL</register_link>.PL0PTEN.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-10_10" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EL1PCTEN</field_name>
    <field_msb>10</field_msb>
    <field_lsb>10</field_lsb>
    <rel_range>10</rel_range>
    <field_description order="before"><para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, traps EL0 and EL1 accesses to the EL1 physical counter register to EL2 when EL2 is enabled in the current Security state, as follows:</para>
<list type="unordered">
<listitem><content>In AArch64 state, accesses to <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> are trapped to EL2, reported using EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content>In AArch32 state, MRRC or MCRR accesses to <register_link state="AArch32" id="AArch32-cntpct.xml">CNTPCT</register_link> are trapped to EL2, reported using EC syndrome value <hexnumber>0x04</hexnumber>.</content>
</listitem></list></field_description>
    <field_description order="after">
      <para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 1, this control does not cause any instructions to be trapped.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>From AArch64 state: EL0 and EL1 accesses to the <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> are trapped to EL2 when EL2 is enabled in the current Security state, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0PCTEN.</para>
<para>From AArch32 state: EL0 and EL1 accesses to the <register_link state="AArch32" id="AArch32-cntpct.xml">CNTPCT</register_link> are trapped to EL2 when EL2 is enabled in the current Security state, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0PCTEN or <register_link state="AArch32" id="AArch32-cntkctl.xml">CNTKCTL</register_link>.PL0PCTEN.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-9_9" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EL0PTEN</field_name>
    <field_msb>9</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>9</rel_range>
    <field_description order="before"><para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, this control does not cause any instructions to be trapped.</para>
<para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 1, traps EL0 accesses to the physical timer registers to EL2.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>EL0 using AArch64: EL0 accesses to the <register_link state="AArch64" id="AArch64-cntp_ctl_el0.xml">CNTP_CTL_EL0</register_link>, <register_link state="AArch64" id="AArch64-cntp_cval_el0.xml">CNTP_CVAL_EL0</register_link>, and <register_link state="AArch64" id="AArch64-cntp_tval_el0.xml">CNTP_TVAL_EL0</register_link> registers are trapped to EL2.</para>
<para>EL0 using AArch32: EL0 accesses to the <register_link state="AArch32" id="AArch32-cntp_ctl.xml">CNTP_CTL</register_link>, <register_link state="AArch32" id="AArch32-cntp_cval.xml">CNTP_CVAL</register_link> and <register_link state="AArch32" id="AArch32-cntp_tval.xml">CNTP_TVAL</register_link> registers are trapped to EL2.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-8_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EL0VTEN</field_name>
    <field_msb>8</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>8</rel_range>
    <field_description order="before"><para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, this control does not cause any instructions to be trapped.</para>
<para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 1, traps EL0 accesses to the virtual timer registers to EL2.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>EL0 using AArch64: EL0 accesses to the <register_link state="AArch64" id="AArch64-cntv_ctl_el0.xml">CNTV_CTL_EL0</register_link>, <register_link state="AArch64" id="AArch64-cntv_cval_el0.xml">CNTV_CVAL_EL0</register_link>, and <register_link state="AArch64" id="AArch64-cntv_tval_el0.xml">CNTV_TVAL_EL0</register_link> registers are trapped to EL2.</para>
<para>EL0 using AArch32: EL0 accesses to the <register_link state="AArch32" id="AArch32-cntv_ctl.xml">CNTV_CTL</register_link>, <register_link state="AArch32" id="AArch32-cntv_cval.xml">CNTV_CVAL</register_link>, and <register_link state="AArch32" id="AArch32-cntv_tval.xml">CNTV_TVAL</register_link> registers are trapped to EL2.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-7_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EVNTI</field_name>
    <field_msb>7</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>7:4</rel_range>
    <field_description order="before"><para>Selects which bit of <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>, as seen from EL2, is the trigger for the event stream generated from that counter when that stream is enabled.</para>
<para>If <xref browsertext="FEAT_ECV" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.ECV"/> is implemented, and CNTHCTL_EL2.EVNTIS is 1, this field selects a trigger bit in the range 8 to 23 of <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>.</para>
<para>Otherwise, this field selects a trigger bit in the range 0 to 15 of <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>.</para></field_description>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-3_3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EVNTDIR</field_name>
    <field_msb>3</field_msb>
    <field_lsb>3</field_lsb>
    <rel_range>3</rel_range>
    <field_description order="before">
      <para>Controls which transition of the <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> trigger bit, as seen from EL2 and defined by EVNTI, generates an event when the event stream is enabled.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>A 0 to 1 transition of the trigger bit triggers an event.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>A 1 to 0 transition of the trigger bit triggers an event.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-2_2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EVNTEN</field_name>
    <field_msb>2</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>2</rel_range>
    <field_description order="before">
      <para>Enables the generation of an event stream from <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> as seen from EL2.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Disables the event stream.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Enables the event stream.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-1_1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EL0VCTEN</field_name>
    <field_msb>1</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>1</rel_range>
    <field_description order="before"><para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, this control does not cause any instructions to be trapped.</para>
<para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 1, traps EL0 accesses to the frequency register and virtual counter register to EL2.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>EL0 using AArch64: EL0 accesses to the <register_link state="AArch64" id="AArch64-cntvct_el0.xml">CNTVCT_EL0</register_link> are trapped to EL2.</para>
<para>EL0 using AArch64: EL0 accesses to the <register_link state="AArch64" id="AArch64-cntfrq_el0.xml">CNTFRQ_EL0</register_link> register are trapped to EL2, if <register_link state="AArch64" id="AArch64-cnthctl_el2.xml">CNTHCTL_EL2</register_link>.EL0PCTEN is also 0.</para>
<para>EL0 using AArch32: EL0 accesses to the <register_link state="AArch32" id="AArch32-cntvct.xml">CNTVCT</register_link> are trapped to EL2.</para>
<para>EL0 using AArch32: EL0 accesses to the <register_link state="AArch32" id="AArch32-cntfrq.xml">CNTFRQ</register_link> register are trapped to EL2, if <register_link state="AArch32" id="AArch32-cnthctl.xml">CNTHCTL</register_link>.EL0PCTEN is also 0.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-0_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EL0PCTEN</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, this control does not cause any instructions to be trapped.</para>
<para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 1, traps EL0 accesses to the frequency register and physical counter register to EL2.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>EL0 using AArch64: EL0 accesses to the <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> are trapped to EL2.</para>
<para>EL0 using AArch64: EL0 accesses to the <register_link state="AArch64" id="AArch64-cntfrq_el0.xml">CNTFRQ_EL0</register_link> register are trapped to EL2, if <register_link state="AArch64" id="AArch64-cnthctl_el2.xml">CNTHCTL_EL2</register_link>.EL0VCTEN is also 0.</para>
<para>EL0 using AArch32: EL0 accesses to the <register_link state="AArch32" id="AArch32-cntpct.xml">CNTPCT</register_link> are trapped to EL2.</para>
<para>EL0 using AArch32: EL0 accesses to the <register_link state="AArch32" id="AArch32-cntfrq.xml">CNTFRQ</register_link> and register are trapped to EL2, if <register_link state="AArch64" id="AArch64-cnthctl_el2.xml">CNTHCTL_EL2</register_link>.EL0VCTEN is also 0.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields/>
</fields>



<fields id="fieldset_1" length="64">
  <fields_condition/>
  <fields_instance>HCR_EL2.E2H == 0</fields_instance>
  <text_before_fields><para>The following field descriptions apply in all Armv8.0 implementations.</para>
<para>The descriptions also explain the behavior when EL3 is implemented and EL2 is not implemented.</para></text_before_fields>
  <field id="fieldset_1-63_20" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>63</field_msb>
    <field_lsb>20</field_lsb>
    <rel_range>63:20</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_1-19_19-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CNTPMASK</field_name>
    <field_msb>19</field_msb>
    <field_lsb>19</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"/>
    <field_description order="after">
      <para>This bit is <arm-defined-word>RES0</arm-defined-word> in Non-secure and Secure state.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control has no affect on <register_link state="AArch64" id="AArch64-cntp_ctl_el0.xml">CNTP_CTL_EL0</register_link>.IMASK.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-cntp_ctl_el0.xml">CNTP_CTL_EL0</register_link>.IMASK behaves as if set to 1 for all purposes other than a direct read of the field.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_1-19_19-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>19</field_msb>
    <field_lsb>19</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-18_18-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CNTVMASK</field_name>
    <field_msb>18</field_msb>
    <field_lsb>18</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"/>
    <field_description order="after">
      <para>This bit is <arm-defined-word>RES0</arm-defined-word> in Non-secure and Secure state.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control has no affect on <register_link state="AArch64" id="AArch64-cntv_ctl_el0.xml">CNTV_CTL_EL0</register_link>.IMASK.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="AArch64" id="AArch64-cntv_ctl_el0.xml">CNTV_CTL_EL0</register_link>.IMASK behaves as if set to 1 for all purposes other than a direct read of the field.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_1-18_18-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>18</field_msb>
    <field_lsb>18</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-17_17-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EVNTIS</field_name>
    <field_msb>17</field_msb>
    <field_lsb>17</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Controls the scale of the generation of the event stream.</para>
    </field_description>
    <field_description order="after">
      <para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The CNTHCTL_EL2.EVNTI field applies to <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>[15:0].</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The CNTHCTL_EL2.EVNTI field applies to <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>[23:8].</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_1-17_17-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>17</field_msb>
    <field_lsb>17</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-16_16-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EL1NVVCT</field_name>
    <field_msb>16</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Traps EL1 accesses to the specified EL1 virtual timer registers using the EL02 descriptors to EL2, when EL2 is enabled for the current Security state.</para>
    </field_description>
    <field_description order="after"><para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 0 other than for the purpose of a direct read.</para>
<para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>If ((<register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H==1 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE==1) || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV2==0 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV1==1 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV==0), this control does not cause any instructions to be trapped.</para>
<para>If ((<register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H==0 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE==0) &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV2==1 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV1==0 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV==1), then EL1 accesses to CNTV_CTL_EL02 and CNTV_CVAL_EL02 are trapped to EL2.</para></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_1-16_16-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>16</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-15_15-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EL1NVPCT</field_name>
    <field_msb>15</field_msb>
    <field_lsb>15</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Traps EL1 accesses to the specified EL1 physical timer registers using the EL02 descriptors to EL2, when EL2 is enabled for the current Security state.</para>
    </field_description>
    <field_description order="after"><para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 0 other than for the purpose of a direct read.</para>
<para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>If ((<register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H==1 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE==1) || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV2==0 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV1==1 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV==0), this control does not cause any instructions to be trapped.</para>
<para>If (<register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H==0 || <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE==0) &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV2==1 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV1==0 &amp;&amp; <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.NV==1, then EL1 accesses to CNTP_CTL_EL02 and CNTP_CVAL_EL02, are trapped to EL2.</para></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_1-15_15-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>15</field_msb>
    <field_lsb>15</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-14_14-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EL1TVCT</field_name>
    <field_msb>14</field_msb>
    <field_lsb>14</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Traps EL0 and EL1 accesses to the EL1 virtual counter registers to EL2, when EL2 is enabled for the current Security state.</para>
    </field_description>
    <field_description order="after"><para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 0 other than for the purpose of a direct read.</para>
<para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>If <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H, TGE} is {1, 1}, this control does not cause any instructions to be trapped.</para>
<para>If <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H is 0 or <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, then:</para>
<para>In AArch64 state, traps EL0 and EL1 accesses to <register_link state="AArch64" id="AArch64-cntvct_el0.xml">CNTVCT_EL0</register_link> to EL2, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0VCTEN.
In AArch32 state, traps EL0 and EL1 accesses to <register_link state="AArch32" id="AArch32-cntvct.xml">CNTVCT</register_link> to EL2, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0VCTEN or <register_link state="AArch32" id="AArch32-cntkctl.xml">CNTKCTL</register_link>.PL0VCTEN.</para></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_1-14_14-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>14</field_msb>
    <field_lsb>14</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-13_13-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EL1TVT</field_name>
    <field_msb>13</field_msb>
    <field_lsb>13</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Traps EL0 and EL1 accesses to the EL1 virtual timer registers to EL2, when EL2 is enabled for the current Security state.</para>
    </field_description>
    <field_description order="after"><para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 0 other than for the purpose of a direct read.</para>
<para>This control applies regardless of the value of the CNTHCTL_EL2.ECV bit.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>If <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H, TGE} is {1, 1}, this control does not cause any instructions to be trapped.</para>
<para>If <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H is 0 or <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 0, then:</para>
<list type="unordered">
<listitem><content>In AArch64 state, traps EL0 and EL1 accesses to <register_link state="AArch64" id="AArch64-cntv_ctl_el0.xml">CNTV_CTL_EL0</register_link>, <register_link state="AArch64" id="AArch64-cntv_cval_el0.xml">CNTV_CVAL_EL0</register_link>, and <register_link state="AArch64" id="AArch64-cntv_tval_el0.xml">CNTV_TVAL_EL0</register_link> to EL2, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0VTEN.</content>
</listitem><listitem><content>In AArch32 state, traps EL0 and EL1 accesses to <register_link state="AArch32" id="AArch32-cntv_ctl.xml">CNTV_CTL</register_link>, <register_link state="AArch32" id="AArch32-cntv_cval.xml">CNTV_CVAL</register_link>, and <register_link state="AArch32" id="AArch32-cntv_tval.xml">CNTV_TVAL</register_link> to EL2, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0VTEN or <register_link state="AArch32" id="AArch32-cntkctl.xml">CNTKCTL</register_link>.PL0VTEN.</content>
</listitem></list></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_1-13_13-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>13</field_msb>
    <field_lsb>13</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-12_12-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>ECV</field_name>
    <field_msb>12</field_msb>
    <field_lsb>12</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Enables the Enhanced Counter Virtualization functionality registers.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Enhanced Counter Virtualization functionality is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{E2H, TGE} == {1, 1} or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.{NS, EEL2} == {0, 0}, then Enhanced Counter Virtualization functionality is disabled.</para>
<para>When <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.NS or <register_link state="AArch64" id="AArch64-scr_el3.xml">SCR_EL3</register_link>.EEL2 are 1, and <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H or <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE are 0, then Enhanced Counter Virtualization functionality is enabled when EL2 is enabled for the current Security state. This means that:</para>
<list type="unordered">
<listitem><content>An MRS to <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> from either EL0 or EL1 that is not trapped will return the value (PCount&lt;63:0&gt; - <register_link state="AArch64" id="AArch64-cntpoff_el2.xml">CNTPOFF_EL2</register_link>&lt;63:0&gt;).</content>
</listitem><listitem><content>The EL1 physical timer interrupt is triggered when ((PCount&lt;63:0&gt; - <register_link state="AArch64" id="AArch64-cntpoff_el2.xml">CNTPOFF_EL2</register_link>&lt;63:0&gt;) - PCVal&lt;63:0&gt;) is greater than or equal to 0.
PCount is the physical count returned when <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> is read from EL2 or EL3.
PCVal&lt;63:0&gt; is the EL1 physical timer compare value for this timer.</content>
</listitem></list></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_ECV is implemented</fields_condition>
  </field>
  <field id="fieldset_1-12_12-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>12</field_msb>
    <field_lsb>12</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-11_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>11</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>11:8</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_1-7_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EVNTI</field_name>
    <field_msb>7</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>7:4</rel_range>
    <field_description order="before"><para>Selects which bit of <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>, as seen from EL2,is the trigger for the event stream generated from that counter when that stream is enabled.</para>
<para>If <xref browsertext="FEAT_ECV" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.ECV"/> is implemented, and CNTHCTL_EL2.EVNTIS is 1, this field selects a trigger bit in the range 8 to 23 of <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>.</para>
<para>Otherwise, this field selects a trigger bit in the range 0 to 15 of <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link>.</para></field_description>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-3_3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EVNTDIR</field_name>
    <field_msb>3</field_msb>
    <field_lsb>3</field_lsb>
    <rel_range>3</rel_range>
    <field_description order="before">
      <para>Controls which transition of the <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> trigger bit, as seen from EL2 and defined by EVNTI, generates an event when the event stream is enabled.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>A 0 to 1 transition of the trigger bit triggers an event.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>A 1 to 0 transition of the trigger bit triggers an event.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-2_2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EVNTEN</field_name>
    <field_msb>2</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>2</rel_range>
    <field_description order="before">
      <para>Enables the generation of an event stream from <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> as seen from EL2.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Disables the event stream.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Enables the event stream.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-1_1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EL1PCEN</field_name>
    <field_msb>1</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>1</rel_range>
    <field_description order="before"><para>Traps EL0 and EL1 accesses to the EL1 physical timer registers to EL2 when EL2 is enabled in the current Security state, as follows:</para>
<list type="unordered">
<listitem><content>In AArch64 state, accesses to <register_link state="AArch64" id="AArch64-cntp_ctl_el0.xml">CNTP_CTL_EL0</register_link>, <register_link state="AArch64" id="AArch64-cntp_cval_el0.xml">CNTP_CVAL_EL0</register_link>, <register_link state="AArch64" id="AArch64-cntp_tval_el0.xml">CNTP_TVAL_EL0</register_link> are trapped to EL2, reported using EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content>In AArch32 state, MRC or MCR accesses to the following registers are trapped to EL2 reported using EC syndrome value <hexnumber>0x3</hexnumber> and MRRC and MCRR accesses are trapped to EL2, reported using EC syndrome value <hexnumber>0x04</hexnumber>:<list type="unordered">
<listitem><content><register_link state="AArch32" id="AArch32-cntp_ctl.xml">CNTP_CTL</register_link>, <register_link state="AArch32" id="AArch32-cntp_cval.xml">CNTP_CVAL</register_link>, <register_link state="AArch32" id="AArch32-cntp_tval.xml">CNTP_TVAL</register_link>.</content>
</listitem></list>
</content>
</listitem></list></field_description>
    <field_description order="after">
      <para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 1 other than for the purpose of a direct read.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>From AArch64 state: EL0 and EL1 accesses to the <register_link state="AArch64" id="AArch64-cntp_ctl_el0.xml">CNTP_CTL_EL0</register_link>, <register_link state="AArch64" id="AArch64-cntp_cval_el0.xml">CNTP_CVAL_EL0</register_link>, and <register_link state="AArch64" id="AArch64-cntp_tval_el0.xml">CNTP_TVAL_EL0</register_link> are trapped to EL2 when EL2 is enabled in the current Security state, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0PTEN.</para>
<para>From AArch32 state: EL0 and EL1 accesses to the <register_link state="AArch32" id="AArch32-cntp_ctl.xml">CNTP_CTL</register_link>, <register_link state="AArch32" id="AArch32-cntp_cval.xml">CNTP_CVAL</register_link>, and <register_link state="AArch32" id="AArch32-cntp_tval.xml">CNTP_TVAL</register_link> are trapped to EL2 when EL2 is enabled in the current Security state, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0PTEN or <register_link state="AArch32" id="AArch32-cntkctl.xml">CNTKCTL</register_link>.PL0PTEN.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-0_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EL1PCTEN</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>Traps EL0 and EL1 accesses to the EL1 physical counter register to EL2 when EL2 is enabled in the current Security state, as follows:</para>
<list type="unordered">
<listitem><content>In AArch64 state, accesses to <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> are trapped to EL2, reported using EC syndrome value <hexnumber>0x18</hexnumber>.</content>
</listitem><listitem><content>In AArch32 state, MRRC or MCRR accesses to <register_link state="AArch32" id="AArch32-cntpct.xml">CNTPCT</register_link> are trapped to EL2, reported using EC syndrome value <hexnumber>0x04</hexnumber>.</content>
</listitem></list></field_description>
    <field_description order="after">
      <para>If EL3 is implemented and EL2 is not implemented, behavior is as if this bit is 1 other than for the purpose of a direct read.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>From AArch64 state: EL0 and EL1 accesses to the <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> are trapped to EL2 when EL2 is enabled in the current Security state, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0PCTEN.</para>
<para>From AArch32 state: EL0 and EL1 accesses to the <register_link state="AArch32" id="AArch32-cntpct.xml">CNTPCT</register_link> are trapped to EL2 when EL2 is enabled in the current Security state, unless they are trapped by <register_link state="AArch64" id="AArch64-cntkctl_el1.xml">CNTKCTL_EL1</register_link>.EL0PCTEN or <register_link state="AArch32" id="AArch32-cntkctl.xml">CNTKCTL</register_link>.PL0PCTEN.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>This control does not cause any instructions to be trapped.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields/>
</fields>





    
<reg_fieldset length="64">
  <fields_condition>When FEAT_VHE is implemented and HCR_EL2.E2H == 1</fields_condition>
  <fieldat id="fieldset_0-63_20" msb="63" lsb="20"/>
  <fieldat id="fieldset_0-19_19-1" msb="19" lsb="19"/>
  <fieldat id="fieldset_0-18_18-1" msb="18" lsb="18"/>
  <fieldat id="fieldset_0-17_17-1" msb="17" lsb="17"/>
  <fieldat id="fieldset_0-16_16-1" msb="16" lsb="16"/>
  <fieldat id="fieldset_0-15_15-1" msb="15" lsb="15"/>
  <fieldat id="fieldset_0-14_14-1" msb="14" lsb="14"/>
  <fieldat id="fieldset_0-13_13-1" msb="13" lsb="13"/>
  <fieldat id="fieldset_0-12_12-1" msb="12" lsb="12"/>
  <fieldat id="fieldset_0-11_11" msb="11" lsb="11"/>
  <fieldat id="fieldset_0-10_10" msb="10" lsb="10"/>
  <fieldat id="fieldset_0-9_9" msb="9" lsb="9"/>
  <fieldat id="fieldset_0-8_8" msb="8" lsb="8"/>
  <fieldat id="fieldset_0-7_4" msb="7" lsb="4"/>
  <fieldat id="fieldset_0-3_3" msb="3" lsb="3"/>
  <fieldat id="fieldset_0-2_2" msb="2" lsb="2"/>
  <fieldat id="fieldset_0-1_1" msb="1" lsb="1"/>
  <fieldat id="fieldset_0-0_0" msb="0" lsb="0"/>
</reg_fieldset>

    
<reg_fieldset length="64">
  <fields_condition/>
  <fieldat id="fieldset_1-63_20" msb="63" lsb="20"/>
  <fieldat id="fieldset_1-19_19-1" msb="19" lsb="19"/>
  <fieldat id="fieldset_1-18_18-1" msb="18" lsb="18"/>
  <fieldat id="fieldset_1-17_17-1" msb="17" lsb="17"/>
  <fieldat id="fieldset_1-16_16-1" msb="16" lsb="16"/>
  <fieldat id="fieldset_1-15_15-1" msb="15" lsb="15"/>
  <fieldat id="fieldset_1-14_14-1" msb="14" lsb="14"/>
  <fieldat id="fieldset_1-13_13-1" msb="13" lsb="13"/>
  <fieldat id="fieldset_1-12_12-1" msb="12" lsb="12"/>
  <fieldat id="fieldset_1-11_8" msb="11" lsb="8"/>
  <fieldat id="fieldset_1-7_4" msb="7" lsb="4"/>
  <fieldat id="fieldset_1-3_3" msb="3" lsb="3"/>
  <fieldat id="fieldset_1-2_2" msb="2" lsb="2"/>
  <fieldat id="fieldset_1-1_1" msb="1" lsb="1"/>
  <fieldat id="fieldset_1-0_0" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>When <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H is 1, without explicit synchronization, access from EL2 using the mnemonic CNTHCTL_EL2 or CNTKCTL_EL1 are not guaranteed to be ordered with respect to accesses using the other mnemonic.</para>
      </access_permission_text>





        
        <access_mechanism accessor="MRS CNTHCTL_EL2" type="SystemAccessor">
            <encoding>
            <access_instruction>MRS &lt;Xt&gt;, CNTHCTL_EL2</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b100"/>
                
                <enc n="CRn" v="0b1110"/>
                
                <enc n="CRm" v="0b0001"/>
                
                <enc n="op2" v="0b000"/>
            </encoding>
            <access_permission>
                <ps name="MRS" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    X[t, 64] = CNTHCTL_EL2;
elsif PSTATE.EL == EL3 then
    X[t, 64] = CNTHCTL_EL2;
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>
        
        <access_mechanism accessor="MSRregister CNTHCTL_EL2" type="SystemAccessor">
            <encoding>
            <access_instruction>MSR CNTHCTL_EL2, &lt;Xt&gt;</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b100"/>
                
                <enc n="CRn" v="0b1110"/>
                
                <enc n="CRm" v="0b0001"/>
                
                <enc n="op2" v="0b000"/>
            </encoding>
            <access_permission>
                <ps name="MSRregister" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    CNTHCTL_EL2 = X[t, 64];
elsif PSTATE.EL == EL3 then
    CNTHCTL_EL2 = X[t, 64];
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>
        
        <access_mechanism accessor="MRS CNTKCTL_EL1" type="SystemAccessor">
            <encoding>
            <access_instruction>MRS &lt;Xt&gt;, CNTKCTL_EL1</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b000"/>
                
                <enc n="CRn" v="0b1110"/>
                
                <enc n="CRm" v="0b0001"/>
                
                <enc n="op2" v="0b000"/>
            </encoding>
            <access_condition>
When FEAT_VHE is implemented
            </access_condition>
            <access_permission>
                <ps name="MRS" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    X[t, 64] = CNTKCTL_EL1;
elsif PSTATE.EL == EL2 then
    if HCR_EL2.E2H == '1' then
        X[t, 64] = CNTHCTL_EL2;
    else
        X[t, 64] = CNTKCTL_EL1;
elsif PSTATE.EL == EL3 then
    X[t, 64] = CNTKCTL_EL1;
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>
        
        <access_mechanism accessor="MSRregister CNTKCTL_EL1" type="SystemAccessor">
            <encoding>
            <access_instruction>MSR CNTKCTL_EL1, &lt;Xt&gt;</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b000"/>
                
                <enc n="CRn" v="0b1110"/>
                
                <enc n="CRm" v="0b0001"/>
                
                <enc n="op2" v="0b000"/>
            </encoding>
            <access_condition>
When FEAT_VHE is implemented
            </access_condition>
            <access_permission>
                <ps name="MSRregister" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    CNTKCTL_EL1 = X[t, 64];
elsif PSTATE.EL == EL2 then
    if HCR_EL2.E2H == '1' then
        CNTHCTL_EL2 = X[t, 64];
    else
        CNTKCTL_EL1 = X[t, 64];
elsif PSTATE.EL == EL3 then
    CNTKCTL_EL1 = X[t, 64];
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:06; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>