<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>TRCACVR&lt;n&gt;</reg_short_name>
        
        <reg_long_name>Address Comparator Value Register &lt;n&gt;</reg_long_name>



      
        <reg_condition otherwise="RES0">when FEAT_ETE is implemented, FEAT_TRC_EXT is implemented and UInt(TRCIDR4.NUMACPAIRS) * 2 &gt; n</reg_condition>
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>15</reg_array_end>
         </reg_array>
      
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>ETE</reg_component>
    <reg_offset><hexnumber>0x400</hexnumber> + (8 * n)</reg_offset>
    <reg_instance>TRCACVR&lt;n&gt;</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When OSLockStatus(), or !AllowExternalTraceAccess() or !IsTraceCorePowered()</reg_access_level>
          <reg_access_type>ERROR</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        



      
      <reg_mapping>
        
  

    

    <mapped_name filename="AArch64-trcacvrn.xml">TRCACVR&lt;n&gt;</mapped_name>
  <mapped_type>Architectural</mapped_type>
      <mapped_execution_state>AArch64</mapped_execution_state>
    <mapped_from_startbit>63</mapped_from_startbit>
    <mapped_from_endbit>0</mapped_from_endbit>
    <mapped_to_startbit>63</mapped_to_startbit>
    <mapped_to_endbit>0</mapped_to_endbit>
    <mapped_from_rangeset output="63:0">
      <range>
        <msb>63</msb>
        <lsb>0</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="63:0">
      <range>
        <msb>63</msb>
        <lsb>0</lsb>
      </range>
    </mapped_to_rangeset>

      </reg_mapping>

      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Contains the address value.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Trace unit registers</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>TRCACVR&lt;n&gt; is a 64-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="64">
  <fields_instance>TRCACVR&lt;n&gt;</fields_instance>
  <text_before_fields/>
  <field id="fieldset_0-63_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ADDRESS</field_name>
    <field_msb>63</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>63:0</rel_range>
    <field_description order="before"><para>Address Value.</para>
<para>The Address Comparators can support implementations that use multiple address widths. When the trace unit compares the ADDRESS field with an address that has a width less than this field, then the address must be zero-extended to the ADDRESS field width. The trace unit then compares all implemented bits. For example, in a system that supports both 32-bit and 64-bit addresses, when the PE is in AArch32 state the comparator must zero-extend the 32-bit address and compare against the full 64 bits that are stored in the TRCACVR&lt;n&gt;. This requires that the trace analyzer always programs all implemented bits of the TRCACVR&lt;n&gt;.</para>
<para>The result of writing a value other than all zeros or all ones to ADDRESS at bits[63:P] is an <arm-defined-word>UNKNOWN</arm-defined-word> value, where P is defined as:</para>
<list type="unordered">
<listitem><content>56, when <xref browsertext="FEAT_LVA3" filename="A_armv8_architecture_extensions.fm" linkend="FEAT_LVA3"/> is implemented.</content>
</listitem><listitem><content>52, when <xref browsertext="FEAT_LVA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVA"/> is implemented.</content>
</listitem><listitem><content>48, otherwise.</content>
</listitem></list>
<para>The result of writing a value of all zeros or all ones to ADDRESS at bits[63:P] is the written value, and a read of the register returns the written value.</para></field_description>
    <field_resets>
      <field_reset reset_type="Trace unit">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="64">
  <fieldat id="fieldset_0-63_0" msb="63" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="15"/>
        </reg_variables>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>Must be programmed if any of the following are true:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content><register_link state="ext" id="ext-trcbbctlr.xml">TRCBBCTLR</register_link>.RANGE[n/2] == 1.</content>
</listitem><listitem><content><register_link id="ext-trcrsctlrn.xml" state="ext">TRCRSCTLR&lt;a&gt;</register_link>.GROUP == <binarynumber>0b0100</binarynumber> and <register_link id="ext-trcrsctlrn.xml" state="ext">TRCRSCTLR&lt;a&gt;</register_link>.SAC[n] == 1.</content>
</listitem><listitem><content><register_link id="ext-trcrsctlrn.xml" state="ext">TRCRSCTLR&lt;a&gt;</register_link>.GROUP == <binarynumber>0b0101</binarynumber> and <register_link id="ext-trcrsctlrn.xml" state="ext">TRCRSCTLR&lt;a&gt;</register_link>.ARC[n/2] == 1.</content>
</listitem><listitem><content><register_link state="ext" id="ext-trcviiectlr.xml">TRCVIIECTLR</register_link>.EXCLUDE[n/2] == 1.</content>
</listitem><listitem><content><register_link state="ext" id="ext-trcviiectlr.xml">TRCVIIECTLR</register_link>.INCLUDE[n/2] == 1.</content>
</listitem><listitem><content><register_link state="ext" id="ext-trcvissctlr.xml">TRCVISSCTLR</register_link>.START[n] == 1.</content>
</listitem><listitem><content><register_link state="ext" id="ext-trcvissctlr.xml">TRCVISSCTLR</register_link>.STOP[n] == 1.</content>
</listitem><listitem><content><register_link id="ext-trcssccrn.xml" state="ext">TRCSSCCR&lt;a&gt;</register_link>.ARC[n/2] == 1.</content>
</listitem><listitem><content><register_link id="ext-trcssccrn.xml" state="ext">TRCSSCCR&lt;a&gt;</register_link>.SAC[n] == 1.</content>
</listitem><listitem><content><register_link state="ext" id="ext-trcqctlr.xml">TRCQCTLR</register_link>.RANGE[n/2] == 1.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>Writes are <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> if the trace unit is not in the Idle state.</para>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>