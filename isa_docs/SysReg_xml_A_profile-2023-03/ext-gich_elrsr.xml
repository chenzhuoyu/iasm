<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>GICH_ELRSR</reg_short_name>
        
        <reg_long_name>Empty List Register Status Register</reg_long_name>



      
        <reg_condition otherwise="RES0">when FEAT_GICv3_LEGACY is implemented and EL2 is implemented</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>GIC Virtual interface control</reg_component>
    <reg_offset><hexnumber>0x0030</hexnumber></reg_offset>
    <reg_instance>GICH_ELRSR</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When GICD_CTLR.DS == 0</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When an access is Secure</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When an access is Non-secure</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Indicates which List registers contain valid interrupts.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
            <reg_group>GIC virtualised guest interface control registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>This register is available when the GIC implementation supports interrupt virtualization.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>GICH_ELRSR is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>31:16</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-15_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>Status&lt;n&gt;</field_name>
    <field_msb>15</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>15:0</rel_range>
    <field_description order="before">
      <para>Status bit for List register &lt;n&gt;:</para>
    </field_description>
    <field_description order="after"><para>For any <register_link state="ext" id="ext-gich_lrn.xml">GICH_LR&lt;n&gt;</register_link> register, the corresponding status bit is set to 1 if <register_link state="ext" id="ext-gich_lrn.xml">GICH_LR&lt;n&gt;</register_link>.State is <binarynumber>0b00</binarynumber> and either:</para>
<list type="unordered">
<listitem><content><register_link state="ext" id="ext-gich_lrn.xml">GICH_LR&lt;n&gt;</register_link>.HW == 1.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gich_lrn.xml">GICH_LR&lt;n&gt;</register_link>.EOI == 0.</content>
</listitem></list></field_description>
    <field_array_indexes index_variable="n" element_size="1" range_specifier="n">
      <field_array_index>
        <field_array_start>15</field_array_start>
        <field_array_end>0</field_array_end>
      </field_array_index>
    </field_array_indexes>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gich_lrn.xml">GICH_LR&lt;n&gt;</register_link>, if implemented, contains a valid interrupt. Using this List register can result in overwriting a valid interrupt.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gich_lrn.xml">GICH_LR&lt;n&gt;</register_link> does not contain a valid interrupt. The List register is empty and can be used without overwriting a valid interrupt or losing an EOI maintenance interrupt.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>1</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_16" msb="31" lsb="16"/>
  <fieldat id="fieldset_0-15_0" label="Status15" msb="15" lsb="15"/>
  <fieldat id="fieldset_0-15_0" label="Status14" msb="14" lsb="14"/>
  <fieldat id="fieldset_0-15_0" label="Status13" msb="13" lsb="13"/>
  <fieldat id="fieldset_0-15_0" label="Status12" msb="12" lsb="12"/>
  <fieldat id="fieldset_0-15_0" label="Status11" msb="11" lsb="11"/>
  <fieldat id="fieldset_0-15_0" label="Status10" msb="10" lsb="10"/>
  <fieldat id="fieldset_0-15_0" label="Status9" msb="9" lsb="9"/>
  <fieldat id="fieldset_0-15_0" label="Status8" msb="8" lsb="8"/>
  <fieldat id="fieldset_0-15_0" label="Status7" msb="7" lsb="7"/>
  <fieldat id="fieldset_0-15_0" label="Status6" msb="6" lsb="6"/>
  <fieldat id="fieldset_0-15_0" label="Status5" msb="5" lsb="5"/>
  <fieldat id="fieldset_0-15_0" label="Status4" msb="4" lsb="4"/>
  <fieldat id="fieldset_0-15_0" label="Status3" msb="3" lsb="3"/>
  <fieldat id="fieldset_0-15_0" label="Status2" msb="2" lsb="2"/>
  <fieldat id="fieldset_0-15_0" label="Status1" msb="1" lsb="1"/>
  <fieldat id="fieldset_0-15_0" label="Status0" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>This register is used only when System register access is not enabled. When System register access is enabled:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>For AArch32 implementations, <register_link state="AArch32" id="AArch32-ich_elrsr.xml">ICH_ELRSR</register_link> provides equivalent functionality.</content>
</listitem><listitem><content>For AArch64 implementations, <register_link state="AArch64" id="AArch64-ich_elrsr_el2.xml">ICH_ELRSR_EL2</register_link> provides equivalent functionality.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>Bits corresponding to unimplemented List registers are <arm-defined-word>RES0</arm-defined-word>.</para>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:06; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>