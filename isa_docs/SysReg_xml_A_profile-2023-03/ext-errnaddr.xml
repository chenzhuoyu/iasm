<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>ERR&lt;n&gt;ADDR</reg_short_name>
        
        <reg_long_name>Error Record &lt;n&gt; Address Register</reg_long_name>



      
        <reg_condition otherwise="RES0">when error record n is implemented and error record n includes an address associated with an error</reg_condition>
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>65534</reg_array_end>
         </reg_array>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>RAS</reg_component>
    <reg_offset><hexnumber>0x018</hexnumber> + (64 * n)</reg_offset>
    <reg_instance>ERR&lt;n&gt;ADDR</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When the node that owns error record n implements the Common Fault Injection Model Extension, ERRPFGF[FirstRecordOfNode(n)].AV == 0 and ERR&lt;n&gt;STATUS.AV == 1</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When the node that owns error record n does not implement the Common Fault Injection Model Extension and ERR&lt;n&gt;STATUS.AV == 1</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>If an address is associated with a detected error, then it is written to ERR&lt;n&gt;ADDR when the error is recorded. It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> how the recorded address maps to the software-visible physical address. Software might have to reconstruct the actual physical addresses using the identity of the node and knowledge of the system.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>RAS registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para><register_link id="ext-errnfr.xml" state="ext">ERRFR[FirstRecordOfNode(n)]</register_link> describes the features implemented by the node that owns error record &lt;n&gt;. FirstRecordOfNode(n) is the index of the first error record owned by the same node as error record &lt;n&gt;. If the node owns a single record then FirstRecordOfNode(n) = n.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>ERR&lt;n&gt;ADDR is a 64-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="64">
  <fields_instance>ERR&lt;n&gt;ADDR</fields_instance>
  <text_before_fields/>
  <field id="fieldset_0-63_63-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>NS</field_name>
    <field_msb>63</field_msb>
    <field_lsb>63</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Non-secure attribute. With ERR&lt;n&gt;ADDR.NSE, indicates the physical address space of the recorded location.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>When ERR&lt;n&gt;ADDR.NSE == 0: ERR&lt;n&gt;ADDR.PADDR is a Secure address.</para>
<para>When ERR&lt;n&gt;ADDR.NSE == 1: ERR&lt;n&gt;ADDR.PADDR is a Root address.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>When ERR&lt;n&gt;ADDR.NSE == 0: ERR&lt;n&gt;ADDR.PADDR is a Non-secure address.</para>
<para>When ERR&lt;n&gt;ADDR.NSE == 1: ERR&lt;n&gt;ADDR.PADDR is a Realm address.</para></field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_0-63_63-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>NS</field_name>
    <field_msb>63</field_msb>
    <field_lsb>63</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Non-secure attribute.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.PADDR is a Secure address.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.PADDR is a Non-secure address.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-62_62-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>SI</field_name>
    <field_msb>62</field_msb>
    <field_lsb>62</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Secure Incorrect. Indicates whether ERR&lt;n&gt;ADDR.{NS, NSE} are valid.</para>
    </field_description>
    <field_description order="after">
      <para>It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether this field is read-only or read/write.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.{NS, NSE} are correct. That is, they match the software's view of the physical address space for the recorded location.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.{NS, NSE} might not be correct, and might not match the software's view of the physical address space for the recorded location.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_0-62_62-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>SI</field_name>
    <field_msb>62</field_msb>
    <field_lsb>62</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Secure Incorrect. Indicates whether ERR&lt;n&gt;ADDR.NS is valid.</para>
    </field_description>
    <field_description order="after">
      <para>It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether this field is read-only or read/write.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.NS is correct. That is, it matches the software's view of the Non-secure attribute for the recorded location.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.NS might not be correct, and might not match the software's view of the Non-secure attribute for the recorded location.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-61_61" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>AI</field_name>
    <field_msb>61</field_msb>
    <field_lsb>61</field_lsb>
    <rel_range>61</rel_range>
    <field_description order="before">
      <para>Address Incorrect. Indicates whether ERR&lt;n&gt;ADDR.PADDR is a valid physical address that is known to match the software's view of the physical address for the recorded location.</para>
    </field_description>
    <field_description order="after">
      <para>It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether this field is read-only or read/write.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.PADDR is a valid physical address. That is, it matches the software's view of the physical address for the recorded location.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.PADDR might not be a valid physical address, and might not match the software's view of the physical address for the recorded location.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-60_60" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>VA</field_name>
    <field_msb>60</field_msb>
    <field_lsb>60</field_lsb>
    <rel_range>60</rel_range>
    <field_description order="before">
      <para>Virtual Address. Indicates whether ERR&lt;n&gt;ADDR.PADDR field is a virtual address.</para>
    </field_description>
    <field_description order="after"><para>No context information is provided for the virtual address. When ERR&lt;n&gt;ADDR.VA is recorded as 1, ERR&lt;n&gt;ADDR.{NS, SI, AI} are recorded as {0, 1, 1} and, if <xref browsertext="FEAT_RME" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_RME"/> is implemented, ERR&lt;n&gt;ADDR.NSE is recorded as 0.</para>
<para>Support for this field is optional. If this field is not implemented and ERR&lt;n&gt;ADDR.PADDR field is a virtual address, then ERR&lt;n&gt;ADDR.{NS, SI, AI} read as {0, 1, 1} and, if <xref browsertext="FEAT_RME" filename="A_armv9_architecture_extensions.fm" linkend="FEAT_RME"/> is implemented, ERR&lt;n&gt;ADDR.NSE reads as 0.</para>
<para>It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether this field is read-only or read/write.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.PADDR is not a virtual address.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;ADDR.PADDR is a virtual address.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-59_59-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>NSE</field_name>
    <field_msb>59</field_msb>
    <field_lsb>59</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Physical Address Space. Together with ERR&lt;n&gt;ADDR.NS, indicates the address space for ERR&lt;n&gt;ADDR.PADDR.</para>
    </field_description>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_RME is implemented</fields_condition>
  </field>
  <field id="fieldset_0-59_59-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>59</field_msb>
    <field_lsb>59</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-58_56" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>58</field_msb>
    <field_lsb>56</field_lsb>
    <rel_range>58:56</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-55_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>PADDR</field_name>
    <field_msb>55</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>55:0</rel_range>
    <field_description order="before">
      <para>Physical Address. Address of the recorded location. If the physical address size implemented by this component is smaller than the size of this field, then high-order bits are unimplemented and either <arm-defined-word>RES0</arm-defined-word> or have a fixed read-only <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> value. Low-order address bits might also be unimplemented and <arm-defined-word>RES0</arm-defined-word>, for example, if the physical address is always aligned to the size of a protection granule.</para>
    </field_description>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="64">
  <fieldat id="fieldset_0-63_63-1" msb="63" lsb="63"/>
  <fieldat id="fieldset_0-62_62-1" msb="62" lsb="62"/>
  <fieldat id="fieldset_0-61_61" msb="61" lsb="61"/>
  <fieldat id="fieldset_0-60_60" msb="60" lsb="60"/>
  <fieldat id="fieldset_0-59_59-1" msb="59" lsb="59"/>
  <fieldat id="fieldset_0-58_56" msb="58" lsb="56"/>
  <fieldat id="fieldset_0-55_0" msb="55" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="65534"/>
        </reg_variables>

      <access_mechanisms>
          







      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>