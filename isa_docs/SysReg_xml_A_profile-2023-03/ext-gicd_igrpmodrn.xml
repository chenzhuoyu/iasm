<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>GICD_IGRPMODR&lt;n&gt;</reg_short_name>
        
        <reg_long_name>Interrupt Group Modifier Registers</reg_long_name>



      
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>31</reg_array_end>
         </reg_array>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>GIC Distributor</reg_component>
    <reg_frame>Dist_base</reg_frame>
    <reg_offset><hexnumber>0x0D00</hexnumber> + (4 * n)</reg_offset>
    <reg_instance>GICD_IGRPMODR&lt;n&gt;</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS==0, this register together with the <register_link state="ext" id="ext-gicd_igrouprn.xml">GICD_IGROUPR&lt;n&gt;</register_link> registers, controls whether the corresponding interrupt is in:</para>

      </purpose_text>
      <purpose_text>
        <list type="unordered">
<listitem><content>Secure Group 0.</content>
</listitem><listitem><content>Non-secure Group 1.</content>
</listitem><listitem><content>Secure Group 1.</content>
</listitem></list>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
            <reg_group>GIC Distributor registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS==0, these registers are Secure.</para>

      </configuration_text>
      <configuration_text>
        <para>The number of implemented <register_link state="ext" id="ext-gicd_igrouprn.xml">GICD_IGROUPR&lt;n&gt;</register_link> registers is (<register_link state="ext" id="ext-gicd_typer.xml">GICD_TYPER</register_link>.ITLinesNumber+1). Registers are numbered from 0.</para>

      </configuration_text>
      <configuration_text>
        <para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.ARE_S==0 or <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS==1, the GICD_IGRPMODR&lt;n&gt; registers are <arm-defined-word>RES0</arm-defined-word>. An implementation can make these registers RAZ/WI in this case.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>GICD_IGRPMODR&lt;n&gt; is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>Group_modifier_bit&lt;x&gt;</field_name>
    <field_msb>31</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>31:0</rel_range>
    <field_description order="before"><para>Group modifier bit. When affinity routing is enabled for the Security state of an interrupt, the bit that corresponds to the interrupt is concatenated with the equivalent bit in <register_link state="ext" id="ext-gicd_igrouprn.xml">GICD_IGROUPR&lt;n&gt;</register_link> to form a 2-bit field that defines an interrupt group:</para>
<table><tgroup cols="4"><thead><row><entry>Group modifier bit</entry><entry>Group status bit</entry><entry>Definition</entry><entry>Short name</entry></row></thead><tbody><row><entry><binarynumber>0b0</binarynumber></entry><entry><binarynumber>0b0</binarynumber></entry><entry>Secure Group 0</entry><entry>G0S</entry></row><row><entry><binarynumber>0b0</binarynumber></entry><entry><binarynumber>0b1</binarynumber></entry><entry>Non-secure Group 1</entry><entry>G1NS</entry></row><row><entry><binarynumber>0b1</binarynumber></entry><entry><binarynumber>0b0</binarynumber></entry><entry>Secure Group 1</entry><entry>G1S</entry></row><row><entry><binarynumber>0b1</binarynumber></entry><entry><binarynumber>0b1</binarynumber></entry><entry>Reserved, treated as Non-secure Group 1</entry><entry>-</entry></row></tbody></tgroup></table></field_description>
    <field_array_indexes index_variable="x" element_size="1" range_specifier="x">
      <field_array_index>
        <field_array_start>31</field_array_start>
        <field_array_end>0</field_array_end>
      </field_array_index>
    </field_array_indexes>
    <field_resets>
      <field_reset reset_type="GIC">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields><para>For INTID m, when DIV and MOD are the integer division and modulo operations:</para>
<list type="unordered">
<listitem><content>The corresponding GICD_IGRPMODR&lt;n&gt; number, n, is given by n = m DIV 32.</content>
</listitem><listitem><content>The offset of the required GICD_IGRPMODR is (<hexnumber>0x080</hexnumber> + (4*n)).</content>
</listitem><listitem><content>The bit number of the required group modifier bit in this register is m MOD 32.</content>
</listitem></list>
<para>See <register_link state="ext" id="ext-gicd_igrouprn.xml">GICD_IGROUPR&lt;n&gt;</register_link> for information about the GICD_IGRPMODR0 reset value.</para></text_after_fields>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit31" msb="31" lsb="31"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit30" msb="30" lsb="30"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit29" msb="29" lsb="29"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit28" msb="28" lsb="28"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit27" msb="27" lsb="27"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit26" msb="26" lsb="26"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit25" msb="25" lsb="25"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit24" msb="24" lsb="24"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit23" msb="23" lsb="23"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit22" msb="22" lsb="22"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit21" msb="21" lsb="21"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit20" msb="20" lsb="20"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit19" msb="19" lsb="19"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit18" msb="18" lsb="18"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit17" msb="17" lsb="17"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit16" msb="16" lsb="16"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit15" msb="15" lsb="15"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit14" msb="14" lsb="14"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit13" msb="13" lsb="13"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit12" msb="12" lsb="12"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit11" msb="11" lsb="11"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit10" msb="10" lsb="10"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit9" msb="9" lsb="9"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit8" msb="8" lsb="8"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit7" msb="7" lsb="7"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit6" msb="6" lsb="6"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit5" msb="5" lsb="5"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit4" msb="4" lsb="4"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit3" msb="3" lsb="3"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit2" msb="2" lsb="2"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit1" msb="1" lsb="1"/>
  <fieldat id="fieldset_0-31_0" label="Group_modifier_bit0" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="31"/>
        </reg_variables>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>When affinity routing is enabled for Secure state, GICD_IGRPMODR0 is <arm-defined-word>RES0</arm-defined-word> and equivalent functionality is proved by <register_link state="ext" id="ext-gicr_igrpmodr0.xml">GICR_IGRPMODR0</register_link>.</para>

      </access_permission_text>
      <access_permission_text>
        <para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS==0, the register is RAZ/WI to Non-secure accesses.</para>

      </access_permission_text>
      <access_permission_text>
        <para>Bits corresponding to unimplemented interrupts are RAZ/WI.</para>

      </access_permission_text>
      <access_permission_text>
        <note><para>Implementations must ensure that an interrupt that is pending at the time of the write uses either the old value or the new value and must ensure that the interrupt is neither lost nor handled more than one time. The effect of the change must be visible in finite time.</para></note>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:06; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>