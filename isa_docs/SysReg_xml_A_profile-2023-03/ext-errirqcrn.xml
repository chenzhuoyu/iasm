<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>ERRIRQCR&lt;n&gt;</reg_short_name>
        
        <reg_long_name>Generic Error Interrupt Configuration Register &lt;n&gt;</reg_long_name>



      
        <reg_condition otherwise="RES0">when the interrupt configuration registers are implemented</reg_condition>
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>15</reg_array_end>
         </reg_array>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>RAS</reg_component>
    <reg_offset><hexnumber>0xE80</hexnumber> + (8 * n)</reg_offset>
    <reg_instance>ERRIRQCR&lt;n&gt;</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>The ERRIRQCR&lt;n&gt; registers are reserved for <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> interrupt configuration registers.</para>

      </purpose_text>
      <purpose_text>
        <para>The architecture provides a recommended layout for the ERRIRQCR&lt;n&gt; registers. These registers are named:</para>

      </purpose_text>
      <purpose_text>
        <list type="unordered">
<listitem><content><register_link state="ext" id="ext-errfhicr0.xml">ERRFHICR0</register_link>, <register_link state="ext" id="ext-errfhicr1.xml">ERRFHICR1</register_link>, and <register_link state="ext" id="ext-errfhicr2.xml">ERRFHICR2</register_link> for the fault handling interrupt controls.</content>
</listitem><listitem><content><register_link state="ext" id="ext-errericr0.xml">ERRERICR0</register_link>, <register_link state="ext" id="ext-errericr1.xml">ERRERICR1</register_link>, and <register_link state="ext" id="ext-errericr2.xml">ERRERICR2</register_link> for the error recovery interrupt controls.</content>
</listitem><listitem><content><register_link state="ext" id="ext-errcricr0.xml">ERRCRICR0</register_link>, <register_link state="ext" id="ext-errcricr1.xml">ERRCRICR1</register_link>, and <register_link state="ext" id="ext-errcricr2.xml">ERRCRICR2</register_link> for the critical error interrupt controls.</content>
</listitem><listitem><content><register_link state="ext" id="ext-errirqsr.xml">ERRIRQSR</register_link> for the status register.</content>
</listitem></list>

      </purpose_text>
      <purpose_text>
        <para>This section describes the generic, <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>, format.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>RAS registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>ERRIRQCR&lt;n&gt; is implemented only as part of a memory-mapped group of error records.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>ERRIRQCR&lt;n&gt; is a 64-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="64">
  <fields_instance>ERRIRQCR&lt;n&gt;</fields_instance>
  <text_before_fields/>
  <field id="fieldset_0-63_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>IMPLEMENTATION DEFINED</field_name>
    <field_msb>63</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>63:0</rel_range>
    <field_description order="before">
      <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls. The content of these registers is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>.</para>
    </field_description>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="64">
  <fieldat id="fieldset_0-63_0" msb="63" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="15"/>
        </reg_variables>

      <access_mechanisms>
          







      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>