<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>ERR&lt;n&gt;FR</reg_short_name>
        
        <reg_long_name>Error Record &lt;n&gt; Feature Register</reg_long_name>



      
        <reg_condition otherwise="RES0">when error record n is implemented</reg_condition>
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>65534</reg_array_end>
         </reg_array>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>RAS</reg_component>
    <reg_offset><hexnumber>0x000</hexnumber> + (64 * n)</reg_offset>
    <reg_instance>ERR&lt;n&gt;FR</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Defines whether error record &lt;n&gt; is the first record owned by a node:</para>

      </purpose_text>
      <purpose_text>
        <list type="unordered">
<listitem><content>If error record &lt;n&gt; is the first error record owned by a node, then ERR&lt;n&gt;FR.ED is not <binarynumber>0b00</binarynumber>.</content>
</listitem><listitem><content>If error record &lt;n&gt; is not the first error record owned by a node, then ERR&lt;n&gt;FR.ED is <binarynumber>0b00</binarynumber>.</content>
</listitem></list>

      </purpose_text>
      <purpose_text>
        <para>If error record &lt;n&gt; is the first record owned by the node, defines which of the common architecturally-defined features are implemented by the node and, of the implemented features, which are software programmable.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>RAS registers</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>ERR&lt;n&gt;FR is a 64-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="64">
  <fields_condition>When error record n is not implemented or error record n is not the first error record in the node</fields_condition>
  <text_before_fields/>
  <field id="fieldset_0-63_56" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>63</field_msb>
    <field_lsb>56</field_lsb>
    <rel_range>63:56</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-55_55-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>NCE</field_name>
    <field_msb>55</field_msb>
    <field_lsb>55</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>No countable errors. Describes whether this error record supports recording countable errors. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>When ERRFR[FirstRecordOfNode(n)].CEC != <binarynumber>0b000</binarynumber>, at least one error record owned by the node records countable errors.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Records countable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Does not record countable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When RAS System Architecture v2 is implemented and ERRFR[FirstRecordOfNode(n)].CEC != 0b000</fields_condition>
  </field>
  <field id="fieldset_0-55_55-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>55</field_msb>
    <field_lsb>55</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-54_53-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CE</field_name>
    <field_msb>54</field_msb>
    <field_lsb>53</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Corrected Error recording. Describes the types of Corrected errors the error record can record, if any. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not record Corrected errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Records only transient or persistent Corrected errors. That is, Corrected errors recorded by setting <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CE to either <binarynumber>0b01</binarynumber> or <binarynumber>0b11</binarynumber>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Records only non-specific Corrected errors. That is, Corrected errors recorded by setting <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CE to <binarynumber>0b10</binarynumber>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>Records all types of Corrected error.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_0-54_53-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>54</field_msb>
    <field_lsb>53</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-52_52-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>DE</field_name>
    <field_msb>52</field_msb>
    <field_lsb>52</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Deferred Error recording. Describes whether the error record supports recording Deferred errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Deferred errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Deferred errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_0-52_52-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>52</field_msb>
    <field_lsb>52</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-51_51-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UEO</field_name>
    <field_msb>51</field_msb>
    <field_lsb>51</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Latent or Restartable Error recording. Describes whether the error record supports recording Latent or Restartable errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Latent or Restartable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Latent or Restartable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_0-51_51-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>51</field_msb>
    <field_lsb>51</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-50_50-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UER</field_name>
    <field_msb>50</field_msb>
    <field_lsb>50</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Signaled or Recoverable Error recording. Describes whether the error record supports recording Signaled or Recoverable errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Signaled or Recoverable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Signaled or Recoverable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_0-50_50-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>50</field_msb>
    <field_lsb>50</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-49_49-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UEU</field_name>
    <field_msb>49</field_msb>
    <field_lsb>49</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Unrecoverable Error recording. Describes whether the error record supports recording Unrecoverable errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Unrecoverable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Unrecoverable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_0-49_49-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>49</field_msb>
    <field_lsb>49</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-48_48-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UC</field_name>
    <field_msb>48</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Uncontainable Error recording. Describes whether the error record supports recording Uncontainable errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Uncontainable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Uncontainable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_0-48_48-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>48</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-47_32" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>47</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>47:32</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-31_31-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>FRX</field_name>
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Feature Register extension. Defines whether ERR&lt;n&gt;FR[54:48] describe the error types supported by this error record. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>If ERR&lt;n&gt;FR.FRX is 0, and error record &lt;n&gt; is implemented, then the error types supported by this error record are as described by the first error record of this node.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;FR[54:48] are <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;FR[54:48] are defined by the architecture.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When RAS System Architecture v2 is implemented, error record n is implemented and ERR&lt;n&gt;FR.ERT == 0b00</fields_condition>
  </field>
  <field id="fieldset_0-31_31-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-30_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>30</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>30:4</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-3_2-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>ERT</field_name>
    <field_msb>3</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Error Record Type. Defines the type of error record. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Error record &lt;n&gt; not implemented or is a normal record that is not the first error record of the node.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Error record &lt;n&gt; is a continuation record of the previous error record, &lt;n-1&gt;.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When RAS System Architecture v2 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-3_2-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>3</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-1_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ED</field_name>
    <field_msb>1</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Error reporting and logging. Indicates error record &lt;n&gt; is not the first error record owned the node.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Error record &lt;n&gt; is not implemented or is not the first error record owned by the node.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <text_after_fields/>
</fields>



<fields id="fieldset_1" length="64">
  <fields_condition>When error record n is the first error record in the node</fields_condition>
  <text_before_fields/>
  <field id="fieldset_1-63_56-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>IMPLEMENTATION DEFINED</field_name>
    <field_msb>63</field_msb>
    <field_lsb>56</field_lsb>
    <rel_range>7:0</rel_range>
    <field_description order="before">
      <para>Reserved for identifying <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls.</para>
    </field_description>
    <fields_condition>When RAS System Architecture v2 is not implemented and ERR&lt;n&gt;FR.FRX == 0</fields_condition>
  </field>
  <field id="fieldset_1-63_56-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>63</field_msb>
    <field_lsb>56</field_lsb>
    <rel_range>7:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-55_55-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="True" reserved_type="RES0">
    <field_name>NCE</field_name>
    <field_msb>55</field_msb>
    <field_lsb>55</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>No countable errors. Describes whether this error record supports recording countable errors. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>When ERR&lt;n&gt;FR.CEC != <binarynumber>0b000</binarynumber>, at least one error record owned by the node records countable errors.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Records countable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Does not record countable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When RAS System Architecture v2 is implemented and ERR&lt;n&gt;FR.CEC != 0b000</fields_condition>
  </field>
  <field id="fieldset_1-55_55-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="True" reserved_type="RES0">
    <field_name>IMPLEMENTATION DEFINED</field_name>
    <field_msb>55</field_msb>
    <field_lsb>55</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved for identifying <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls.</para>
    </field_description>
    <fields_condition>When RAS System Architecture v2 is not implemented and ERR&lt;n&gt;FR.FRX == 0</fields_condition>
  </field>
  <field id="fieldset_1-55_55-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>55</field_msb>
    <field_lsb>55</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-54_53-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CE</field_name>
    <field_msb>54</field_msb>
    <field_lsb>53</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Corrected Error recording. Describes the types of Corrected errors the node can record, if any. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not record Corrected errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Records only transient or persistent Corrected errors. That is, Corrected errors recorded by setting <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CE to either <binarynumber>0b01</binarynumber> or <binarynumber>0b11</binarynumber>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Records only non-specific Corrected errors. That is, Corrected errors recorded by setting <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CE to <binarynumber>0b10</binarynumber>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>Records all types of Corrected error.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_1-54_53-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CE</field_name>
    <field_msb>54</field_msb>
    <field_lsb>53</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Reserved for identifying <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls.</para>
    </field_description>
    <fields_condition>When RAS System Architecture v2 is not implemented and ERR&lt;n&gt;FR.FRX == 0</fields_condition>
  </field>
  <field id="fieldset_1-54_53-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>54</field_msb>
    <field_lsb>53</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-52_52-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>DE</field_name>
    <field_msb>52</field_msb>
    <field_lsb>52</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Deferred Error recording. Describes whether the node supports recording Deferred errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Deferred errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Deferred errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_1-52_52-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>DE</field_name>
    <field_msb>52</field_msb>
    <field_lsb>52</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved for identifying <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls.</para>
    </field_description>
    <fields_condition>When RAS System Architecture v2 is not implemented and ERR&lt;n&gt;FR.FRX == 0</fields_condition>
  </field>
  <field id="fieldset_1-52_52-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>52</field_msb>
    <field_lsb>52</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-51_51-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UEO</field_name>
    <field_msb>51</field_msb>
    <field_lsb>51</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Latent or Restartable Error recording. Describes whether the node supports recording Latent or Restartable errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Latent or Restartable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Latent or Restartable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_1-51_51-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UEO</field_name>
    <field_msb>51</field_msb>
    <field_lsb>51</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved for identifying <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls.</para>
    </field_description>
    <fields_condition>When RAS System Architecture v2 is not implemented and ERR&lt;n&gt;FR.FRX == 0</fields_condition>
  </field>
  <field id="fieldset_1-51_51-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>51</field_msb>
    <field_lsb>51</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-50_50-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UER</field_name>
    <field_msb>50</field_msb>
    <field_lsb>50</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Signaled or Recoverable Error recording. Describes whether the node supports recording Signaled or Recoverable errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Signaled or Recoverable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Signaled or Recoverable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_1-50_50-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UER</field_name>
    <field_msb>50</field_msb>
    <field_lsb>50</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved for identifying <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls.</para>
    </field_description>
    <fields_condition>When RAS System Architecture v2 is not implemented and ERR&lt;n&gt;FR.FRX == 0</fields_condition>
  </field>
  <field id="fieldset_1-50_50-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>50</field_msb>
    <field_lsb>50</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-49_49-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UEU</field_name>
    <field_msb>49</field_msb>
    <field_lsb>49</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Unrecoverable Error recording. Describes whether the node supports recording Unrecoverable errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Unrecoverable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Unrecoverable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_1-49_49-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UEU</field_name>
    <field_msb>49</field_msb>
    <field_lsb>49</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved for identifying <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls.</para>
    </field_description>
    <fields_condition>When RAS System Architecture v2 is not implemented and ERR&lt;n&gt;FR.FRX == 0</fields_condition>
  </field>
  <field id="fieldset_1-49_49-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>49</field_msb>
    <field_lsb>49</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-48_48-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UC</field_name>
    <field_msb>48</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Uncontainable Error recording. Describes whether the node supports recording Uncontainable errors. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Does not record Uncontainable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Records Uncontainable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FRX == 1</fields_condition>
  </field>
  <field id="fieldset_1-48_48-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>UC</field_name>
    <field_msb>48</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved for identifying <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls.</para>
    </field_description>
    <fields_condition>When RAS System Architecture v2 is not implemented and ERR&lt;n&gt;FR.FRX == 0</fields_condition>
  </field>
  <field id="fieldset_1-48_48-3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>48</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-47_32" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>IMPLEMENTATION DEFINED</field_name>
    <field_msb>47</field_msb>
    <field_lsb>32</field_lsb>
    <rel_range>47:32</rel_range>
    <field_description order="before">
      <para>Reserved for identifying <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> controls.</para>
    </field_description>
  </field>
  <field id="fieldset_1-31_31-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>FRX</field_name>
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Feature Register extension. Defines whether ERR&lt;n&gt;FR[63:48] are architecturally defined. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;FR[63:48] are <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>ERR&lt;n&gt;FR[63:48] are defined by the architecture.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When RAS System Architecture v1p1 is implemented</fields_condition>
  </field>
  <field id="fieldset_1-31_31-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-30_30-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CED</field_name>
    <field_msb>30</field_msb>
    <field_lsb>30</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Error counter disable. Indicates whether the node implements a control to disable any implemented Corrected error counters. Defined values are:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Error counter disable control is not implemented and the error counter(s) are always enabled. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.CED is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Enabling and disabling of error counter(s) is supported and controlled by <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.CED.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When RAS System Architecture v2 is implemented and ERR&lt;n&gt;FR.CEC != 0b000</fields_condition>
  </field>
  <field id="fieldset_1-30_30-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>30</field_msb>
    <field_lsb>30</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-29_29-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>SRV</field_name>
    <field_msb>29</field_msb>
    <field_lsb>29</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Status Reset Value. Indicates how node &lt;n&gt; and each error record &lt;m&gt; owned by node &lt;n&gt; is reset. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para>Node &lt;n&gt; and each error record &lt;m&gt; owned by node &lt;n&gt; are reset as follows:</para>
<list type="unordered">
<listitem><content><register_link id="ext-errnstatus.xml" state="ext">ERR&lt;m&gt;STATUS</register_link>.{AV, V, MV} are set to {0, 0, 0} on a Cold reset and preserved on Error Recovery reset.</content>
</listitem><listitem><content><register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.ED is set to an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> value on a Cold reset and preserved on Error Recovery reset.</content>
</listitem></list></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description><para>Node &lt;n&gt; and each error record &lt;m&gt; owned by node &lt;n&gt; are reset as follows:</para>
<list type="unordered">
<listitem><content><register_link id="ext-errnstatus.xml" state="ext">ERR&lt;m&gt;STATUS</register_link>.{AV, V, MV} are set to architecturally <arm-defined-word>UNKNOWN</arm-defined-word> values on a Cold reset and preserved on Error Recovery reset.</content>
</listitem><listitem><content><register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.ED is set to 0 on both Cold reset and Error Recovery reset.</content>
</listitem></list></field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When RAS System Architecture v2 is implemented</fields_condition>
  </field>
  <field id="fieldset_1-29_29-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>29</field_msb>
    <field_lsb>29</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-28_28-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>RV</field_name>
    <field_msb>28</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reset Valid. Indicates whether each error record &lt;m&gt; implemented by the node includes the Reset Valid flag, <register_link id="ext-errnstatus.xml" state="ext">ERR&lt;m&gt;STATUS</register_link>.RV. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link id="ext-errnstatus.xml" state="ext">ERR&lt;m&gt;STATUS</register_link>.RV is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link id="ext-errnstatus.xml" state="ext">ERR&lt;m&gt;STATUS</register_link>.RV is a R/W1C bit set to 1 on Error Recovery reset.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When RAS System Architecture v2 is implemented</fields_condition>
  </field>
  <field id="fieldset_1-28_28-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>28</field_msb>
    <field_lsb>28</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-27_26-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>DFI</field_name>
    <field_msb>27</field_msb>
    <field_lsb>26</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Fault handling interrupt for deferred errors control. Indicates whether the enabling and disabling of fault handling interrupts on deferred errors is supported by the node. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not support the enabling and disabling of fault handling interrupts on deferred errors. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.DFI is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Enabling and disabling of fault handling interrupts on deferred errors is supported and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.DFI.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>Enabling and disabling of fault handling interrupts on deferred errors is supported, and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.WDFI for writes and <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.RDFI for reads.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When RAS System Architecture v2 is implemented and ERR&lt;n&gt;FR.FI != 0b00</fields_condition>
  </field>
  <field id="fieldset_1-27_26-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>27</field_msb>
    <field_lsb>26</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-25_24" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>TS</field_name>
    <field_msb>25</field_msb>
    <field_lsb>24</field_lsb>
    <rel_range>25:24</rel_range>
    <field_description order="before">
      <para>Timestamp Extension. Indicates whether, for each error record &lt;m&gt; owned by this node, <register_link id="ext-errnmisc3.xml" state="ext">ERR&lt;m&gt;MISC3</register_link> is used as the timestamp register, and, if it is, the timebase used by the timestamp.</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not support a timestamp register.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description><para>Implements a timestamp register in <register_link state="ext" id="ext-errnmisc3.xml">ERR&lt;n&gt;MISC3</register_link> for each error record &lt;m&gt; owned by the node. The timestamp uses the same timebase as the system Generic Timer.</para>
<note><para>For an error record that has an affinity to a PE, this is the same timer that is visible through <register_link state="AArch64" id="AArch64-cntpct_el0.xml">CNTPCT_EL0</register_link> at the highest Exception level on that PE.</para></note></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Implements a timestamp register in <register_link id="ext-errnmisc3.xml" state="ext">ERR&lt;m&gt;MISC3</register_link> for each error record &lt;m&gt; owned by the node. The timestamp uses an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> timebase.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-23_22" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>CI</field_name>
    <field_msb>23</field_msb>
    <field_lsb>22</field_lsb>
    <rel_range>23:22</rel_range>
    <field_description order="before">
      <para>Critical error interrupt. Indicates whether the critical error interrupt and associated controls are implemented by the node.</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not support the critical error interrupt. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.CI is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Critical error interrupt is supported and always enabled. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.CI is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Critical error interrupt is supported and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.CI.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-21_20" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>INJ</field_name>
    <field_msb>21</field_msb>
    <field_lsb>20</field_lsb>
    <rel_range>21:20</rel_range>
    <field_description order="before">
      <para>Fault Injection Extension. Indicates whether the Common Fault Injection Model Extension is implemented by the node.</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not support the Common Fault Injection Model Extension.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Supports the Common Fault Injection Model Extension. See <register_link state="ext" id="ext-errnpfgf.xml">ERR&lt;n&gt;PFGF</register_link> for more information.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-19_18-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CEO</field_name>
    <field_msb>19</field_msb>
    <field_lsb>18</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Corrected Error overwrite. Indicates the behavior of the node when a second or subsequent Corrected error is recorded and a first Corrected error has previously been recorded by an error record &lt;m&gt; owned by the node.</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<para>The second or subsequent Corrected error is counted by the Corrected error counter, regardless of the value of this field. If counting the error causes unsigned overflow of the counter, then <register_link id="ext-errnstatus.xml" state="ext">ERR&lt;m&gt;STATUS</register_link>.OF is set to 1.</para>
<para>This means that, if no other error is subsequently recorded that overwrites the syndrome:</para>
<list type="unordered">
<listitem><content>If ERR&lt;n&gt;FR.CEO is <binarynumber>0b00</binarynumber>, the error record holds the syndrome for the first recorded Corrected error.</content>
</listitem><listitem><content>If ERR&lt;n&gt;FR.CEO is <binarynumber>0b01</binarynumber>, the error record holds the syndrome for the most recently recorded Corrected error before the counter overflows.</content>
</listitem></list></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Keeps the previous error syndrome.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>If <register_link id="ext-errnstatus.xml" state="ext">ERR&lt;m&gt;STATUS</register_link>.OF is 1 before the Corrected error is counted, then the error record keeps the previous syndrome. Otherwise the previous syndrome is overwritten.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.CEC != 0b000</fields_condition>
  </field>
  <field id="fieldset_1-19_18-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>19</field_msb>
    <field_lsb>18</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-17_16-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>DUI</field_name>
    <field_msb>17</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Error recovery interrupt for deferred errors control. Indicates whether the enabling and disabling of error recovery interrupts on deferred errors is supported by the node.</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not support the enabling and disabling of error recovery interrupts on deferred errors. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.DUI is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Enabling and disabling of error recovery interrupts on deferred errors is supported and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.DUI.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>Enabling and disabling of error recovery interrupts on deferred errors is supported, and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.WDUI for writes and <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.RDUI for reads.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.UI != 0b00</fields_condition>
  </field>
  <field id="fieldset_1-17_16-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>17</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-15_15-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>RP</field_name>
    <field_msb>15</field_msb>
    <field_lsb>15</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Repeat counter. Indicates whether the node implements a second Corrected error counter in <register_link id="ext-errnmisc0.xml" state="ext">ERR&lt;m&gt;MISC0</register_link> for each error record &lt;m&gt; owned by the node that can record countable errors.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Implements a single Corrected error counter in <register_link id="ext-errnmisc0.xml" state="ext">ERR&lt;m&gt;MISC0</register_link> for each error record &lt;m&gt; owned by the node that can record countable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Implements a first (repeat) counter and a second (other) counter in <register_link id="ext-errnmisc0.xml" state="ext">ERR&lt;m&gt;MISC0</register_link> for each error record &lt;m&gt; owned by the node that can record countable errors. The repeat counter is the same size as the primary error counter.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.CEC != 0b000</fields_condition>
  </field>
  <field id="fieldset_1-15_15-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>15</field_msb>
    <field_lsb>15</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-14_12" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>CEC</field_name>
    <field_msb>14</field_msb>
    <field_lsb>12</field_lsb>
    <rel_range>14:12</rel_range>
    <field_description order="before">
      <para>Corrected Error Counter. Indicates whether the node implements the standard format Corrected error counter mechanisms in <register_link id="ext-errnmisc0.xml" state="ext">ERR&lt;m&gt;MISC0</register_link> for each error record &lt;m&gt; owned by the node that can record countable errors.</para>
    </field_description>
    <field_description order="after"><para>All other values are reserved.</para>
<note><para>Implementations might include other error counter models, or might include the standard format model and not indicate this in ERR&lt;n&gt;FR.</para></note></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b000</field_value>
        <field_value_description>
          <para>Does not implement the standard format Corrected error counter model.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b010</field_value>
        <field_value_description>
          <para>Implements an 8-bit Corrected error counter in <register_link id="ext-errnmisc0.xml" state="ext">ERR&lt;m&gt;MISC0</register_link>[39:32] for each error record &lt;m&gt; owned by the node that can record countable errors.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b100</field_value>
        <field_value_description>
          <para>Implements a 16-bit Corrected error counter in <register_link id="ext-errnmisc0.xml" state="ext">ERR&lt;m&gt;MISC0</register_link>[47:32] for each error record &lt;m&gt; owned by the node that can record countable errors.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-11_10-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CFI</field_name>
    <field_msb>11</field_msb>
    <field_lsb>10</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Fault handling interrupt for corrected errors control. Indicates whether the enabling and disabling of fault handling interrupts on corrected errors is supported by the node.</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not support the enabling and disabling of fault handling interrupts on corrected errors. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.CFI is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Enabling and disabling of fault handling interrupts on corrected errors is supported and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.CFI.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>Enabling and disabling of fault handling interrupts on corrected errors is supported, and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.WCFI for writes and <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.RCFI for reads.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <fields_condition>When ERR&lt;n&gt;FR.FI != 0b00</fields_condition>
  </field>
  <field id="fieldset_1-11_10-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>11</field_msb>
    <field_lsb>10</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_1-9_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>UE</field_name>
    <field_msb>9</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>9:8</rel_range>
    <field_description order="before">
      <para>In-band error response (External Abort). Indicates whether the in-band error response and associated controls are implemented by the node.</para>
    </field_description>
    <field_description order="after">
      <para>It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether an uncorrected error that is deferred and recorded as Deferred error, but is not deferred to the Requester, will signal an in-band error response to the Requester.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not support the in-band error response. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.UE is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>In-band error response is supported and always enabled. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.UE is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>In-band error response is supported and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.UE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>In-band error response is supported, and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.WUE for writes and <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.RUE for reads.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-7_6" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>FI</field_name>
    <field_msb>7</field_msb>
    <field_lsb>6</field_lsb>
    <rel_range>7:6</rel_range>
    <field_description order="before">
      <para>Fault handling interrupt. Indicates whether the fault handling interrupt and associated controls are implemented by the node.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not support the fault handling interrupt. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.FI is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Fault handling interrupt is supported and always enabled. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.FI is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Fault handling interrupt is supported and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.FI.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>Fault handling interrupt is supported, and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.WFI for writes and <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.RFI for reads.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-5_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>UI</field_name>
    <field_msb>5</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>5:4</rel_range>
    <field_description order="before">
      <para>Error recovery interrupt for uncorrected errors. Indicates whether the error handling interrupt and associated controls are implemented by the node.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Does not support the error handling interrupt. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.UI is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Error handling interrupt is supported and always enabled. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.UI is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Error handling interrupt is supported and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.UI.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>Error handling interrupt is supported, and controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.WUI for writes and <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.RUI for reads.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_1-3_2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>IMPLEMENTATION DEFINED</field_name>
    <field_msb>3</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>3:2</rel_range>
    <field_description order="before">
      <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_1-1_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ED</field_name>
    <field_msb>1</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Error reporting and logging. Indicates error record &lt;n&gt; is a normal record and the first record owned the node, and whether the node implements the controls for enabling and disabling error reporting and logging. Defined values are:</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Error reporting and logging always enabled. <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.ED is <arm-defined-word>RES0</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Error reporting and logging is controllable using <register_link state="ext" id="ext-errnctlr.xml">ERR&lt;n&gt;CTLR</register_link>.ED.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <text_after_fields/>
</fields>



<fields id="fieldset_2" length="64">
  <fields_condition>When RAS System Architecture v2 is implemented and error record &lt;n&gt; is a proxy for a RAS agent</fields_condition>
  <text_before_fields/>
  <field id="fieldset_2-63_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>63</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>63:4</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_2-3_2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ERT</field_name>
    <field_msb>3</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>3:2</rel_range>
    <field_description order="before">
      <para>Error Record Type. Defines the type of error record.</para>
    </field_description>
    <field_description order="after">
      <para>All other values are reserved.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Error record is a proxy for a RAS agent.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <field id="fieldset_2-1_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="True" is_partial_field="False" is_conditional_field_name="False">
    <field_name>ED</field_name>
    <field_msb>1</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>1:0</rel_range>
    <field_description order="before">
      <para>Error reporting and logging. Indicates error record &lt;n&gt; is not a true error record.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>Error record &lt;n&gt; is not an error record.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_access>
      <field_access_state>
        <field_access_type>RO</field_access_type>
      </field_access_state>
    </field_access>
  </field>
  <text_after_fields/>
</fields>






    
<reg_fieldset length="64">
  <fields_condition>When error record n is not implemented or error record n is not the first error record in the node</fields_condition>
  <fieldat id="fieldset_0-63_56" msb="63" lsb="56"/>
  <fieldat id="fieldset_0-55_55-1" msb="55" lsb="55"/>
  <fieldat id="fieldset_0-54_53-1" msb="54" lsb="53"/>
  <fieldat id="fieldset_0-52_52-1" msb="52" lsb="52"/>
  <fieldat id="fieldset_0-51_51-1" msb="51" lsb="51"/>
  <fieldat id="fieldset_0-50_50-1" msb="50" lsb="50"/>
  <fieldat id="fieldset_0-49_49-1" msb="49" lsb="49"/>
  <fieldat id="fieldset_0-48_48-1" msb="48" lsb="48"/>
  <fieldat id="fieldset_0-47_32" msb="47" lsb="32"/>
  <fieldat id="fieldset_0-31_31-1" msb="31" lsb="31"/>
  <fieldat id="fieldset_0-30_4" msb="30" lsb="4"/>
  <fieldat id="fieldset_0-3_2-1" msb="3" lsb="2"/>
  <fieldat id="fieldset_0-1_0" msb="1" lsb="0"/>
</reg_fieldset>

    
<reg_fieldset length="64">
  <fields_condition>When error record n is the first error record in the node</fields_condition>
  <fieldat id="fieldset_1-63_56-1" msb="63" lsb="56"/>
  <fieldat id="fieldset_1-55_55-1" msb="55" lsb="55"/>
  <fieldat id="fieldset_1-54_53-1" msb="54" lsb="53"/>
  <fieldat id="fieldset_1-52_52-1" msb="52" lsb="52"/>
  <fieldat id="fieldset_1-51_51-1" msb="51" lsb="51"/>
  <fieldat id="fieldset_1-50_50-1" msb="50" lsb="50"/>
  <fieldat id="fieldset_1-49_49-1" msb="49" lsb="49"/>
  <fieldat id="fieldset_1-48_48-1" msb="48" lsb="48"/>
  <fieldat id="fieldset_1-47_32" msb="47" lsb="32"/>
  <fieldat id="fieldset_1-31_31-1" msb="31" lsb="31"/>
  <fieldat id="fieldset_1-30_30-1" msb="30" lsb="30"/>
  <fieldat id="fieldset_1-29_29-1" msb="29" lsb="29"/>
  <fieldat id="fieldset_1-28_28-1" msb="28" lsb="28"/>
  <fieldat id="fieldset_1-27_26-1" msb="27" lsb="26"/>
  <fieldat id="fieldset_1-25_24" msb="25" lsb="24"/>
  <fieldat id="fieldset_1-23_22" msb="23" lsb="22"/>
  <fieldat id="fieldset_1-21_20" msb="21" lsb="20"/>
  <fieldat id="fieldset_1-19_18-1" msb="19" lsb="18"/>
  <fieldat id="fieldset_1-17_16-1" msb="17" lsb="16"/>
  <fieldat id="fieldset_1-15_15-1" msb="15" lsb="15"/>
  <fieldat id="fieldset_1-14_12" msb="14" lsb="12"/>
  <fieldat id="fieldset_1-11_10-1" msb="11" lsb="10"/>
  <fieldat id="fieldset_1-9_8" msb="9" lsb="8"/>
  <fieldat id="fieldset_1-7_6" msb="7" lsb="6"/>
  <fieldat id="fieldset_1-5_4" msb="5" lsb="4"/>
  <fieldat id="fieldset_1-3_2" msb="3" lsb="2"/>
  <fieldat id="fieldset_1-1_0" msb="1" lsb="0"/>
</reg_fieldset>

    
<reg_fieldset length="64">
  <fields_condition>When RAS System Architecture v2 is implemented and error record &lt;n&gt; is a proxy for a RAS agent</fields_condition>
  <fieldat id="fieldset_2-63_4" msb="63" lsb="4"/>
  <fieldat id="fieldset_2-3_2" msb="3" lsb="2"/>
  <fieldat id="fieldset_2-1_0" msb="1" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="65534"/>
        </reg_variables>

      <access_mechanisms>
          







      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>