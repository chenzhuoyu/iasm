<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>GICV_AEOIR</reg_short_name>
        
        <reg_long_name>Virtual Machine Aliased End Of Interrupt Register</reg_long_name>



      
        <reg_condition otherwise="RES0">when FEAT_GICv3_LEGACY is implemented and EL2 is implemented</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>GIC Virtual CPU interface</reg_component>
    <reg_offset><hexnumber>0x0024</hexnumber></reg_offset>
    <reg_instance>GICV_AEOIR</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When GICD_CTLR.DS == 0</reg_access_level>
          <reg_access_type>WO</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When an access is Secure</reg_access_level>
          <reg_access_type>WO</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When an access is Non-secure</reg_access_level>
          <reg_access_type>WO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>A write to this register performs a priority drop for the specified Group 1 virtual interrupt and, if <register_link state="ext" id="ext-gicv_ctlr.xml">GICV_CTLR</register_link>.EOImode == 0, also deactivates the interrupt.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
            <reg_group>GIC virtual CPU interface registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>This register is available when the GIC implementation supports interrupt virtualization.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>GICV_AEOIR is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_25" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>25</field_lsb>
    <rel_range>31:25</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-24_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>INTID</field_name>
    <field_msb>24</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>24:0</rel_range>
    <field_description order="before"><para>The INTID of the signaled interrupt.</para>
<note><para>INTIDs 1020-1023 are reserved and convey additional information such as spurious interrupts.</para></note><para>When affinity routing is not enabled:</para>
<list type="unordered">
<listitem><content>Bits [23:13] are <arm-defined-word>RES0</arm-defined-word>.</content>
</listitem><listitem><content>For SGIs, bits [12:10] identify the CPU interface corresponding to the source PE. For all other interrupts these bits are <arm-defined-word>RES0</arm-defined-word>.</content>
</listitem></list></field_description>
  </field>
  <text_after_fields><para>A successful EOI request means that:</para>
<list type="unordered">
<listitem><content>The highest priority bit in <register_link state="ext" id="ext-gich_aprn.xml">GICH_APR&lt;n&gt;</register_link> is cleared, causing the running priority to drop.</content>
</listitem><listitem><content>If the appropriate <register_link state="ext" id="ext-gicv_ctlr.xml">GICV_CTLR</register_link>.EOImode bit == 0, the interrupt is deactivated in the corresponding List register. If the INTID corresponds to a hardware interrupt, the interrupt is also deactivated in the Distributor.</content>
</listitem></list>
<note><para>Only Group 1 interrupts can target the hypervisor, and therefore only Group 1 interrupts are deactivated in the Distributor.</para></note><para>A write to this register is <arm-defined-word>UNPREDICTABLE</arm-defined-word> if the INTID corresponds to a Group 0 interrupt. In addition, the following GICv2 <arm-defined-word>UNPREDICTABLE</arm-defined-word> cases require specific actions:</para>
<list type="unordered">
<listitem><content>If highest active priority is Group 0 and the identified interrupt is in the List Registers and it matches the highest active priority. When EL2 is using System registers and <register_link state="AArch64" id="AArch64-ich_vtr_el2.xml">ICH_VTR_EL2</register_link>.SEIS is 1, an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> SEI might be generated, otherwise GICv3 implementations must ignore such writes.</content>
</listitem><listitem><content>If the identified interrupt is in the List Registers, and the HW bit is 1, and the interrupt to be deactivated is an SGI (that is, the value of Physical_ID is between 0 and 15). GICv3 implementations must perform the deactivate operation. This means that a GICv3 implementation in legacy operation must ensure only a single SGI is active for a PE.</content>
</listitem><listitem><content>If the identified interrupt is in the List Registers, and the HW bit is 1, and the corresponding pINTID field value is between 1020 and 1023, indicating a special purpose INTID. GICv3 implementations must not perform a deactivate operation but must still change the state of the List register as appropriate. When EL2 is using System registers and <register_link state="AArch64" id="AArch64-ich_vtr_el2.xml">ICH_VTR_EL2</register_link>.SEIS is 1, an implementation might generate a system error.</content>
</listitem></list></text_after_fields>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_25" msb="31" lsb="25"/>
  <fieldat id="fieldset_0-24_0" msb="24" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>This register is used only when System register access is not enabled. When System register access is enabled:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>For AArch32 implementations, <register_link state="AArch32" id="AArch32-icc_eoir1.xml">ICC_EOIR1</register_link> provides equivalent functionality.</content>
</listitem><listitem><content>For AArch64 implementations, <register_link state="AArch64" id="AArch64-icc_eoir1_el1.xml">ICC_EOIR1_EL1</register_link> provides equivalent functionality.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>This register is used for Group 1 interrupts only. <register_link state="ext" id="ext-gicv_eoir.xml">GICV_EOIR</register_link> provides equivalent functionality for Group 0 interrupts.</para>

      </access_permission_text>
      <access_permission_text>
        <para>When affinity routing is enabled, it is a programming error to use memory-mapped registers to access the GIC.</para>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:06; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>