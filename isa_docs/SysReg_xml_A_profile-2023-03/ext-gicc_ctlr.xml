<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>GICC_CTLR</reg_short_name>
        
        <reg_long_name>CPU Interface Control Register</reg_long_name>



      
        <reg_condition otherwise="RES0">when FEAT_GICv3_LEGACY is implemented</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>GIC CPU interface</reg_component>
    <reg_offset><hexnumber>0x0000</hexnumber></reg_offset>
    <reg_instance>GICC_CTLR</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When GICD_CTLR.DS == 0</reg_access_level>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When an access is Secure</reg_access_level>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_level>When an access is Non-secure</reg_access_level>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Controls the CPU interface, including enabling of interrupt groups, interrupt signal bypass, binary point registers used, and separation of priority drop and interrupt deactivation.</para>

      </purpose_text>
      <purpose_text>
        <note><para>If the GIC implementation supports two Security states, independent EOI controls are provided for accesses from each Security state. Secure accesses handle both Group 0 and Group 1 interrupts, and Non-secure accesses handle Group 1 interrupts only.</para></note>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
            <reg_group>GIC physical CPU interface registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>In a GIC implementation that supports two Security states:</para>

      </configuration_text>
      <configuration_text>
        <list type="unordered">
<listitem><content>This register is Banked.</content>
</listitem><listitem><content>The register bit assignments are different in the Secure and Non-secure copies.</content>
</listitem></list>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>GICC_CTLR is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="32">
  <fields_condition>When GICD_CTLR.DS==0, Non-secure access</fields_condition>
  <fields_instance>GICD_CTLR.DS==0, Non-secure access</fields_instance>
  <text_before_fields/>
  <field id="fieldset_0-31_10" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>10</field_lsb>
    <rel_range>31:10</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-9_9" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EOImodeNS</field_name>
    <field_msb>9</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>9</rel_range>
    <field_description order="before">
      <para>Controls the behavior of Non-secure accesses to <register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link>, <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link>, and <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link>.</para>
    </field_description>
    <field_description order="after">
      <note>
        <para>An implementation is permitted to make this bit RAO/WI.</para>
      </note>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link> and <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link> provide both priority drop and interrupt deactivation functionality. Accesses to <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link> are <arm-defined-word>UNPREDICTABLE</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link> and <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link> provide priority drop functionality only. <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link> provides interrupt deactivation functionality.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-8_7" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>8</field_msb>
    <field_lsb>7</field_lsb>
    <rel_range>8:7</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-6_6" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>IRQBypDisGrp1</field_name>
    <field_msb>6</field_msb>
    <field_lsb>6</field_lsb>
    <rel_range>6</rel_range>
    <field_description order="before">
      <para>When the signaling of IRQs by the CPU interface is disabled, this field partly controls whether the bypass IRQ signal is signaled to the PE for Group 1:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DIB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-5_5" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>FIQBypDisGrp1</field_name>
    <field_msb>5</field_msb>
    <field_lsb>5</field_lsb>
    <rel_range>5</rel_range>
    <field_description order="before">
      <para>When the signaling of FIQs by the CPU interface is disabled, this field partly controls whether the bypass FIQ signal is signaled to the PE for Group 1:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DFB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-4_1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>4</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>4:1</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-0_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EnableGrp1</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>This Non-secure field enables the signaling of Group 1 interrupts by the CPU interface to a target PE:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Group 1 interrupt signaling is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Group 1 interrupt signaling is enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields/>
</fields>



<fields id="fieldset_1" length="32">
  <fields_condition>When GICD_CTLR.DS==0, Secure access</fields_condition>
  <fields_instance>GICD_CTLR.DS==0, Secure access</fields_instance>
  <text_before_fields/>
  <field id="fieldset_1-31_11" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>11</field_lsb>
    <rel_range>31:11</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_1-10_10" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EOImodeNS</field_name>
    <field_msb>10</field_msb>
    <field_lsb>10</field_lsb>
    <rel_range>10</rel_range>
    <field_description order="before">
      <para>Controls the behavior of Non-secure accesses to <register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link>, <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link>, and <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link>.</para>
    </field_description>
    <field_description order="after">
      <note>
        <para>An implementation is permitted to make this bit RAO/WI.</para>
      </note>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link> and <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link> provide both priority drop and interrupt deactivation functionality. Accesses to <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link> are <arm-defined-word>UNPREDICTABLE</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link> and <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link> provide priority drop functionality only. <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link> provides interrupt deactivation functionality.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-9_9" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EOImodeS</field_name>
    <field_msb>9</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>9</rel_range>
    <field_description order="before">
      <para>Controls the behavior of Secure accesses to <register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link>, <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link>, and <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link>.</para>
    </field_description>
    <field_description order="after">
      <note>
        <para>An implementation is permitted to make this bit RAO/WI.</para>
      </note>
      <para>This field shares state with <register_link state="ext" id="ext-gicc_ctlr.xml">GICC_CTLR</register_link>.EOImode.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link> and <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link> provide both priority drop and interrupt deactivation functionality. Accesses to <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link> are <arm-defined-word>UNPREDICTABLE</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link> and <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link> provide priority drop functionality only. <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link> provides interrupt deactivation functionality.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-8_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>IRQBypDisGrp1</field_name>
    <field_msb>8</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>8</rel_range>
    <field_description order="before">
      <para>When the signaling of IRQs by the CPU interface is disabled, this field partly controls whether the bypass IRQ signal is signaled to the PE for Group 1:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DIB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-7_7" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>FIQBypDisGrp1</field_name>
    <field_msb>7</field_msb>
    <field_lsb>7</field_lsb>
    <rel_range>7</rel_range>
    <field_description order="before">
      <para>When the signaling of FIQs by the CPU interface is disabled, this field partly controls whether the bypass FIQ signal is signaled to the PE for Group 1:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DFB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-6_6" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>IRQBypDisGrp0</field_name>
    <field_msb>6</field_msb>
    <field_lsb>6</field_lsb>
    <rel_range>6</rel_range>
    <field_description order="before">
      <para>When the signaling of IRQs by the CPU interface is disabled, this field partly controls whether the bypass IRQ signal is signaled to the PE for Group 0:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DIB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-5_5" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>FIQBypDisGrp0</field_name>
    <field_msb>5</field_msb>
    <field_lsb>5</field_lsb>
    <rel_range>5</rel_range>
    <field_description order="before">
      <para>When the signaling of FIQs by the CPU interface is disabled, this field partly controls whether the bypass FIQ signal is signaled to the PE for Group 0:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DIB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-4_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>CBPR</field_name>
    <field_msb>4</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>4</rel_range>
    <field_description order="before">
      <para>Controls whether <register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> provides common control of preemption to Group 0 and Group 1 interrupts:</para>
    </field_description>
    <field_description order="after"><para>This field is an alias of <register_link state="AArch64" id="AArch64-icc_ctlr_el3.xml">ICC_CTLR_EL3</register_link>.CBPR_EL1NS.</para>
<para>In a GIC that supports two Security states, when CBPR == 1:</para>
<list type="unordered">
<listitem><content>A Non-secure read of <register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> returns the value of Secure <register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link>.Binary_Point, incremented by 1, and saturated to <binarynumber>0b111</binarynumber>.</content>
</listitem><listitem><content>Non-secure writes of <register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> are ignored.</content>
</listitem></list></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para><register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> determines preemption for Group 0 interrupts only.</para>
<para><register_link state="ext" id="ext-gicc_abpr.xml">GICC_ABPR</register_link> determines preemption for Group 1 interrupts.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> determines preemption for both Group 0 and Group 1 interrupts.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-3_3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>FIQEn</field_name>
    <field_msb>3</field_msb>
    <field_lsb>3</field_lsb>
    <rel_range>3</rel_range>
    <field_description order="before">
      <para>Controls whether the CPU interface signals Group 0 interrupts to a target PE using the FIQ or IRQ signal:</para>
    </field_description>
    <field_description order="after"><para>Group 1 interrupts are signaled using the IRQ signal only.</para>
<para>If an implementation supports two Security states, this bit is permitted to be RAO/WI.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Group 0 interrupts are signaled using the IRQ signal.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Group 0 interrupts are signaled using the FIQ signal.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-2_2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>2</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>2</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_1-1_1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EnableGrp1</field_name>
    <field_msb>1</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>1</rel_range>
    <field_description order="before">
      <para>This Non-secure field enables the signaling of Group 1 interrupts by the CPU interface to a target PE:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Group 1 interrupt signaling is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Group 1 interrupt signaling is enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-0_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EnableGrp0</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Enables the signaling of Group 0 interrupts by the CPU interface to a target PE:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Group 0 interrupt signaling is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Group 0 interrupt signaling is enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields/>
</fields>



<fields id="fieldset_2" length="32">
  <fields_condition>When GICD_CTLR.DS == 1</fields_condition>
  <fields_instance>GICD_CTLR.DS==1</fields_instance>
  <text_before_fields/>
  <field id="fieldset_2-31_10" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>10</field_lsb>
    <rel_range>31:10</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_2-9_9" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EOImode</field_name>
    <field_msb>9</field_msb>
    <field_lsb>9</field_lsb>
    <rel_range>9</rel_range>
    <field_description order="before">
      <para>Controls the behavior of accesses to <register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link>, <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link>, and <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link>.</para>
    </field_description>
    <field_description order="after">
      <note>
        <para>An implementation is permitted to make this bit RAO/WI.</para>
      </note>
      <para>This field shares state with <register_link state="ext" id="ext-gicc_ctlr.xml">GICC_CTLR</register_link>.EOImodeS.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link> and <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link> provide both priority drop and interrupt deactivation functionality. Accesses to <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link> are <arm-defined-word>UNPREDICTABLE</arm-defined-word>.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_eoir.xml">GICC_EOIR</register_link> and <register_link state="ext" id="ext-gicc_aeoir.xml">GICC_AEOIR</register_link> provide priority drop functionality only. <register_link state="ext" id="ext-gicc_dir.xml">GICC_DIR</register_link> provides interrupt deactivation functionality.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_2-8_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>IRQBypDisGrp1</field_name>
    <field_msb>8</field_msb>
    <field_lsb>8</field_lsb>
    <rel_range>8</rel_range>
    <field_description order="before">
      <para>When the signaling of IRQs by the CPU interface is disabled, this field partly controls whether the bypass IRQ signal is signaled to the PE for Group 1:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DIB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_2-7_7" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>FIQBypDisGrp1</field_name>
    <field_msb>7</field_msb>
    <field_lsb>7</field_lsb>
    <rel_range>7</rel_range>
    <field_description order="before">
      <para>When the signaling of FIQs by the CPU interface is disabled, this field partly controls whether the bypass FIQ signal is signaled to the PE for Group 1:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DFB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_2-6_6" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>IRQBypDisGrp0</field_name>
    <field_msb>6</field_msb>
    <field_lsb>6</field_lsb>
    <rel_range>6</rel_range>
    <field_description order="before">
      <para>When the signaling of IRQs by the CPU interface is disabled, this field partly controls whether the bypass IRQ signal is signaled to the PE for Group 0:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DIB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass IRQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_2-5_5" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>FIQBypDisGrp0</field_name>
    <field_msb>5</field_msb>
    <field_lsb>5</field_lsb>
    <rel_range>5</rel_range>
    <field_description order="before">
      <para>When the signaling of FIQs by the CPU interface is disabled, this field partly controls whether the bypass FIQ signal is signaled to the PE for Group 0:</para>
    </field_description>
    <field_description order="after"><para>If System register access is enabled for EL3 and <register_link state="AArch64" id="AArch64-icc_sre_el3.xml">ICC_SRE_EL3</register_link>.DIB == 1, this field is RAO/WI.</para>
<para>If System register access is enabled for EL1, this field is ignored.</para>
<para>If an implementation does not support legacy interrupts, this bit is permitted to be RAO/WI.</para>
<para>For more information, see <xref browsertext="'Interrupt bypass support' in ARM® Generic Interrupt Controller Architecture Specification, GIC architecture version 3.0 and version 4.0 (ARM IHI 0069)" filename="AS_gic_partitioning.fm" linkend="BCGEEHAC"/>.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The bypass FIQ signal is not signaled to the PE.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_2-4_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>CBPR</field_name>
    <field_msb>4</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>4</rel_range>
    <field_description order="before">
      <para>Controls whether <register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> provides common control of preemption to Group 0 and Group 1 interrupts:</para>
    </field_description>
    <field_description order="after"><para>This field is an alias of <register_link state="AArch64" id="AArch64-icc_ctlr_el3.xml">ICC_CTLR_EL3</register_link>.CBPR_EL1NS.</para>
<para>In a GIC that supports two Security states, when CBPR == 1:</para>
<list type="unordered">
<listitem><content>A Non-secure read of <register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> returns the value of Secure <register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link>.Binary_Point, incremented by 1, and saturated to <binarynumber>0b111</binarynumber>.</content>
</listitem><listitem><content>Non-secure writes of <register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> are ignored.</content>
</listitem></list></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description><para><register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> determines preemption for Group 0 interrupts only.</para>
<para><register_link state="ext" id="ext-gicc_abpr.xml">GICC_ABPR</register_link> determines preemption for Group 1 interrupts.</para></field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-gicc_bpr.xml">GICC_BPR</register_link> determines preemption for both Group 0 and Group 1 interrupts.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_2-3_3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>FIQEn</field_name>
    <field_msb>3</field_msb>
    <field_lsb>3</field_lsb>
    <rel_range>3</rel_range>
    <field_description order="before">
      <para>Controls whether the CPU interface signals Group 0 interrupts to a target PE using the FIQ or IRQ signal:</para>
    </field_description>
    <field_description order="after"><para>Group 1 interrupts are signaled using the IRQ signal only.</para>
<para>If an implementation supports two Security states, this bit is permitted to be RAO/WI.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Group 0 interrupts are signaled using the IRQ signal.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Group 0 interrupts are signaled using the FIQ signal.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_2-2_2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>2</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>2</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_2-1_1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EnableGrp1</field_name>
    <field_msb>1</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>1</rel_range>
    <field_description order="before">
      <para>This Non-secure field enables the signaling of Group 1 interrupts by the CPU interface to a target PE:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Group 1 interrupt signaling is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Group 1 interrupt signaling is enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_2-0_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>EnableGrp0</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Enables the signaling of Group 0 interrupts by the CPU interface to a target PE:</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Group 0 interrupt signaling is disabled.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Group 0 interrupt signaling is enabled.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
  </field>
  <text_after_fields/>
</fields>






    
<reg_fieldset length="32">
  <fields_condition>When GICD_CTLR.DS==0, Non-secure access</fields_condition>
  <fieldat id="fieldset_0-31_10" msb="31" lsb="10"/>
  <fieldat id="fieldset_0-9_9" msb="9" lsb="9"/>
  <fieldat id="fieldset_0-8_7" msb="8" lsb="7"/>
  <fieldat id="fieldset_0-6_6" msb="6" lsb="6"/>
  <fieldat id="fieldset_0-5_5" msb="5" lsb="5"/>
  <fieldat id="fieldset_0-4_1" msb="4" lsb="1"/>
  <fieldat id="fieldset_0-0_0" msb="0" lsb="0"/>
</reg_fieldset>

    
<reg_fieldset length="32">
  <fields_condition>When GICD_CTLR.DS==0, Secure access</fields_condition>
  <fieldat id="fieldset_1-31_11" msb="31" lsb="11"/>
  <fieldat id="fieldset_1-10_10" msb="10" lsb="10"/>
  <fieldat id="fieldset_1-9_9" msb="9" lsb="9"/>
  <fieldat id="fieldset_1-8_8" msb="8" lsb="8"/>
  <fieldat id="fieldset_1-7_7" msb="7" lsb="7"/>
  <fieldat id="fieldset_1-6_6" msb="6" lsb="6"/>
  <fieldat id="fieldset_1-5_5" msb="5" lsb="5"/>
  <fieldat id="fieldset_1-4_4" msb="4" lsb="4"/>
  <fieldat id="fieldset_1-3_3" msb="3" lsb="3"/>
  <fieldat id="fieldset_1-2_2" msb="2" lsb="2"/>
  <fieldat id="fieldset_1-1_1" msb="1" lsb="1"/>
  <fieldat id="fieldset_1-0_0" msb="0" lsb="0"/>
</reg_fieldset>

    
<reg_fieldset length="32">
  <fields_condition>When GICD_CTLR.DS == 1</fields_condition>
  <fieldat id="fieldset_2-31_10" msb="31" lsb="10"/>
  <fieldat id="fieldset_2-9_9" msb="9" lsb="9"/>
  <fieldat id="fieldset_2-8_8" msb="8" lsb="8"/>
  <fieldat id="fieldset_2-7_7" msb="7" lsb="7"/>
  <fieldat id="fieldset_2-6_6" msb="6" lsb="6"/>
  <fieldat id="fieldset_2-5_5" msb="5" lsb="5"/>
  <fieldat id="fieldset_2-4_4" msb="4" lsb="4"/>
  <fieldat id="fieldset_2-3_3" msb="3" lsb="3"/>
  <fieldat id="fieldset_2-2_2" msb="2" lsb="2"/>
  <fieldat id="fieldset_2-1_1" msb="1" lsb="1"/>
  <fieldat id="fieldset_2-0_0" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>This register is used only when System register access is not enabled. When System register access is enabled:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>For AArch32 implementations, <register_link state="AArch32" id="AArch32-icc_ctlr.xml">ICC_CTLR</register_link> and <register_link state="AArch32" id="AArch32-icc_mctlr.xml">ICC_MCTLR</register_link> provide equivalent functionality.</content>
</listitem><listitem><content>For AArch64 implementations, <register_link state="AArch64" id="AArch64-icc_ctlr_el1.xml">ICC_CTLR_EL1</register_link> and <register_link state="AArch64" id="AArch64-icc_ctlr_el3.xml">ICC_CTLR_EL3</register_link> provide equivalent functionality.</content>
</listitem></list>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:06; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>