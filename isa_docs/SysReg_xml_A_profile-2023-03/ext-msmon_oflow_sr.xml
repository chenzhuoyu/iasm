<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>MSMON_OFLOW_SR</reg_short_name>
        
        <reg_long_name>MPAM Monitor Overflow Status Register</reg_long_name>

        <power_domain_text>The power domain of MSMON_OFLOW_SR is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word></power_domain_text>


      
        <reg_condition otherwise="RES0">when FEAT_MPAM is implemented, MPAMF_IDR.HAS_MSMON == 1 and MPAMF_MSMON_IDR.HAS_OFLOW_SR == 1</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_s</reg_frame>
    <reg_offset><hexnumber>0x08F0</hexnumber></reg_offset>
    <reg_instance>MSMON_OFLOW_SR_s</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_ns</reg_frame>
    <reg_offset><hexnumber>0x08F0</hexnumber></reg_offset>
    <reg_instance>MSMON_OFLOW_SR_ns</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rt</reg_frame>
    <reg_offset><hexnumber>0x08F0</hexnumber></reg_offset>
    <reg_instance>MSMON_OFLOW_SR_rt</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_rl</reg_frame>
    <reg_offset><hexnumber>0x08F0</hexnumber></reg_offset>
    <reg_instance>MSMON_OFLOW_SR_rl</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When FEAT_RME is implemented</reg_access_level>
          <reg_access_type>RO</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        




      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>MSMON_OFLOW_SR is a 32-bit read-only register that shows MPAM monitor overflow status for this MSC.</para>

      </purpose_text>
      <purpose_text>
        <para>MSMON_OFLOW_SR_s gives the status of overflows of Secure MPAM monitors.
MSMON_OFLOW_SR_ns gives the status of overflows of Non-secure MPAM monitors.
MSMON_OFLOW_SR_rt gives the status of overflows of Root MPAM monitors.
MSMON_OFLOW_SR_rl gives the status of overflows of Realm MPAM monitors.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Memory Partitioning and Monitoring registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>The power and reset domain of each MSC component is specific to that component.</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>MSMON_OFLOW_SR is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="32">
  <text_before_fields/>
  <field id="fieldset_0-31_31" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>CSU_OFLOW_PND</field_name>
    <field_msb>31</field_msb>
    <field_lsb>31</field_lsb>
    <rel_range>31</rel_range>
    <field_description order="before">
      <para>At least one cache storage usage monitor has OFLOW_STATUS of 1 in <register_link state="ext" id="ext-msmon_cfg_csu_ctl.xml">MSMON_CFG_CSU_CTL</register_link>.</para>
    </field_description>
    <field_description order="after">
      <para>This field clears when <register_link state="ext" id="ext-msmon_cfg_csu_ctl.xml">MSMON_CFG_CSU_CTL</register_link>.OFLOW_STATUS has been reset to 0 for all CSU monitor instances in this MSC.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>There are no cache storage usage monitor instances where <register_link state="ext" id="ext-msmon_cfg_csu_ctl.xml">MSMON_CFG_CSU_CTL</register_link>.OFLOW_STATUS is 1.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-msmon_cfg_csu_ctl.xml">MSMON_CFG_CSU_CTL</register_link> for at least one of the cache storage usage monitor instances has OFLOW_STATUS set to 1.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-30_30" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>MBWU_OFLOW_PND</field_name>
    <field_msb>30</field_msb>
    <field_lsb>30</field_lsb>
    <rel_range>30</rel_range>
    <field_description order="before">
      <para>At least one memory bandwidth usage monitor instance has OFLOW_STATUS or OFLOW_STATUS_L of 1 in <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.</para>
    </field_description>
    <field_description order="after">
      <para>This field clears when <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_STATUS and <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_STATUS_L have been reset to 0 for all MBWU monitor instances in this MSC.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>There are no memory bandwidth usage monitor instances where <register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link>.OFLOW_STATUS is 1.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para><register_link state="ext" id="ext-msmon_cfg_mbwu_ctl.xml">MSMON_CFG_MBWU_CTL</register_link> for at least one of the memory bandwidth usage monitor instances has either OFLOW_STATUS or OFLOW_STATUS_L set to 1.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <field id="fieldset_0-29_16" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>29</field_msb>
    <field_lsb>16</field_lsb>
    <rel_range>29:16</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-15_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>RIS_PND&lt;r&gt;</field_name>
    <field_msb>15</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>15:0</rel_range>
    <field_description order="before">
      <para>Overflow status by RIS.</para>
    </field_description>
    <field_description order="after"><para>Combined with the CSU_OFLOW_PND and MBWU_OFLOW_PND flags in this register, an interrupt service routine could poll only the monitor types indicated in monitors for the resource instances flagged in this field.</para>
<para>Bit r is set when any monitor instance of any type in resource instance r has OFLOW_STATUS or OFLOW_STATUS_L set to 1.</para></field_description>
    <field_array_indexes index_variable="r" element_size="1" range_specifier="r">
      <field_array_index>
        <field_array_start>15</field_array_start>
        <field_array_end>0</field_array_end>
      </field_array_index>
    </field_array_indexes>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>RIS r has no unread overflows of any type of monitor.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>RIS r has at least one unread overflow in at least one of the monitor types.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_31" msb="31" lsb="31"/>
  <fieldat id="fieldset_0-30_30" msb="30" lsb="30"/>
  <fieldat id="fieldset_0-29_16" msb="29" lsb="16"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND15" msb="15" lsb="15"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND14" msb="14" lsb="14"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND13" msb="13" lsb="13"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND12" msb="12" lsb="12"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND11" msb="11" lsb="11"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND10" msb="10" lsb="10"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND9" msb="9" lsb="9"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND8" msb="8" lsb="8"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND7" msb="7" lsb="7"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND6" msb="6" lsb="6"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND5" msb="5" lsb="5"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND4" msb="4" lsb="4"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND3" msb="3" lsb="3"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND2" msb="2" lsb="2"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND1" msb="1" lsb="1"/>
  <fieldat id="fieldset_0-15_0" label="RIS_PND0" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          


  
    
      <access_permission_text>
        <para>This register is within the MPAM feature page memory frames.</para>

      </access_permission_text>
      <access_permission_text>
        <para>In a system that supports Secure, Non-secure, Root, and Realm memory maps, there must be MPAM feature pages in all four address maps:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>MSMON_OFLOW_SR_s must only be accessible from the Secure MPAM feature page.</content>
</listitem><listitem><content>MSMON_OFLOW_SR_ns must only be accessible from the Non-secure MPAM feature page.</content>
</listitem><listitem><content>MSMON_OFLOW_SR_rt must only be accessible from the Root MPAM feature page.</content>
</listitem><listitem><content>MSMON_OFLOW_SR_rl must only be accessible from the Realm MPAM feature page.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>MSMON_OFLOW_SR_s, MSMON_OFLOW_SR_ns, MSMON_OFLOW_SR_rt, and MSMON_OFLOW_SR_rl must be separate registers:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>The Secure instance (MSMON_OFLOW_SR_s) accesses the monitor overflow status summary of Secure monitors.</content>
</listitem><listitem><content>The Non-secure instance (MSMON_OFLOW_SR_ns) accesses the monitor overflow status summary of Non-secure monitors.</content>
</listitem><listitem><content>The Root instance (MSMON_OFLOW_SR_rt) accesses the monitor overflow status summary of Root monitors.</content>
</listitem><listitem><content>The Realm instance (MSMON_OFLOW_SR_rl) accesses the monitor overflow status summary of Realm monitors.</content>
</listitem></list>
      </access_permission_text>






      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>