<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register execution_state="AArch64" is_register="True" is_internal="True" is_banked="False" is_stub_entry="False">
      <reg_short_name>VTTBR_EL2</reg_short_name>
        
        <reg_long_name>Virtualization Translation Table Base Register</reg_long_name>



      
      



          <reg_reset_value></reg_reset_value>

      <reg_mappings>
        



      
      <reg_mapping>
        
  

    

    <mapped_name filename="AArch32-vttbr.xml">VTTBR</mapped_name>
  <mapped_type>Architectural</mapped_type>
      <mapped_execution_state>AArch32</mapped_execution_state>
    <mapped_from_startbit>63</mapped_from_startbit>
    <mapped_from_endbit>0</mapped_from_endbit>
    <mapped_to_startbit>63</mapped_to_startbit>
    <mapped_to_endbit>0</mapped_to_endbit>
    <mapped_from_rangeset output="63:0">
      <range>
        <msb>63</msb>
        <lsb>0</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="63:0">
      <range>
        <msb>63</msb>
        <lsb>0</lsb>
      </range>
    </mapped_to_rangeset>

      </reg_mapping>

      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Holds the base address of the translation table for the initial lookup for stage 2 of an address translation in the EL1&amp;0 translation regime, and other information for this translation regime.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
            <reg_group>Virtual memory control registers</reg_group>
            <reg_group>Virtualization registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If EL2 is not implemented, this register is <arm-defined-word>RES0</arm-defined-word> from EL3.</para>

      </configuration_text>
      <configuration_text>
        <para>This register has no effect if EL2 is not enabled in the current Security state.</para>

      </configuration_text>
      <configuration_text>
        <para>VTTBR_EL2 is a 128-bit register that can also be accessed as a 64-bit value. If it is accessed as a 64-bit register, accesses read and write bits [63:0] and do not modify bits [127:64].</para>
      </configuration_text>

      </reg_configuration>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>VTTBR_EL2 is a:</para>

      </attributes_text>
      <attributes_text>
        <list type="unordered">
<listitem><content>128-bit register when FEAT_D128 is implemented and VTCR_EL2.D128 == 1</content>
</listitem><listitem><content>64-bit register when FEAT_D128 is not implemented or VTCR_EL2.D128 == 0</content>
</listitem></list>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="128">
  <fields_condition>When FEAT_D128 is implemented and VTCR_EL2.D128 == 1</fields_condition>
  <text_before_fields/>
  <field id="fieldset_0-127_88" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>127</field_msb>
    <field_lsb>88</field_lsb>
    <rel_range>127:88</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-87_80" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>BADDR</field_name>
    <field_msb>87</field_msb>
    <field_lsb>80</field_lsb>
    <rel_range>87:80, 47:5</rel_range>
    <field_description order="before"><para>Translation table base address:</para>
<list type="unordered">
<listitem><content>Bits A[55:x] of the stage 2 translation table base address bits are in register bits[87:80, 47:x].</content>
</listitem><listitem><content>Bits A[(x-1):0] of the stage 2 translation table base address are zero.</content>
</listitem></list>
<para>Address bit x is the minimum address bit required to align the translation table to the size of the table. x is calculated based on LOG2(StartTableSize), as described in VMSAv9-128. The smallest permitted value of x is 5.</para></field_description>
    <field_description order="after"><para>The BADDR field is split as follows:</para>
<list type="unordered">
<listitem><content>BADDR[50:43] is VTTBR_EL2[87:80].</content>
</listitem><listitem><content>BADDR[42:0] is VTTBR_EL2[47:5].</content>
</listitem></list></field_description>
    <field_rangesets>
      <field_rangeset>
        <field_msb>87</field_msb>
        <field_lsb>80</field_lsb>
      </field_rangeset>
      <field_rangeset>
        <field_msb>47</field_msb>
        <field_lsb>5</field_lsb>
      </field_rangeset>
    </field_rangesets>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-79_64" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>79</field_msb>
    <field_lsb>64</field_lsb>
    <rel_range>79:64</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-63_48" has_partial_fieldset="True" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>VMID</field_name>
    <field_msb>63</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>63:48</rel_range>
    <field_description order="before"/>
    <partial_fieldset>
      <fields id="fieldset_0-63_48_0" length="16">
        <fields_condition>When FEAT_VMID16 is implemented and VTCR_EL2.VS == 1</fields_condition>
        <text_before_fields/>
        <field id="fieldset_0-63_48_0-15_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
          <field_name>VMID</field_name>
          <field_msb>15</field_msb>
          <field_lsb>0</field_lsb>
          <rel_range>15:0</rel_range>
          <field_description order="before"><para>The VMID for the translation table.</para>
<para>If the implementation has an 8-bit VMID, bits [15:8] of this field are <arm-defined-word>RES0</arm-defined-word>.</para></field_description>
          <field_resets>
            <field_reset reset_type="Warm">
              <field_reset_standard_text>AU</field_reset_standard_text>
            </field_reset>
          </field_resets>
        </field>
        <text_after_fields/>
      </fields>
      <reg_fieldset length="16">
        <fields_condition>When FEAT_VMID16 is implemented and VTCR_EL2.VS == 1</fields_condition>
        <fieldat id="fieldset_0-63_48_0-15_0" msb="15" lsb="0"/>
      </reg_fieldset>
    </partial_fieldset>
    <partial_fieldset>
      <fields id="fieldset_0-63_48_1" length="16">
        <fields_condition>When FEAT_VMID16 is not implemented or VTCR_EL2.VS == 0</fields_condition>
        <text_before_fields/>
        <field id="fieldset_0-63_48_1-15_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
          <field_msb>15</field_msb>
          <field_lsb>8</field_lsb>
          <rel_range>15:8</rel_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
        </field>
        <field id="fieldset_0-63_48_1-7_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
          <field_name>VMID</field_name>
          <field_msb>7</field_msb>
          <field_lsb>0</field_lsb>
          <rel_range>7:0</rel_range>
          <field_description order="before"><para>The VMID for the translation table.</para>
<para>The VMID is 8 bits when any of the following are true:</para>
<list type="unordered">
<listitem><content>EL2 is using AArch32.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.VS is 0.</content>
</listitem><listitem><content><xref browsertext="FEAT_VMID16" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VMID16"/> is not implemented.</content>
</listitem></list></field_description>
          <field_resets>
            <field_reset reset_type="Warm">
              <field_reset_standard_text>AU</field_reset_standard_text>
            </field_reset>
          </field_resets>
        </field>
        <text_after_fields/>
      </fields>
      <reg_fieldset length="16">
        <fields_condition>When FEAT_VMID16 is not implemented or VTCR_EL2.VS == 0</fields_condition>
        <fieldat id="fieldset_0-63_48_1-15_8" msb="15" lsb="8"/>
        <fieldat id="fieldset_0-63_48_1-7_0" msb="7" lsb="0"/>
      </reg_fieldset>
    </partial_fieldset>
  </field>
  <field id="fieldset_0-47_5" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" is_expansion="True">
    <field_name>BADDR[42:0]</field_name>
    <field_msb>47</field_msb>
    <field_lsb>5</field_lsb>
    <rel_range>87:80, 47:5</rel_range>
    <field_description order="before"><para>This field is bits[42:0] of BADDR[50:0].</para>
<para>See BADDR[50:43] for the field description.</para></field_description>
  </field>
  <field id="fieldset_0-4_3" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>4</field_msb>
    <field_lsb>3</field_lsb>
    <rel_range>4:3</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-2_1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>SKL</field_name>
    <field_msb>2</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>2:1</rel_range>
    <field_description order="before">
      <para>Skip Level. Skip Level determines the number of levels to be skipped from the regular start level of the Non-Secure stage 2 translation table walk.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
          <para>Skip 0 level from the regular start level.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
          <para>Skip 1 level from the regular start level.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
          <para>Skip 2 levels from the regular start level.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
          <para>Skip 3 levels from the regular start level.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_0-0_0-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CnP</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Common not Private. This bit indicates whether each entry that is pointed to by VTTBR_EL2 is a member of a common set that can be used by every PE in the Inner Shareable domain for which the value of VTTBR_EL2.CnP is 1.</para>
    </field_description>
    <field_description order="after"><para>This bit is permitted to be cached in a TLB.</para>
<note><para>If the value of VTTBR_EL2.CnP bit is 1 on multiple PEs in the same Inner Shareable domain and those VTTBR_EL2s do not point to the same translation table entries when using the current VMID then the results of translations using VTTBR_EL2 are <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word>, see <xref browsertext="'CONSTRAINED UNPREDICTABLE behaviors due to caching of control or data values'" filename="appx_architectural_constraints_on_unpredictable__.fm" linkend="CEGHBJBH"/>.</para></note></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The translation table entries pointed to by VTTBR_EL2 are permitted to differ from the entries for VTTBR_EL2 for other PEs in the Inner Shareable domain. This is not affected by the value of the current VMID.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The translation table entries pointed to by VTTBR_EL2 are the same as the translation table entries for every other PE in the Inner Shareable domain for which the value of VTTBR_EL2.CnP is 1 and the VMID is the same as the current VMID.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_TTCNP is implemented</fields_condition>
  </field>
  <field id="fieldset_0-0_0-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <text_after_fields/>
</fields>



<fields id="fieldset_1" length="64">
  <fields_condition>When FEAT_D128 is not implemented or VTCR_EL2.D128 == 0</fields_condition>
  <text_before_fields/>
  <field id="fieldset_1-63_48" has_partial_fieldset="True" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>VMID</field_name>
    <field_msb>63</field_msb>
    <field_lsb>48</field_lsb>
    <rel_range>63:48</rel_range>
    <field_description order="before"/>
    <partial_fieldset>
      <fields id="fieldset_1-63_48_0" length="16">
        <fields_condition>When FEAT_VMID16 is implemented and VTCR_EL2.VS == 1</fields_condition>
        <text_before_fields/>
        <field id="fieldset_1-63_48_0-15_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
          <field_name>VMID</field_name>
          <field_msb>15</field_msb>
          <field_lsb>0</field_lsb>
          <rel_range>15:0</rel_range>
          <field_description order="before"><para>The VMID for the translation table.</para>
<para>If the implementation has an 8-bit VMID, bits [15:8] of this field are <arm-defined-word>RES0</arm-defined-word>.</para></field_description>
          <field_resets>
            <field_reset reset_type="Warm">
              <field_reset_standard_text>AU</field_reset_standard_text>
            </field_reset>
          </field_resets>
        </field>
        <text_after_fields/>
      </fields>
      <reg_fieldset length="16">
        <fields_condition>When FEAT_VMID16 is implemented and VTCR_EL2.VS == 1</fields_condition>
        <fieldat id="fieldset_1-63_48_0-15_0" msb="15" lsb="0"/>
      </reg_fieldset>
    </partial_fieldset>
    <partial_fieldset>
      <fields id="fieldset_1-63_48_1" length="16">
        <fields_condition>When FEAT_VMID16 is not implemented or VTCR_EL2.VS == 0</fields_condition>
        <text_before_fields/>
        <field id="fieldset_1-63_48_1-15_8" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
          <field_msb>15</field_msb>
          <field_lsb>8</field_lsb>
          <rel_range>15:8</rel_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
        </field>
        <field id="fieldset_1-63_48_1-7_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
          <field_name>VMID</field_name>
          <field_msb>7</field_msb>
          <field_lsb>0</field_lsb>
          <rel_range>7:0</rel_range>
          <field_description order="before"><para>The VMID for the translation table.</para>
<para>The VMID is 8 bits when any of the following are true:</para>
<list type="unordered">
<listitem><content>EL2 is using AArch32.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.VS is 0.</content>
</listitem><listitem><content><xref browsertext="FEAT_VMID16" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VMID16"/> is not implemented.</content>
</listitem></list></field_description>
          <field_resets>
            <field_reset reset_type="Warm">
              <field_reset_standard_text>AU</field_reset_standard_text>
            </field_reset>
          </field_resets>
        </field>
        <text_after_fields/>
      </fields>
      <reg_fieldset length="16">
        <fields_condition>When FEAT_VMID16 is not implemented or VTCR_EL2.VS == 0</fields_condition>
        <fieldat id="fieldset_1-63_48_1-15_8" msb="15" lsb="8"/>
        <fieldat id="fieldset_1-63_48_1-7_0" msb="7" lsb="0"/>
      </reg_fieldset>
    </partial_fieldset>
  </field>
  <field id="fieldset_1-47_1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False">
    <field_name>BADDR</field_name>
    <field_msb>47</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>47:1</rel_range>
    <field_description order="before"><para>Translation table base address, A[47:x] or A[51:x], bits[47:1].</para>
<note><para>If an OA size of more than 48 bits is in use, and the translation table has fewer than eight entries, the table must be aligned to 64 bytes. Otherwise the translation table must be aligned to the size of the table.</para></note><para>In an implementation that includes <xref browsertext="FEAT_LPA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVAandPA"/>, if the value of <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.PS is <binarynumber>0b110</binarynumber>, then:</para>
<list type="unordered">
<listitem><content>Register bits[47:z] hold bits[47:z] of the stage 2 translation table base address, where z is determined as follows:<list type="unordered">
<listitem><content>If x &gt;= 6 then z=x.</content>
</listitem><listitem><content>Otherwise, z=6.</content>
</listitem></list>
</content>
</listitem><listitem><content>Register bits[5:2] hold bits[51:48] of the stage 2 translation table base address.</content>
</listitem><listitem><content>When z&gt;x register bits[(z-1):x] are <arm-defined-word>RES0</arm-defined-word>, and bits[(z-1):x] of the translation table base address are zero.</content>
</listitem><listitem><content>When x&gt;6 register bits[(x-1):6] are <arm-defined-word>RES0</arm-defined-word>.</content>
</listitem><listitem><content>Register bit[1] is <arm-defined-word>RES0</arm-defined-word>.</content>
</listitem><listitem><content>Bits[5:2] of the stage 2 translation table base address are zero.</content>
</listitem><listitem><content>In an implementation that includes <xref browsertext="FEAT_TTCNP" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.TTCNP"/>, bit[0] of the stage 2 translation table base address is zero.</content>
</listitem></list>
<note><para>When the value of <register_link state="AArch64" id="AArch64-id_aa64mmfr0_el1.xml">ID_AA64MMFR0_EL1</register_link>.PARange indicates that the implementation does not support a 52 bit PA size, if a translation table lookup uses this register when the <xref browsertext="Effective value" filename="glossary.fm" linkend="CBAICCHA"/> of <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.PS is <binarynumber>0b110</binarynumber> and the value of register bits[5:2] is nonzero, an Address size fault is generated.
When the value of <register_link state="AArch64" id="AArch64-id_aa64mmfr0_el1.xml">ID_AA64MMFR0_EL1</register_link>.PARange indicates that the implementation supports a 56 bit PA size, bits [55:52] of the stage 2 translation table base address are zero.</para><para>If the Effective value of <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.PS is not <binarynumber>0b110</binarynumber> then:</para><list type="unordered"><listitem><content>Register bits[47:x] hold bits[47:x] of the stage 2 translation table base address.</content></listitem><listitem><content>Register bits[(x-1):1] are <arm-defined-word>RES0</arm-defined-word>.</content></listitem><listitem><content>If the implementation supports 52-bit PAs and IPAs then bits[51:48] of the translation table base addresses used in this stage of translation are <binarynumber>0b0000</binarynumber>.</content></listitem></list><para>If any VTTBR_EL2[47:0] bit that is defined as <arm-defined-word>RES0</arm-defined-word> has the value 1 when a translation table walk is performed using VTTBR_EL2, then the translation table base address might be misaligned, with effects that are <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word>, and must be one of the following:</para><list type="unordered"><listitem><content>Bits[x-1:0] of the translation table base address are treated as if all the bits are zero. The value read back from the corresponding register bits is either the value written to the register or zero.</content></listitem><listitem><content>The result of the calculation of an address for a translation table walk using this register can be corrupted in those bits that are nonzero.</content></listitem></list><para>The AArch64 Virtual Memory System Architecture chapter describes how x is calculated based on the value of <register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.T0SZ, the stage of translation, and the translation granule size.</para></note></field_description>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
  </field>
  <field id="fieldset_1-0_0-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>CnP</field_name>
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Common not Private. This bit indicates whether each entry that is pointed to by VTTBR_EL2 is a member of a common set that can be used by every PE in the Inner Shareable domain for which the value of VTTBR_EL2.CnP is 1.</para>
    </field_description>
    <field_description order="after"><para>This bit is permitted to be cached in a TLB.</para>
<note><para>If the value of VTTBR_EL2.CnP bit is 1 on multiple PEs in the same Inner Shareable domain and those VTTBR_EL2s do not point to the same translation table entries when using the current VMID then the results of translations using VTTBR_EL2 are <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word>, see <xref browsertext="'CONSTRAINED UNPREDICTABLE behaviors due to caching of control or data values'" filename="appx_architectural_constraints_on_unpredictable__.fm" linkend="CEGHBJBH"/>.</para></note></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>The translation table entries pointed to by VTTBR_EL2 are permitted to differ from the entries for VTTBR_EL2 for other PEs in the Inner Shareable domain. This is not affected by the value of the current VMID.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>The translation table entries pointed to by VTTBR_EL2 are the same as the translation table entries for every other PE in the Inner Shareable domain for which the value of VTTBR_EL2.CnP is 1 and the VMID is the same as the current VMID.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Warm">
        <field_reset_standard_text>AU</field_reset_standard_text>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_TTCNP is implemented</fields_condition>
  </field>
  <field id="fieldset_1-0_0-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <text_after_fields/>
</fields>





    
<reg_fieldset length="128">
  <fields_condition>When FEAT_D128 is implemented and VTCR_EL2.D128 == 1</fields_condition>
  <fieldat id="fieldset_0-127_88" msb="127" lsb="88"/>
  <fieldat id="fieldset_0-87_80" msb="87" lsb="80" label="BADDR[50:43]"/>
  <fieldat id="fieldset_0-79_64" msb="79" lsb="64"/>
  <fieldat id="fieldset_0-63_48" msb="63" lsb="48"/>
  <fieldat id="fieldset_0-47_5" msb="47" lsb="5" label="BADDR[42:0]"/>
  <fieldat id="fieldset_0-4_3" msb="4" lsb="3"/>
  <fieldat id="fieldset_0-2_1" msb="2" lsb="1"/>
  <fieldat id="fieldset_0-0_0-1" msb="0" lsb="0"/>
</reg_fieldset>

    
<reg_fieldset length="64">
  <fields_condition>When FEAT_D128 is not implemented or VTCR_EL2.D128 == 0</fields_condition>
  <fieldat id="fieldset_1-63_48" msb="63" lsb="48"/>
  <fieldat id="fieldset_1-47_1" msb="47" lsb="1"/>
  <fieldat id="fieldset_1-0_0-1" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          






        
        <access_mechanism accessor="MRS VTTBR_EL2" type="SystemAccessor">
            <encoding>
            <access_instruction>MRS &lt;Xt&gt;, VTTBR_EL2</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b100"/>
                
                <enc n="CRn" v="0b0010"/>
                
                <enc n="CRm" v="0b0001"/>
                
                <enc n="op2" v="0b000"/>
            </encoding>
            <access_permission>
                <ps name="MRS" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV&gt; == '11' then
        X[t, 64] = NVMem[0x020];
    elsif EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    X[t, 64] = VTTBR_EL2&lt;63:0&gt;;
elsif PSTATE.EL == EL3 then
    X[t, 64] = VTTBR_EL2&lt;63:0&gt;;
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>
        
        <access_mechanism accessor="MSRregister VTTBR_EL2" type="SystemAccessor">
            <encoding>
            <access_instruction>MSR VTTBR_EL2, &lt;Xt&gt;</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b100"/>
                
                <enc n="CRn" v="0b0010"/>
                
                <enc n="CRm" v="0b0001"/>
                
                <enc n="op2" v="0b000"/>
            </encoding>
            <access_permission>
                <ps name="MSRregister" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV&gt; == '11' then
        NVMem[0x020] = X[t, 64];
    elsif EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x18);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    VTTBR_EL2&lt;63:0&gt; = X[t, 64];
elsif PSTATE.EL == EL3 then
    VTTBR_EL2&lt;63:0&gt; = X[t, 64];
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>
        
        <access_mechanism accessor="MRRS VTTBR_EL2" type="SystemAccessor">
            <encoding>
            <access_instruction>MRRS &lt;Xt+1&gt;, &lt;Xt&gt;, VTTBR_EL2</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b100"/>
                
                <enc n="CRn" v="0b0010"/>
                
                <enc n="CRm" v="0b0001"/>
                
                <enc n="op2" v="0b000"/>
            </encoding>
            <access_condition>
When FEAT_D128 is implemented
            </access_condition>
            <access_permission>
                <ps name="MRRS" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV&gt; == '11' then
        (X[t + 1, 64], X[t, 64]) = Split(NVMem[0x020, 128], 64);
    elsif EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x14);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.D128En == '0' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.D128En == '0' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x14);
    else
        (X[t + 1, 64], X[t, 64]) = Split(VTTBR_EL2, 64);
elsif PSTATE.EL == EL3 then
    (X[t + 1, 64], X[t, 64]) = Split(VTTBR_EL2, 64);
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>
        
        <access_mechanism accessor="MSRRregister VTTBR_EL2" type="SystemAccessor">
            <encoding>
            <access_instruction>MSRR VTTBR_EL2, &lt;Xt+1&gt;, &lt;Xt&gt;</access_instruction>
                
                <enc n="op0" v="0b11"/>
                
                <enc n="op1" v="0b100"/>
                
                <enc n="CRn" v="0b0010"/>
                
                <enc n="CRm" v="0b0001"/>
                
                <enc n="op2" v="0b000"/>
            </encoding>
            <access_condition>
When FEAT_D128 is implemented
            </access_condition>
            <access_permission>
                <ps name="MSRRregister" sections="1" secttype="access_permission">
                <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; HCR_EL2.&lt;NV2,NV&gt; == '11' then
        NVMem[0x020, 128] = X[t + 1, 64]:X[t, 64];
    elsif EL2Enabled() &amp;&amp; HCR_EL2.NV == '1' then
        AArch64.SystemAccessTrap(EL2, 0x14);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    if Halted() &amp;&amp; HaveEL(EL3) &amp;&amp; EDSCR.SDD == '1' &amp;&amp; boolean IMPLEMENTATION_DEFINED "EL3 trap priority when SDD == '1'" &amp;&amp; SCR_EL3.D128En == '0' then
        UNDEFINED;
    elsif HaveEL(EL3) &amp;&amp; SCR_EL3.D128En == '0' then
        if Halted() &amp;&amp; EDSCR.SDD == '1' then
            UNDEFINED;
        else
            AArch64.SystemAccessTrap(EL3, 0x14);
    else
        VTTBR_EL2&lt;127:0&gt; = X[t + 1, 64]:X[t, 64];
elsif PSTATE.EL == EL3 then
    VTTBR_EL2&lt;127:0&gt; = X[t + 1, 64]:X[t, 64];
                </pstext>
                </ps>
            </access_permission>
        </access_mechanism>

      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:07; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>