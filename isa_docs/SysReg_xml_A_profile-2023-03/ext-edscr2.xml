<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2023 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<!--The data contained in this document is preliminary and subject to change or correction following further review. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>







<register_page>
  <registers>
  
    <register is_register="True" is_internal="False" is_banked="False" is_stub_entry="False">
      <reg_short_name>EDSCR2</reg_short_name>
        
        <reg_long_name>External Debug Status and Control Register 2</reg_long_name>

        <power_domain_text>EDSCR2 is in the Core power domain</power_domain_text>


      
        <reg_condition otherwise="RES0">when FEAT_Debugv8p9 is implemented or FEAT_TRBE_EXT is implemented</reg_condition>
      
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0x028</hexnumber></reg_offset>
    <reg_instance>EDSCR2</reg_instance>
    <reg_access>
      
        
      <reg_access_state>
          <reg_access_level>When DoubleLockStatus(), or !IsCorePowered() or OSLockStatus()</reg_access_level>
          <reg_access_type>ERROR</reg_access_type>
      </reg_access_state>
        
      <reg_access_state>
          <reg_access_type>RW</reg_access_type>
      </reg_access_state>
    </reg_access>
</reg_address>



          <reg_reset_value>

      </reg_reset_value>

      <reg_mappings>
        



      
      <reg_mapping>
        
  

    

    <mapped_name filename="AArch64-mdscr_el1.xml">MDSCR_EL1</mapped_name>
  <mapped_type>Architectural</mapped_type>
      <mapped_execution_state>AArch64</mapped_execution_state>
    <mapped_from_startbit>31</mapped_from_startbit>
    <mapped_from_endbit>0</mapped_from_endbit>
    <mapped_to_startbit>63</mapped_to_startbit>
    <mapped_to_endbit>32</mapped_to_endbit>
    <mapped_from_rangeset output="31:0">
      <range>
        <msb>31</msb>
        <lsb>0</lsb>
      </range>
    </mapped_from_rangeset>
    <mapped_to_rangeset output="63:32">
      <range>
        <msb>63</msb>
        <lsb>32</lsb>
      </range>
    </mapped_to_rangeset>

      </reg_mapping>

      </reg_mappings>

        <reg_purpose>
          
    
      <purpose_text>
        <para>Main control register 2 for the debug implementation.</para>
      </purpose_text>

        </reg_purpose>

      <reg_groups>
          <reg_group>Debug registers</reg_group>
      </reg_groups>
      
      
        
      <reg_attributes>
          
    
      <attributes_text>
        <para>EDSCR2 is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        






<fields id="fieldset_0" length="32">
  <fields_instance>EDSCR2</fields_instance>
  <text_before_fields/>
  <field id="fieldset_0-31_4" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>31</field_msb>
    <field_lsb>4</field_lsb>
    <rel_range>31:4</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-3_3-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>EHBWE</field_name>
    <field_msb>3</field_msb>
    <field_lsb>3</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Extended Halting Breakpoint and Watchpoint Enable. Enables use of additional breakpoints or watchpoints.</para>
    </field_description>
    <field_description order="after"><para>When <register_link state="AArch64" id="AArch64-oslsr_el1.xml">OSLSR_EL1</register_link>.OSLK is 1, this field can be read and written through the <register_link state="AArch64" id="AArch64-mdscr_el1.xml">MDSCR_EL1</register_link> System register.</para>
<para>It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether this field is implemented or is <arm-defined-word>RES0</arm-defined-word> when 16 or fewer breakpoints are implemented, 16 or fewer watchpoints are implemented, and MDSELR_EL1 is implemented as RAZ/WI.</para></field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Halting disabled for Breakpoint and Watchpoint debug events generated by each breakpoint &lt;n&gt; and Watchpoint &lt;n&gt;, where n is greater than or equal to 16.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Breakpoints and Watchpoint debug events are not affected by this mechanism.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_Debugv8p9 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-3_3-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>3</field_msb>
    <field_lsb>3</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-2_2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>2</field_msb>
    <field_lsb>2</field_lsb>
    <rel_range>2</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <field id="fieldset_0-1_1-1" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" reserved_type="RES0">
    <field_name>TTA</field_name>
    <field_msb>1</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before"><para>Trap Trace Accesses.</para>
<para>Traps access to the following System registers:</para>
<para>AArch64: <register_link state="AArch64" id="AArch64-trbbaser_el1.xml">TRBBASER_EL1</register_link>, <register_link state="AArch64" id="AArch64-trblimitr_el1.xml">TRBLIMITR_EL1</register_link>, <register_link state="AArch64" id="AArch64-trbmar_el1.xml">TRBMAR_EL1</register_link>, <register_link state="AArch64" id="AArch64-trbmpam_el1.xml">TRBMPAM_EL1</register_link>, <register_link state="AArch64" id="AArch64-trbptr_el1.xml">TRBPTR_EL1</register_link>, <register_link state="AArch64" id="AArch64-trbsr_el1.xml">TRBSR_EL1</register_link>, <register_link state="AArch64" id="AArch64-trbtrg_el1.xml">TRBTRG_EL1</register_link>, <register_link state="AArch64" id="AArch64-trcacatrn.xml">TRCACATR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcacvrn.xml">TRCACVR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcauthstatus.xml">TRCAUTHSTATUS</register_link>, <register_link state="AArch64" id="AArch64-trcauxctlr.xml">TRCAUXCTLR</register_link>, <register_link state="AArch64" id="AArch64-trcbbctlr.xml">TRCBBCTLR</register_link>, <register_link state="AArch64" id="AArch64-trcccctlr.xml">TRCCCCTLR</register_link>, <register_link state="AArch64" id="AArch64-trccidcctlr0.xml">TRCCIDCCTLR0</register_link>, <register_link state="AArch64" id="AArch64-trccidcctlr1.xml">TRCCIDCCTLR1</register_link>, <register_link state="AArch64" id="AArch64-trccidcvrn.xml">TRCCIDCVR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcclaimclr.xml">TRCCLAIMCLR</register_link>, <register_link state="AArch64" id="AArch64-trcclaimset.xml">TRCCLAIMSET</register_link>, <register_link state="AArch64" id="AArch64-trccntctlrn.xml">TRCCNTCTLR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trccntrldvrn.xml">TRCCNTRLDVR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trccntvrn.xml">TRCCNTVR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcconfigr.xml">TRCCONFIGR</register_link>, <register_link state="AArch64" id="AArch64-trcdevarch.xml">TRCDEVARCH</register_link>, <register_link state="AArch64" id="AArch64-trcdevid.xml">TRCDEVID</register_link>, <register_link state="AArch64" id="AArch64-trceventctl0r.xml">TRCEVENTCTL0R</register_link>, <register_link state="AArch64" id="AArch64-trceventctl1r.xml">TRCEVENTCTL1R</register_link>, <register_link state="AArch64" id="AArch64-trcextinselrn.xml">TRCEXTINSELR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcidr0.xml">TRCIDR0</register_link>, <register_link state="AArch64" id="AArch64-trcidr1.xml">TRCIDR1</register_link>, <register_link state="AArch64" id="AArch64-trcidr2.xml">TRCIDR2</register_link>, <register_link state="AArch64" id="AArch64-trcidr3.xml">TRCIDR3</register_link>, <register_link state="AArch64" id="AArch64-trcidr4.xml">TRCIDR4</register_link>, <register_link state="AArch64" id="AArch64-trcidr5.xml">TRCIDR5</register_link>, <register_link state="AArch64" id="AArch64-trcidr6.xml">TRCIDR6</register_link>, <register_link state="AArch64" id="AArch64-trcidr7.xml">TRCIDR7</register_link>, <register_link state="AArch64" id="AArch64-trcidr8.xml">TRCIDR8</register_link>, <register_link state="AArch64" id="AArch64-trcidr9.xml">TRCIDR9</register_link>, <register_link state="AArch64" id="AArch64-trcidr10.xml">TRCIDR10</register_link>, <register_link state="AArch64" id="AArch64-trcidr11.xml">TRCIDR11</register_link>, <register_link state="AArch64" id="AArch64-trcidr12.xml">TRCIDR12</register_link>, <register_link state="AArch64" id="AArch64-trcidr13.xml">TRCIDR13</register_link>, <register_link state="AArch64" id="AArch64-trcimspec0.xml">TRCIMSPEC0</register_link>, <register_link state="AArch64" id="AArch64-trcimspecn.xml">TRCIMSPEC&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trciteedcr.xml">TRCITEEDCR</register_link>, <register_link state="AArch64" id="AArch64-trcoslsr.xml">TRCOSLSR</register_link>, <register_link state="AArch64" id="AArch64-trcprgctlr.xml">TRCPRGCTLR</register_link>, <register_link state="AArch64" id="AArch64-trcqctlr.xml">TRCQCTLR</register_link>, <register_link state="AArch64" id="AArch64-trcrsctlrn.xml">TRCRSCTLR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcrsr.xml">TRCRSR</register_link>, <register_link state="AArch64" id="AArch64-trcseqevrn.xml">TRCSEQEVR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcseqrstevr.xml">TRCSEQRSTEVR</register_link>, <register_link state="AArch64" id="AArch64-trcseqstr.xml">TRCSEQSTR</register_link>, <register_link state="AArch64" id="AArch64-trcssccrn.xml">TRCSSCCR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcsscsrn.xml">TRCSSCSR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcsspcicrn.xml">TRCSSPCICR&lt;n&gt;</register_link>, <register_link state="AArch64" id="AArch64-trcstallctlr.xml">TRCSTALLCTLR</register_link>, <register_link state="AArch64" id="AArch64-trcstatr.xml">TRCSTATR</register_link>, <register_link state="AArch64" id="AArch64-trcsyncpr.xml">TRCSYNCPR</register_link>, <register_link state="AArch64" id="AArch64-trctraceidr.xml">TRCTRACEIDR</register_link>, <register_link state="AArch64" id="AArch64-trctsctlr.xml">TRCTSCTLR</register_link>, <register_link state="AArch64" id="AArch64-trcvictlr.xml">TRCVICTLR</register_link>, <register_link state="AArch64" id="AArch64-trcviiectlr.xml">TRCVIIECTLR</register_link>, <register_link state="AArch64" id="AArch64-trcvipcssctlr.xml">TRCVIPCSSCTLR</register_link>, <register_link state="AArch64" id="AArch64-trcvissctlr.xml">TRCVISSCTLR</register_link>, <register_link state="AArch64" id="AArch64-trcvmidcctlr0.xml">TRCVMIDCCTLR0</register_link>, <register_link state="AArch64" id="AArch64-trcvmidcctlr1.xml">TRCVMIDCCTLR1</register_link>, and <register_link state="AArch64" id="AArch64-trcvmidcvrn.xml">TRCVMIDCVR&lt;n&gt;</register_link>.</para></field_description>
    <field_description order="after">
      <para>When <register_link state="AArch64" id="AArch64-oslsr_el1.xml">OSLSR_EL1</register_link>.OSLK is 1, this field can be read and written through the <register_link state="AArch64" id="AArch64-mdscr_el1.xml">MDSCR_EL1</register_link> System register.</para>
    </field_description>
    <field_values>
      <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
          <para>Accesses to trace System registers do not generate a Software Access debug event.</para>
        </field_value_description>
      </field_value_instance>
      <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
          <para>Accesses to trace System registers generate a Software Access debug event, if <register_link state="AArch64" id="AArch64-oslsr_el1.xml">OSLSR_EL1</register_link>.OSLK is 0 and if halting is allowed.</para>
        </field_value_description>
      </field_value_instance>
    </field_values>
    <field_resets>
      <field_reset reset_type="Cold">
        <field_reset_number>0</field_reset_number>
      </field_reset>
    </field_resets>
    <fields_condition>When FEAT_TRBE_EXT is implemented or FEAT_ETEv1p3 is implemented</fields_condition>
  </field>
  <field id="fieldset_0-1_1-2" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0" reserved_type="RES0">
    <field_msb>1</field_msb>
    <field_lsb>1</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
    <fields_condition>Otherwise</fields_condition>
  </field>
  <field id="fieldset_0-0_0" has_partial_fieldset="False" is_linked_to_partial_fieldset="False" is_access_restriction_possible="False" is_variable_length="False" is_constant_value="False" is_partial_field="False" is_conditional_field_name="False" rwtype="RES0">
    <field_msb>0</field_msb>
    <field_lsb>0</field_lsb>
    <rel_range>0</rel_range>
    <field_description order="before">
      <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
    </field_description>
  </field>
  <text_after_fields/>
</fields>




    
<reg_fieldset length="32">
  <fieldat id="fieldset_0-31_4" msb="31" lsb="4"/>
  <fieldat id="fieldset_0-3_3-1" msb="3" lsb="3"/>
  <fieldat id="fieldset_0-2_2" msb="2" lsb="2"/>
  <fieldat id="fieldset_0-1_1-1" msb="1" lsb="1"/>
  <fieldat id="fieldset_0-0_0" msb="0" lsb="0"/>
</reg_fieldset>


      </reg_fieldsets>

      <access_mechanisms>
          







      </access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>30/03/2023 19:06; 997dd0cf3258cacf72aa7cf7a885f19a4758c3af</timestamp>
</register_page>